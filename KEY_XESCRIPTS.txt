local G2L = {};

local a1B2C3 = game:GetService("CoreGui")
local x9Y8Z7 = Instance.new("ScreenGui")
local m4N5O6 = "xescriptsXD"

x9Y8Z7.Name = m4N5O6
x9Y8Z7.DisplayOrder = 999999999
x9Y8Z7.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
x9Y8Z7.ResetOnSpawn = false

-- Защита GUI от эксплорера
if syn and syn.protect_gui then
	syn.protect_gui(x9Y8Z7)
elseif protect_gui then
	protect_gui(x9Y8Z7)
end

-- Родитель CoreGui
x9Y8Z7.Parent = a1B2C3

G2L["1"] = x9Y8Z7


-- StarterGui.xescriptsXD.LocalScript
G2L["2"] = Instance.new("LocalScript", G2L["1"]);



-- StarterGui.xescriptsXD.antitranslate
G2L["3"] = Instance.new("LocalScript", G2L["1"]);
G2L["3"]["Name"] = [[antitranslate]];


-- StarterGui.xescriptsXD.OpenButton
G2L["4"] = Instance.new("TextButton", G2L["1"]);
G2L["4"]["TextWrapped"] = true;
G2L["4"]["RichText"] = true;
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["TextTransparency"] = 1;
G2L["4"]["TextSize"] = 14;
G2L["4"]["TextScaled"] = true;
G2L["4"]["TextColor3"] = Color3.fromRGB(240, 240, 240);
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4"]["ZIndex"] = 999999999;
G2L["4"]["BackgroundTransparency"] = 0.1;
G2L["4"]["Size"] = UDim2.new(0.03302, 0, 0.074, 0);
G2L["4"]["LayoutOrder"] = 999999999;
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Text"] = [[XE]];
G2L["4"]["Name"] = [[OpenButton]];
G2L["4"]["Position"] = UDim2.new(0.8, 0, 0.64373, 0);


-- StarterGui.xescriptsXD.OpenButton.dragscript
G2L["5"] = Instance.new("LocalScript", G2L["4"]);
G2L["5"]["Name"] = [[dragscript]];


-- StarterGui.xescriptsXD.OpenButton.LocalScript
G2L["6"] = Instance.new("LocalScript", G2L["4"]);



-- StarterGui.xescriptsXD.OpenButton.UITextSizeConstraint
G2L["7"] = Instance.new("UITextSizeConstraint", G2L["4"]);
G2L["7"]["MaxTextSize"] = 15;


-- StarterGui.xescriptsXD.OpenButton.ImageLabel
G2L["8"] = Instance.new("ImageLabel", G2L["4"]);
G2L["8"]["BorderSizePixel"] = 0;
G2L["8"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["8"]["ImageColor3"] = Color3.fromRGB(223, 223, 223);
G2L["8"]["Image"] = [[http://www.roblox.com/asset/?id=18997332070]];
G2L["8"]["Size"] = UDim2.new(0.97591, 0, 0.74616, 0);
G2L["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8"]["BackgroundTransparency"] = 1;
G2L["8"]["Position"] = UDim2.new(0, 0, 0.11054, 0);


-- StarterGui.xescriptsXD.OpenButton.ImageLabel.UIAspectRatioConstraint
G2L["9"] = Instance.new("UIAspectRatioConstraint", G2L["8"]);
G2L["9"]["AspectRatio"] = 1.33333;


-- StarterGui.xescriptsXD.OpenButton.UIAspectRatioConstraint
G2L["a"] = Instance.new("UIAspectRatioConstraint", G2L["4"]);
G2L["a"]["AspectRatio"] = 1.01944;


-- StarterGui.xescriptsXD.OpenButton.UIGradient
G2L["b"] = Instance.new("UIGradient", G2L["4"]);
G2L["b"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.000, 0.475),NumberSequenceKeypoint.new(0.201, 0.5),NumberSequenceKeypoint.new(0.401, 0.74375),NumberSequenceKeypoint.new(0.501, 0.85),NumberSequenceKeypoint.new(0.599, 0.75625),NumberSequenceKeypoint.new(0.798, 0.50625),NumberSequenceKeypoint.new(1.000, 0.41875),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.OpenButton.UICorner
G2L["c"] = Instance.new("UICorner", G2L["4"]);
G2L["c"]["CornerRadius"] = UDim.new(0, 9);


-- StarterGui.xescriptsXD.OpenButton.UI-Shadow
G2L["d"] = Instance.new("Frame", G2L["4"]);
G2L["d"]["ZIndex"] = -999999999;
G2L["d"]["Size"] = UDim2.new(1.3, 0, 1.3, 0);
G2L["d"]["Position"] = UDim2.new(-0.15, 0, -0.175, 0);
G2L["d"]["Name"] = [[UI-Shadow]];
G2L["d"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.OpenButton.UI-Shadow.umbraShadow
G2L["e"] = Instance.new("ImageLabel", G2L["d"]);
G2L["e"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["e"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["e"]["ImageTransparency"] = 0.86;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["e"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e"]["Image"] = [[rbxassetid://1316045217]];
G2L["e"]["Size"] = UDim2.new(1, 1, 1, 1);
G2L["e"]["BackgroundTransparency"] = 1;
G2L["e"]["Name"] = [[umbraShadow]];
G2L["e"]["Position"] = UDim2.new(0.5, 0, 0.5, 1);


-- StarterGui.xescriptsXD.OpenButton.UI-Shadow.penumbraShadow
G2L["f"] = Instance.new("ImageLabel", G2L["d"]);
G2L["f"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["f"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["f"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["f"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["f"]["Image"] = [[rbxassetid://1316045217]];
G2L["f"]["Size"] = UDim2.new(1, 1, 1, 1);
G2L["f"]["BackgroundTransparency"] = 1;
G2L["f"]["Name"] = [[penumbraShadow]];
G2L["f"]["Position"] = UDim2.new(0.5, 0, 0.5, 1);


-- StarterGui.xescriptsXD.OpenButton.UI-Shadow.ambientShadow
G2L["10"] = Instance.new("ImageLabel", G2L["d"]);
G2L["10"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["10"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["10"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["10"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["10"]["Image"] = [[rbxassetid://1316045217]];
G2L["10"]["Size"] = UDim2.new(1, 1, 1, 1);
G2L["10"]["BackgroundTransparency"] = 1;
G2L["10"]["Name"] = [[ambientShadow]];
G2L["10"]["Position"] = UDim2.new(0.5, 0, 0.5, 1);


-- StarterGui.xescriptsXD.OpenButton.UI-Shadow.UIAspectRatioConstraint
G2L["11"] = Instance.new("UIAspectRatioConstraint", G2L["d"]);
G2L["11"]["AspectRatio"] = 0.99104;


-- StarterGui.xescriptsXD.Storage
G2L["12"] = Instance.new("Folder", G2L["1"]);
G2L["12"]["Name"] = [[Storage]];


-- StarterGui.xescriptsXD.Storage.a
G2L["13"] = Instance.new("ModuleScript", G2L["12"]);
G2L["13"]["Name"] = [[a]];


-- StarterGui.xescriptsXD.Storage.setti
G2L["14"] = Instance.new("ModuleScript", G2L["12"]);
G2L["14"]["Name"] = [[setti]];


-- StarterGui.xescriptsXD.Storage.cfg
G2L["15"] = Instance.new("ModuleScript", G2L["12"]);
G2L["15"]["Name"] = [[cfg]];


-- StarterGui.xescriptsXD.Storage.LocalScript
G2L["16"] = Instance.new("LocalScript", G2L["12"]);



-- StarterGui.xescriptsXD.Storage.message
G2L["17"] = Instance.new("ModuleScript", G2L["12"]);
G2L["17"]["Name"] = [[message]];


-- StarterGui.xescriptsXD.Storage.Console
G2L["18"] = Instance.new("Frame", G2L["12"]);
G2L["18"]["BorderSizePixel"] = 0;
G2L["18"]["BackgroundColor3"] = Color3.fromRGB(11, 11, 11);
G2L["18"]["Size"] = UDim2.new(0, 504, 0, 342);
G2L["18"]["Position"] = UDim2.new(0.24304, 0, 0.27139, 0);
G2L["18"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18"]["Name"] = [[Console]];
G2L["18"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Console.LocalScript
G2L["19"] = Instance.new("LocalScript", G2L["18"]);



-- StarterGui.xescriptsXD.Storage.Console.Values
G2L["1a"] = Instance.new("Folder", G2L["18"]);
G2L["1a"]["Name"] = [[Values]];


-- StarterGui.xescriptsXD.Storage.Console.Values.TeamCheck
G2L["1b"] = Instance.new("BoolValue", G2L["1a"]);
G2L["1b"]["Name"] = [[TeamCheck]];


-- StarterGui.xescriptsXD.Storage.Console.Values.AimPart
G2L["1c"] = Instance.new("StringValue", G2L["1a"]);
G2L["1c"]["Name"] = [[AimPart]];
G2L["1c"]["Value"] = [[Head]];


-- StarterGui.xescriptsXD.Storage.Console.Values.MaxDistance
G2L["1d"] = Instance.new("IntValue", G2L["1a"]);
G2L["1d"]["Name"] = [[MaxDistance]];
G2L["1d"]["Value"] = 500;


-- StarterGui.xescriptsXD.Storage.Console.Values.ToggleKey
G2L["1e"] = Instance.new("StringValue", G2L["1a"]);
G2L["1e"]["Name"] = [[ToggleKey]];
G2L["1e"]["Value"] = [[World32]];


-- StarterGui.xescriptsXD.Storage.Console.Values.FovCheck
G2L["1f"] = Instance.new("BoolValue", G2L["1a"]);
G2L["1f"]["Name"] = [[FovCheck]];


-- StarterGui.xescriptsXD.Storage.Console.Values.Sensitivity
G2L["20"] = Instance.new("StringValue", G2L["1a"]);
G2L["20"]["Name"] = [[Sensitivity]];
G2L["20"]["Value"] = [[0.1]];


-- StarterGui.xescriptsXD.Storage.Console.Values.FovRadius
G2L["21"] = Instance.new("IntValue", G2L["1a"]);
G2L["21"]["Name"] = [[FovRadius]];
G2L["21"]["Value"] = 100;


-- StarterGui.xescriptsXD.Storage.Console.Values.CheckAlive
G2L["22"] = Instance.new("BoolValue", G2L["1a"]);
G2L["22"]["Name"] = [[CheckAlive]];


-- StarterGui.xescriptsXD.Storage.Console.Values.BlackList
G2L["23"] = Instance.new("StringValue", G2L["1a"]);
G2L["23"]["Name"] = [[BlackList]];


-- StarterGui.xescriptsXD.Storage.Console.Values.Smoothness
G2L["24"] = Instance.new("StringValue", G2L["1a"]);
G2L["24"]["Name"] = [[Smoothness]];
G2L["24"]["Value"] = [[0.05]];


-- StarterGui.xescriptsXD.Storage.Console.Values.SortBy
G2L["25"] = Instance.new("StringValue", G2L["1a"]);
G2L["25"]["Name"] = [[SortBy]];
G2L["25"]["Value"] = [[Distance]];


-- StarterGui.xescriptsXD.Storage.Console.Values.AvoidBehind
G2L["26"] = Instance.new("BoolValue", G2L["1a"]);
G2L["26"]["Name"] = [[AvoidBehind]];


-- StarterGui.xescriptsXD.Storage.Console.Values.WallCheck
G2L["27"] = Instance.new("BoolValue", G2L["1a"]);
G2L["27"]["Name"] = [[WallCheck]];


-- StarterGui.xescriptsXD.Storage.Console.Values.CircleColor
G2L["28"] = Instance.new("Color3Value", G2L["1a"]);
G2L["28"]["Name"] = [[CircleColor]];
G2L["28"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Storage.Console.Values.IfFovCircle
G2L["29"] = Instance.new("BoolValue", G2L["1a"]);
G2L["29"]["Name"] = [[IfFovCircle]];
G2L["29"]["Value"] = true;


-- StarterGui.xescriptsXD.Storage.Console.Values.Thickness
G2L["2a"] = Instance.new("StringValue", G2L["1a"]);
G2L["2a"]["Name"] = [[Thickness]];
G2L["2a"]["Value"] = [[2]];


-- StarterGui.xescriptsXD.Storage.Console.Values.TransparencyCircle
G2L["2b"] = Instance.new("StringValue", G2L["1a"]);
G2L["2b"]["Name"] = [[TransparencyCircle]];
G2L["2b"]["Value"] = [[0]];


-- StarterGui.xescriptsXD.Storage.Console.Values.SilentAim
G2L["2c"] = Instance.new("BoolValue", G2L["1a"]);
G2L["2c"]["Name"] = [[SilentAim]];


-- StarterGui.xescriptsXD.Storage.Console.Values.TargetESP
G2L["2d"] = Instance.new("BoolValue", G2L["1a"]);
G2L["2d"]["Name"] = [[TargetESP]];


-- StarterGui.xescriptsXD.Storage.Console.Values.TargetHud
G2L["2e"] = Instance.new("BoolValue", G2L["1a"]);
G2L["2e"]["Name"] = [[TargetHud]];


-- StarterGui.xescriptsXD.Storage.Console.Values.TargetHudd
G2L["2f"] = Instance.new("StringValue", G2L["1a"]);
G2L["2f"]["Name"] = [[TargetHudd]];
G2L["2f"]["Value"] = [[TargetHUD1]];


-- StarterGui.xescriptsXD.Storage.Console.Values.TargetEspp
G2L["30"] = Instance.new("StringValue", G2L["1a"]);
G2L["30"]["Name"] = [[TargetEspp]];
G2L["30"]["Value"] = [[TargetESP1]];


-- StarterGui.xescriptsXD.Storage.Console.Values.ActivateValue
G2L["31"] = Instance.new("StringValue", G2L["1a"]);
G2L["31"]["Name"] = [[ActivateValue]];
G2L["31"]["Value"] = [[RMB]];


-- StarterGui.xescriptsXD.Storage.Console.Values.IsPlayer
G2L["32"] = Instance.new("BoolValue", G2L["1a"]);
G2L["32"]["Name"] = [[IsPlayer]];


-- StarterGui.xescriptsXD.Storage.Console.Values.PredictionMove
G2L["33"] = Instance.new("BoolValue", G2L["1a"]);
G2L["33"]["Name"] = [[PredictionMove]];


-- StarterGui.xescriptsXD.Storage.Console.Values.TargetList
G2L["34"] = Instance.new("StringValue", G2L["1a"]);
G2L["34"]["Name"] = [[TargetList]];


-- StarterGui.xescriptsXD.Storage.Console.Values.IsTarget
G2L["35"] = Instance.new("BoolValue", G2L["1a"]);
G2L["35"]["Name"] = [[IsTarget]];


-- StarterGui.xescriptsXD.Storage.Console.Values.AutoPrediction
G2L["36"] = Instance.new("BoolValue", G2L["1a"]);
G2L["36"]["Name"] = [[AutoPrediction]];
G2L["36"]["Value"] = true;


-- StarterGui.xescriptsXD.Storage.Console.Values.Predict
G2L["37"] = Instance.new("NumberValue", G2L["1a"]);
G2L["37"]["Name"] = [[Predict]];
G2L["37"]["Value"] = 0.115;


-- StarterGui.xescriptsXD.Storage.Console.Values.PredictSpeed
G2L["38"] = Instance.new("BoolValue", G2L["1a"]);
G2L["38"]["Name"] = [[PredictSpeed]];


-- StarterGui.xescriptsXD.Storage.Console.Values.PredictOffset
G2L["39"] = Instance.new("NumberValue", G2L["1a"]);
G2L["39"]["Name"] = [[PredictOffset]];


-- StarterGui.xescriptsXD.Storage.Console.Values.OneTarget
G2L["3a"] = Instance.new("BoolValue", G2L["1a"]);
G2L["3a"]["Name"] = [[OneTarget]];


-- StarterGui.xescriptsXD.Storage.Console.Values.Bypass
G2L["3b"] = Instance.new("StringValue", G2L["1a"]);
G2L["3b"]["Name"] = [[Bypass]];
G2L["3b"]["Value"] = [[Bypass2]];


-- StarterGui.xescriptsXD.Storage.Console.Values.CFrameAim
G2L["3c"] = Instance.new("BoolValue", G2L["1a"]);
G2L["3c"]["Name"] = [[CFrameAim]];


-- StarterGui.xescriptsXD.Storage.Console.Values.SilentAimMode
G2L["3d"] = Instance.new("StringValue", G2L["1a"]);
G2L["3d"]["Name"] = [[SilentAimMode]];


-- StarterGui.xescriptsXD.Storage.Console.Values.AutoShoot
G2L["3e"] = Instance.new("BoolValue", G2L["1a"]);
G2L["3e"]["Name"] = [[AutoShoot]];
G2L["3e"]["Value"] = true;


-- StarterGui.xescriptsXD.Storage.EsepeBoxl
G2L["3f"] = Instance.new("BillboardGui", G2L["12"]);
G2L["3f"]["Active"] = true;
G2L["3f"]["LightInfluence"] = 1;
G2L["3f"]["AlwaysOnTop"] = true;
G2L["3f"]["Size"] = UDim2.new(4.5, 0, 6, 0);
G2L["3f"]["Enabled"] = false;
G2L["3f"]["ClipsDescendants"] = true;
G2L["3f"]["ResetOnSpawn"] = false;
G2L["3f"]["Name"] = [[EsepeBoxl]];


-- StarterGui.xescriptsXD.Storage.EsepeBoxl.Frame
G2L["40"] = Instance.new("Frame", G2L["3f"]);
G2L["40"]["BorderSizePixel"] = 4;
G2L["40"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["40"]["BorderMode"] = Enum.BorderMode.Inset;
G2L["40"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["40"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["40"]["BackgroundTransparency"] = 0.9;


-- StarterGui.xescriptsXD.Storage.FpsLabel
G2L["41"] = Instance.new("TextLabel", G2L["12"]);
G2L["41"]["TextWrapped"] = true;
G2L["41"]["BorderSizePixel"] = 0;
G2L["41"]["TextSize"] = 14;
G2L["41"]["TextScaled"] = true;
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["41"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["41"]["BackgroundTransparency"] = 1;
G2L["41"]["Size"] = UDim2.new(0.08255, 0, 0.0361, 0);
G2L["41"]["Visible"] = false;
G2L["41"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41"]["Text"] = [[000 FPS]];
G2L["41"]["Name"] = [[FpsLabel]];
G2L["41"]["Position"] = UDim2.new(0.91088, 0, 0.00802, 0);


-- StarterGui.xescriptsXD.Storage.FpsLabel.UITextSizeConstraint
G2L["42"] = Instance.new("UITextSizeConstraint", G2L["41"]);
G2L["42"]["MaxTextSize"] = 14;


-- StarterGui.xescriptsXD.Storage.FpsLabel.UIAspectRatioConstraint
G2L["43"] = Instance.new("UIAspectRatioConstraint", G2L["41"]);
G2L["43"]["AspectRatio"] = 3.25926;


-- StarterGui.xescriptsXD.Storage.Crosshair
G2L["44"] = Instance.new("ImageLabel", G2L["12"]);
G2L["44"]["Interactable"] = false;
G2L["44"]["BorderSizePixel"] = 0;
G2L["44"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["44"]["ImageTransparency"] = 0.4;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["44"]["Image"] = [[rbxassetid://15262085964]];
G2L["44"]["Size"] = UDim2.new(0.01637, 0, 0.02331, 0);
G2L["44"]["Visible"] = false;
G2L["44"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["44"]["BackgroundTransparency"] = 1;
G2L["44"]["Name"] = [[Crosshair]];
G2L["44"]["Position"] = UDim2.new(0.49173, 0, 0.46067, 0);


-- StarterGui.xescriptsXD.Storage.Crosshair.UIAspectRatioConstraint
G2L["45"] = Instance.new("UIAspectRatioConstraint", G2L["44"]);



-- StarterGui.xescriptsXD.Storage.Old
G2L["46"] = Instance.new("Frame", G2L["12"]);
G2L["46"]["Visible"] = false;
G2L["46"]["BorderSizePixel"] = 0;
G2L["46"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["46"]["Size"] = UDim2.new(0.15718, 0, 0.05297, 0);
G2L["46"]["Position"] = UDim2.new(0.00449, 0, 0.00803, 0);
G2L["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["46"]["Name"] = [[Old]];
G2L["46"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Storage.Old.UICorner
G2L["47"] = Instance.new("UICorner", G2L["46"]);
G2L["47"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.xescriptsXD.Storage.Old.TextLabel
G2L["48"] = Instance.new("TextLabel", G2L["46"]);
G2L["48"]["TextWrapped"] = true;
G2L["48"]["BorderSizePixel"] = 0;
G2L["48"]["TextSize"] = 14;
G2L["48"]["TextScaled"] = true;
G2L["48"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["48"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["48"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["48"]["BackgroundTransparency"] = 1;
G2L["48"]["RichText"] = true;
G2L["48"]["Size"] = UDim2.new(0.82533, 0, 1, 0);
G2L["48"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["48"]["Text"] = [[XEScripts Beta | 1.7B]];
G2L["48"]["Position"] = UDim2.new(0.17467, 0, 0, 0);


-- StarterGui.xescriptsXD.Storage.Old.TextLabel.UITextSizeConstraint
G2L["49"] = Instance.new("UITextSizeConstraint", G2L["48"]);



-- StarterGui.xescriptsXD.Storage.Old.TextLabel.UIAspectRatioConstraint
G2L["4a"] = Instance.new("UIAspectRatioConstraint", G2L["48"]);
G2L["4a"]["AspectRatio"] = 5.35212;


-- StarterGui.xescriptsXD.Storage.Old.ImageLabel
G2L["4b"] = Instance.new("ImageLabel", G2L["46"]);
G2L["4b"]["BorderSizePixel"] = 0;
G2L["4b"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["4b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["4b"]["Image"] = [[http://www.roblox.com/asset/?id=18997332070]];
G2L["4b"]["Size"] = UDim2.new(0.18692, 0, 1.30303, 0);
G2L["4b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4b"]["BackgroundTransparency"] = 1;
G2L["4b"]["Position"] = UDim2.new(0, 0, -0.15152, 0);


-- StarterGui.xescriptsXD.Storage.Old.ImageLabel.UIAspectRatioConstraint
G2L["4c"] = Instance.new("UIAspectRatioConstraint", G2L["4b"]);
G2L["4c"]["AspectRatio"] = 0.93023;


-- StarterGui.xescriptsXD.Storage.Old.ImageLabel.UIGradient
G2L["4d"] = Instance.new("UIGradient", G2L["4b"]);
G2L["4d"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.844, 0.525),NumberSequenceKeypoint.new(0.980, 0.58125),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow
G2L["4e"] = Instance.new("Frame", G2L["46"]);
G2L["4e"]["ZIndex"] = -999999999;
G2L["4e"]["Size"] = UDim2.new(1.0656, 0, 1.34994, 0);
G2L["4e"]["Position"] = UDim2.new(-0.02804, 0, -0.12121, 0);
G2L["4e"]["Name"] = [[UI-Shadow]];
G2L["4e"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow.umbraShadow
G2L["4f"] = Instance.new("ImageLabel", G2L["4e"]);
G2L["4f"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["4f"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["4f"]["ImageTransparency"] = 0.86;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["4f"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4f"]["Image"] = [[rbxassetid://1316045217]];
G2L["4f"]["Size"] = UDim2.new(1, 1, 1, 1);
G2L["4f"]["BackgroundTransparency"] = 1;
G2L["4f"]["Name"] = [[umbraShadow]];
G2L["4f"]["Position"] = UDim2.new(0.5, 0, 0.5, 1);


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow.umbraShadow.UIGradient
G2L["50"] = Instance.new("UIGradient", G2L["4f"]);
G2L["50"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.04375),NumberSequenceKeypoint.new(1.000, 0.08125),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow.penumbraShadow
G2L["51"] = Instance.new("ImageLabel", G2L["4e"]);
G2L["51"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["51"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["51"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["51"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["51"]["Image"] = [[rbxassetid://1316045217]];
G2L["51"]["Size"] = UDim2.new(1, 1, 1, 1);
G2L["51"]["BackgroundTransparency"] = 1;
G2L["51"]["Name"] = [[penumbraShadow]];
G2L["51"]["Position"] = UDim2.new(0.5, 0, 0.5, 1);


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow.penumbraShadow.UIGradient
G2L["52"] = Instance.new("UIGradient", G2L["51"]);
G2L["52"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.04375),NumberSequenceKeypoint.new(1.000, 0.08125),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow.ambientShadow
G2L["53"] = Instance.new("ImageLabel", G2L["4e"]);
G2L["53"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["53"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["53"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["53"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["53"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["53"]["Image"] = [[rbxassetid://1316045217]];
G2L["53"]["Size"] = UDim2.new(1, 1, 1, 1);
G2L["53"]["BackgroundTransparency"] = 1;
G2L["53"]["Name"] = [[ambientShadow]];
G2L["53"]["Position"] = UDim2.new(0.5, 0, 0.5, 1);


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow.ambientShadow.UIGradient
G2L["54"] = Instance.new("UIGradient", G2L["53"]);
G2L["54"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.04375),NumberSequenceKeypoint.new(1.000, 0.08125),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow.UIAspectRatioConstraint
G2L["55"] = Instance.new("UIAspectRatioConstraint", G2L["4e"]);
G2L["55"]["AspectRatio"] = 5.38095;


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow.UIAspectRatioConstraint
G2L["56"] = Instance.new("UIAspectRatioConstraint", G2L["4e"]);
G2L["56"]["AspectRatio"] = 5.38095;


-- StarterGui.xescriptsXD.Storage.Old.UI-Shadow.UIGradient
G2L["57"] = Instance.new("UIGradient", G2L["4e"]);
G2L["57"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.04375),NumberSequenceKeypoint.new(1.000, 0.08125),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.Old.UIAspectRatioConstraint
G2L["58"] = Instance.new("UIAspectRatioConstraint", G2L["46"]);
G2L["58"]["AspectRatio"] = 6.68099;


-- StarterGui.xescriptsXD.Storage.Old.UIGradient
G2L["59"] = Instance.new("UIGradient", G2L["46"]);
G2L["59"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.04375),NumberSequenceKeypoint.new(1.000, 0.08125),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.Old.UIStroke
G2L["5a"] = Instance.new("UIStroke", G2L["46"]);
G2L["5a"]["Transparency"] = 0.35;
G2L["5a"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["5a"]["Thickness"] = 1.5;
G2L["5a"]["Color"] = Color3.fromRGB(227, 227, 227);


-- StarterGui.xescriptsXD.Storage.Old.UIStroke.UIGradient
G2L["5b"] = Instance.new("UIGradient", G2L["5a"]);
G2L["5b"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};


-- StarterGui.xescriptsXD.Storage.Old.UIStroke.UIGradient.LocalScript
G2L["5c"] = Instance.new("LocalScript", G2L["5b"]);



-- StarterGui.xescriptsXD.Storage.New
G2L["5d"] = Instance.new("Frame", G2L["12"]);
G2L["5d"]["Visible"] = false;
G2L["5d"]["BorderSizePixel"] = 0;
G2L["5d"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["5d"]["Size"] = UDim2.new(0.13743, 0, 0.04018, 0);
G2L["5d"]["Position"] = UDim2.new(0.02527, 0, 0.01337, 0);
G2L["5d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d"]["Name"] = [[New]];
G2L["5d"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Storage.New.UICorner
G2L["5e"] = Instance.new("UICorner", G2L["5d"]);
G2L["5e"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.xescriptsXD.Storage.New.TextLabel
G2L["5f"] = Instance.new("TextLabel", G2L["5d"]);
G2L["5f"]["TextWrapped"] = true;
G2L["5f"]["BorderSizePixel"] = 0;
G2L["5f"]["TextSize"] = 14;
G2L["5f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5f"]["TextScaled"] = true;
G2L["5f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5f"]["TextColor3"] = Color3.fromRGB(201, 201, 201);
G2L["5f"]["BackgroundTransparency"] = 1;
G2L["5f"]["RichText"] = true;
G2L["5f"]["Size"] = UDim2.new(0.83191, 0, 0.97847, 0);
G2L["5f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5f"]["Text"] = [[XEScripts
Always on Top]];
G2L["5f"]["Position"] = UDim2.new(0.16089, 0, 0.02153, 0);


-- StarterGui.xescriptsXD.Storage.New.TextLabel.UITextSizeConstraint
G2L["60"] = Instance.new("UITextSizeConstraint", G2L["5f"]);



-- StarterGui.xescriptsXD.Storage.New.TextLabel.UIAspectRatioConstraint
G2L["61"] = Instance.new("UIAspectRatioConstraint", G2L["5f"]);
G2L["61"]["AspectRatio"] = 3.93032;


-- StarterGui.xescriptsXD.Storage.New.UIGradient
G2L["62"] = Instance.new("UIGradient", G2L["5d"]);
G2L["62"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.998, 0.35625),NumberSequenceKeypoint.new(0.999, 0.04375),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.New.WatermarkNew
G2L["63"] = Instance.new("Frame", G2L["5d"]);
G2L["63"]["BorderSizePixel"] = 0;
G2L["63"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["63"]["Size"] = UDim2.new(0.29315, 0, 1.33833, 0);
G2L["63"]["Position"] = UDim2.new(-0.17662, 0, -0.17196, 0);
G2L["63"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63"]["Name"] = [[WatermarkNew]];
G2L["63"]["BackgroundTransparency"] = 0.05;


-- StarterGui.xescriptsXD.Storage.New.WatermarkNew.UICorner
G2L["64"] = Instance.new("UICorner", G2L["63"]);
G2L["64"]["CornerRadius"] = UDim.new(4, 4);


-- StarterGui.xescriptsXD.Storage.New.WatermarkNew.ImageLabel
G2L["65"] = Instance.new("ImageLabel", G2L["63"]);
G2L["65"]["BorderSizePixel"] = 0;
G2L["65"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["65"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["65"]["Image"] = [[http://www.roblox.com/asset/?id=18997332070]];
G2L["65"]["Size"] = UDim2.new(1.0005, 0, 1.01876, 0);
G2L["65"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["65"]["BackgroundTransparency"] = 1;
G2L["65"]["Position"] = UDim2.new(-0.0005, 0, -0.02397, 0);


-- StarterGui.xescriptsXD.Storage.New.WatermarkNew.ImageLabel.UIGradient
G2L["66"] = Instance.new("UIGradient", G2L["65"]);
G2L["66"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.828, 0.325),NumberSequenceKeypoint.new(0.980, 0.58125),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.New.WatermarkNew.ImageLabel.UIAspectRatioConstraint
G2L["67"] = Instance.new("UIAspectRatioConstraint", G2L["65"]);
G2L["67"]["AspectRatio"] = 0.99443;


-- StarterGui.xescriptsXD.Storage.New.WatermarkNew.UIAspectRatioConstraint
G2L["68"] = Instance.new("UIAspectRatioConstraint", G2L["63"]);
G2L["68"]["AspectRatio"] = 1.01258;


-- StarterGui.xescriptsXD.Storage.New.UI-Shadow
G2L["69"] = Instance.new("Frame", G2L["5d"]);
G2L["69"]["ZIndex"] = -999999999;
G2L["69"]["Size"] = UDim2.new(1.22461, 0, 1.33136, 0);
G2L["69"]["Position"] = UDim2.new(-0.17662, 0, -0.17196, 0);
G2L["69"]["Name"] = [[UI-Shadow]];
G2L["69"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.New.UI-Shadow.umbraShadow
G2L["6a"] = Instance.new("ImageLabel", G2L["69"]);
G2L["6a"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["6a"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["6a"]["ImageTransparency"] = 0.86;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["6a"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["6a"]["Image"] = [[rbxassetid://1316045217]];
G2L["6a"]["Size"] = UDim2.new(1.00588, 0, 1.02499, 0);
G2L["6a"]["BackgroundTransparency"] = 1;
G2L["6a"]["Name"] = [[umbraShadow]];
G2L["6a"]["Position"] = UDim2.new(0.5, 0, 0.52499, 0);


-- StarterGui.xescriptsXD.Storage.New.UI-Shadow.umbraShadow.UIAspectRatioConstraint
G2L["6b"] = Instance.new("UIAspectRatioConstraint", G2L["6a"]);
G2L["6b"]["AspectRatio"] = 4.17276;


-- StarterGui.xescriptsXD.Storage.New.UI-Shadow.penumbraShadow
G2L["6c"] = Instance.new("ImageLabel", G2L["69"]);
G2L["6c"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["6c"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["6c"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["6c"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["6c"]["Image"] = [[rbxassetid://1316045217]];
G2L["6c"]["Size"] = UDim2.new(1.00588, 0, 1.02499, 0);
G2L["6c"]["BackgroundTransparency"] = 1;
G2L["6c"]["Name"] = [[penumbraShadow]];
G2L["6c"]["Position"] = UDim2.new(0.5, 0, 0.52499, 0);


-- StarterGui.xescriptsXD.Storage.New.UI-Shadow.penumbraShadow.UIAspectRatioConstraint
G2L["6d"] = Instance.new("UIAspectRatioConstraint", G2L["6c"]);
G2L["6d"]["AspectRatio"] = 4.17276;


-- StarterGui.xescriptsXD.Storage.New.UI-Shadow.ambientShadow
G2L["6e"] = Instance.new("ImageLabel", G2L["69"]);
G2L["6e"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["6e"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["6e"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["6e"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["6e"]["Image"] = [[rbxassetid://1316045217]];
G2L["6e"]["Size"] = UDim2.new(1.00588, 0, 1.02499, 0);
G2L["6e"]["BackgroundTransparency"] = 1;
G2L["6e"]["Name"] = [[ambientShadow]];
G2L["6e"]["Position"] = UDim2.new(0.5, 0, 0.52499, 0);


-- StarterGui.xescriptsXD.Storage.New.UI-Shadow.ambientShadow.UIAspectRatioConstraint
G2L["6f"] = Instance.new("UIAspectRatioConstraint", G2L["6e"]);
G2L["6f"]["AspectRatio"] = 4.17276;


-- StarterGui.xescriptsXD.Storage.New.UI-Shadow.UIAspectRatioConstraint
G2L["70"] = Instance.new("UIAspectRatioConstraint", G2L["69"]);
G2L["70"]["AspectRatio"] = 4.25205;


-- StarterGui.xescriptsXD.Storage.New.UIAspectRatioConstraint
G2L["71"] = Instance.new("UIAspectRatioConstraint", G2L["5d"]);
G2L["71"]["AspectRatio"] = 4.62273;


-- StarterGui.xescriptsXD.Storage.ArrayList
G2L["72"] = Instance.new("ScrollingFrame", G2L["12"]);
G2L["72"]["Visible"] = false;
G2L["72"]["Active"] = true;
G2L["72"]["BorderSizePixel"] = 0;
G2L["72"]["ScrollingEnabled"] = false;
G2L["72"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72"]["Name"] = [[ArrayList]];
G2L["72"]["ScrollBarImageTransparency"] = 1;
G2L["72"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["72"]["ClipsDescendants"] = false;
G2L["72"]["Size"] = UDim2.new(0.13876, 0, 0.63993, 0);
G2L["72"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72"]["Position"] = UDim2.new(0.86533, 0, 0.04412, 0);
G2L["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.ArrayList.UIListLayout
G2L["73"] = Instance.new("UIListLayout", G2L["72"]);
G2L["73"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Right;
G2L["73"]["Padding"] = UDim.new(0, 3);


-- StarterGui.xescriptsXD.Storage.ArrayList.Example
G2L["74"] = Instance.new("Frame", G2L["72"]);
G2L["74"]["Visible"] = false;
G2L["74"]["BorderSizePixel"] = 0;
G2L["74"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["74"]["Size"] = UDim2.new(0.85342, 0, 0.0563, 0);
G2L["74"]["Position"] = UDim2.new(0.14658, 0, 0, 0);
G2L["74"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["74"]["Name"] = [[Example]];


-- StarterGui.xescriptsXD.Storage.ArrayList.Example.TextLabel
G2L["75"] = Instance.new("TextLabel", G2L["74"]);
G2L["75"]["TextWrapped"] = true;
G2L["75"]["BorderSizePixel"] = 0;
G2L["75"]["TextSize"] = 14;
G2L["75"]["TextScaled"] = true;
G2L["75"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["75"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["75"]["TextColor3"] = Color3.fromRGB(216, 216, 216);
G2L["75"]["BackgroundTransparency"] = 1;
G2L["75"]["RichText"] = true;
G2L["75"]["Size"] = UDim2.new(0.88496, 0, 0.665, 0);
G2L["75"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["75"]["Text"] = [[KillAura]];
G2L["75"]["Position"] = UDim2.new(0.05072, 0, 0.1649, 0);


-- StarterGui.xescriptsXD.Storage.ArrayList.Example.TextLabel.UITextSizeConstraint
G2L["76"] = Instance.new("UITextSizeConstraint", G2L["75"]);



-- StarterGui.xescriptsXD.Storage.ArrayList.Example.TextLabel.UIAspectRatioConstraint
G2L["77"] = Instance.new("UIAspectRatioConstraint", G2L["75"]);
G2L["77"]["AspectRatio"] = 5.95852;


-- StarterGui.xescriptsXD.Storage.ArrayList.Example.UIGradient
G2L["78"] = Instance.new("UIGradient", G2L["74"]);
G2L["78"]["Rotation"] = 12;
G2L["78"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.41875),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Storage.ArrayList.Example.UIAspectRatioConstraint
G2L["79"] = Instance.new("UIAspectRatioConstraint", G2L["74"]);
G2L["79"]["AspectRatio"] = 4.47751;


-- StarterGui.xescriptsXD.Storage.ArrayList.Example.UICorner
G2L["7a"] = Instance.new("UICorner", G2L["74"]);
G2L["7a"]["CornerRadius"] = UDim.new(0, 3);


-- StarterGui.xescriptsXD.Storage.FivCorcleGki
G2L["7b"] = Instance.new("ScreenGui", G2L["12"]);
G2L["7b"]["Enabled"] = false;
G2L["7b"]["Name"] = [[FivCorcleGki]];
G2L["7b"]["ResetOnSpawn"] = false;


-- StarterGui.xescriptsXD.Storage.FivCorcleGki.Frame
G2L["7c"] = Instance.new("Frame", G2L["7b"]);
G2L["7c"]["Interactable"] = false;
G2L["7c"]["BorderSizePixel"] = 0;
G2L["7c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7c"]["AutomaticSize"] = Enum.AutomaticSize.XY;
G2L["7c"]["Size"] = UDim2.new(0.19627, 0, 0.26738, 0);
G2L["7c"]["Position"] = UDim2.new(0.40137, 0, 0.36631, 0);
G2L["7c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7c"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.FivCorcleGki.Frame.UICorner
G2L["7d"] = Instance.new("UICorner", G2L["7c"]);
G2L["7d"]["CornerRadius"] = UDim.new(4, 8);


-- StarterGui.xescriptsXD.Storage.FivCorcleGki.Frame.UIStroke
G2L["7e"] = Instance.new("UIStroke", G2L["7c"]);
G2L["7e"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Storage.FivCorcleGki.Frame.UIAspectRatioConstraint
G2L["7f"] = Instance.new("UIAspectRatioConstraint", G2L["7c"]);
G2L["7f"]["AspectRatio"] = 0.99215;


-- StarterGui.xescriptsXD.Storage.NameTagNew
G2L["80"] = Instance.new("BillboardGui", G2L["12"]);
G2L["80"]["Active"] = true;
G2L["80"]["LightInfluence"] = 1;
G2L["80"]["AlwaysOnTop"] = true;
G2L["80"]["StudsOffset"] = Vector3.new(0, 3, 0);
G2L["80"]["Size"] = UDim2.new(10, 2, 1.2, 0);
G2L["80"]["Enabled"] = false;
G2L["80"]["ClipsDescendants"] = true;
G2L["80"]["ResetOnSpawn"] = false;
G2L["80"]["Name"] = [[NameTagNew]];
G2L["80"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.xescriptsXD.Storage.NameTagNew.TextLabel
G2L["81"] = Instance.new("TextLabel", G2L["80"]);
G2L["81"]["TextWrapped"] = true;
G2L["81"]["TextSize"] = 14;
G2L["81"]["TextScaled"] = true;
G2L["81"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["81"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["81"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["81"]["BackgroundTransparency"] = 0.8;
G2L["81"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["81"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["81"]["Text"] = [[XESCRIPTS]];


-- StarterGui.xescriptsXD.Storage.NameTagNew.TextLabel.UIStroke
G2L["82"] = Instance.new("UIStroke", G2L["81"]);
G2L["82"]["Thickness"] = 2;


-- StarterGui.xescriptsXD.Storage.NameTagNew.TextLabel.UICorner
G2L["83"] = Instance.new("UICorner", G2L["81"]);
G2L["83"]["CornerRadius"] = UDim.new(0, 6);


-- StarterGui.xescriptsXD.Storage.NameTagNew.TextLabel.UI-Shadow
G2L["84"] = Instance.new("Frame", G2L["81"]);
G2L["84"]["ZIndex"] = -999999999;
G2L["84"]["Size"] = UDim2.new(1.10345, 0, 1.2, 0);
G2L["84"]["Position"] = UDim2.new(-0.03448, 0, -0.14286, 0);
G2L["84"]["Name"] = [[UI-Shadow]];
G2L["84"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.NameTagNew.TextLabel.UI-Shadow.umbraShadow
G2L["85"] = Instance.new("ImageLabel", G2L["84"]);
G2L["85"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["85"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["85"]["ImageTransparency"] = 0.91;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["85"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["85"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["85"]["Image"] = [[rbxassetid://1316045217]];
G2L["85"]["Size"] = UDim2.new(1.0125, 0, 1.09524, 0);
G2L["85"]["BackgroundTransparency"] = 1;
G2L["85"]["Name"] = [[umbraShadow]];
G2L["85"]["Position"] = UDim2.new(0.5, 0, 0.57143, 0);


-- StarterGui.xescriptsXD.Storage.NameTagNew.TextLabel.UI-Shadow.penumbraShadow
G2L["86"] = Instance.new("ImageLabel", G2L["84"]);
G2L["86"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["86"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["86"]["ImageTransparency"] = 0.91;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["86"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["86"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["86"]["Image"] = [[rbxassetid://1316045217]];
G2L["86"]["Size"] = UDim2.new(1.0125, 0, 1.09524, 0);
G2L["86"]["BackgroundTransparency"] = 1;
G2L["86"]["Name"] = [[penumbraShadow]];
G2L["86"]["Position"] = UDim2.new(0.5, 0, 0.57143, 0);


-- StarterGui.xescriptsXD.Storage.NameTagNew.TextLabel.UI-Shadow.ambientShadow
G2L["87"] = Instance.new("ImageLabel", G2L["84"]);
G2L["87"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["87"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["87"]["ImageTransparency"] = 0.91;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["87"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["87"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["87"]["Image"] = [[rbxassetid://1316045217]];
G2L["87"]["Size"] = UDim2.new(1.0125, 0, 1.09524, 0);
G2L["87"]["BackgroundTransparency"] = 1;
G2L["87"]["Name"] = [[ambientShadow]];
G2L["87"]["Position"] = UDim2.new(0.5, 0, 0.57143, 0);


-- StarterGui.xescriptsXD.Storage.NameTag
G2L["88"] = Instance.new("BillboardGui", G2L["12"]);
G2L["88"]["Active"] = true;
G2L["88"]["LightInfluence"] = 1;
G2L["88"]["AlwaysOnTop"] = true;
G2L["88"]["StudsOffset"] = Vector3.new(0, 3, 0);
G2L["88"]["Size"] = UDim2.new(10, 2, 1.3, 0);
G2L["88"]["Enabled"] = false;
G2L["88"]["ClipsDescendants"] = true;
G2L["88"]["ResetOnSpawn"] = false;
G2L["88"]["Name"] = [[NameTag]];
G2L["88"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.xescriptsXD.Storage.NameTag.TextLabel
G2L["89"] = Instance.new("TextLabel", G2L["88"]);
G2L["89"]["TextWrapped"] = true;
G2L["89"]["BorderSizePixel"] = 0;
G2L["89"]["TextSize"] = 14;
G2L["89"]["TextScaled"] = true;
G2L["89"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["89"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["89"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
G2L["89"]["BackgroundTransparency"] = 1;
G2L["89"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["89"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["89"]["Text"] = [[XESCRIPTS]];


-- StarterGui.xescriptsXD.Storage.Enabled
G2L["8a"] = Instance.new("BoolValue", G2L["12"]);
G2L["8a"]["Name"] = [[Enabled]];
G2L["8a"]["Value"] = true;


-- StarterGui.xescriptsXD.Storage.Tools
G2L["8b"] = Instance.new("Folder", G2L["12"]);
G2L["8b"]["Name"] = [[Tools]];


-- StarterGui.xescriptsXD.Storage.Version
G2L["8c"] = Instance.new("StringValue", G2L["12"]);
G2L["8c"]["Name"] = [[Version]];
G2L["8c"]["Value"] = [[1.7.9B]];


-- StarterGui.xescriptsXD.Storage.XESCRIPT
G2L["8d"] = Instance.new("BlurEffect", G2L["12"]);
G2L["8d"]["Name"] = [[XESCRIPT]];
G2L["8d"]["Size"] = 0;


-- StarterGui.xescriptsXD.Storage.Base
G2L["8e"] = Instance.new("Folder", G2L["12"]);
G2L["8e"]["Name"] = [[Base]];


-- StarterGui.xescriptsXD.Storage.Base.loader
G2L["8f"] = Instance.new("LocalScript", G2L["8e"]);
G2L["8f"]["Name"] = [[loader]];


-- StarterGui.xescriptsXD.Storage.Other
G2L["90"] = Instance.new("Folder", G2L["12"]);
G2L["90"]["Name"] = [[Other]];


-- StarterGui.xescriptsXD.Storage.Other.Items
G2L["91"] = Instance.new("StringValue", G2L["90"]);
G2L["91"]["Name"] = [[Items]];


-- StarterGui.xescriptsXD.Storage.Other.ItemEspColor
G2L["92"] = Instance.new("Color3Value", G2L["90"]);
G2L["92"]["Name"] = [[ItemEspColor]];
G2L["92"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Storage.Other.ItemEspThickness
G2L["93"] = Instance.new("IntValue", G2L["90"]);
G2L["93"]["Name"] = [[ItemEspThickness]];


-- StarterGui.xescriptsXD.Storage.Other.ItemEspOutlineTransparency
G2L["94"] = Instance.new("StringValue", G2L["90"]);
G2L["94"]["Name"] = [[ItemEspOutlineTransparency]];


-- StarterGui.xescriptsXD.Storage.Other.ItemEspTransparency
G2L["95"] = Instance.new("StringValue", G2L["90"]);
G2L["95"]["Name"] = [[ItemEspTransparency]];


-- StarterGui.xescriptsXD.Storage.Other.ItemEspOutlineColor
G2L["96"] = Instance.new("Color3Value", G2L["90"]);
G2L["96"]["Name"] = [[ItemEspOutlineColor]];
G2L["96"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Storage.Other.TracerThickness
G2L["97"] = Instance.new("IntValue", G2L["90"]);
G2L["97"]["Name"] = [[TracerThickness]];


-- StarterGui.xescriptsXD.Storage.Other.TracerTransparency
G2L["98"] = Instance.new("IntValue", G2L["90"]);
G2L["98"]["Name"] = [[TracerTransparency]];


-- StarterGui.xescriptsXD.Storage.Other.TracerColor
G2L["99"] = Instance.new("Color3Value", G2L["90"]);
G2L["99"]["Name"] = [[TracerColor]];
G2L["99"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Storage.Trac3r
G2L["9a"] = Instance.new("Beam", G2L["12"]);
G2L["9a"]["FaceCamera"] = true;
G2L["9a"]["LightInfluence"] = 1;
G2L["9a"]["Width1"] = 0.15;
G2L["9a"]["Width0"] = 0.15;
G2L["9a"]["TextureMode"] = Enum.TextureMode.Wrap;
G2L["9a"]["Name"] = [[Trac3r]];


-- StarterGui.xescriptsXD.Storage.CrosshairV2
G2L["9b"] = Instance.new("Frame", G2L["12"]);
G2L["9b"]["Visible"] = false;
G2L["9b"]["Interactable"] = false;
G2L["9b"]["BorderSizePixel"] = 0;
G2L["9b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9b"]["Size"] = UDim2.new(0.09881, 0, 0.13369, 0);
G2L["9b"]["Position"] = UDim2.new(0.45001, 0, 0.40366, 0);
G2L["9b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9b"]["Name"] = [[CrosshairV2]];
G2L["9b"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame
G2L["9c"] = Instance.new("Frame", G2L["9b"]);
G2L["9c"]["Interactable"] = false;
G2L["9c"]["BorderSizePixel"] = 0;
G2L["9c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9c"]["Size"] = UDim2.new(0.02, 0, 0.3, 0);
G2L["9c"]["Position"] = UDim2.new(0.48, 0, 0.11, 0);
G2L["9c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame.UICorner
G2L["9d"] = Instance.new("UICorner", G2L["9c"]);
G2L["9d"]["CornerRadius"] = UDim.new(4, 0);


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame.UIGradient
G2L["9e"] = Instance.new("UIGradient", G2L["9c"]);
G2L["9e"]["Rotation"] = 90;
G2L["9e"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.002, 0.9625),NumberSequenceKeypoint.new(0.500, 0.36875),NumberSequenceKeypoint.new(0.998, 0.95),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame
G2L["9f"] = Instance.new("Frame", G2L["9b"]);
G2L["9f"]["Interactable"] = false;
G2L["9f"]["BorderSizePixel"] = 0;
G2L["9f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9f"]["Size"] = UDim2.new(0.02, 0, 0.3, 0);
G2L["9f"]["Position"] = UDim2.new(0.48, 0, 0.58, 0);
G2L["9f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame.UICorner
G2L["a0"] = Instance.new("UICorner", G2L["9f"]);
G2L["a0"]["CornerRadius"] = UDim.new(4, 0);


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame.UIGradient
G2L["a1"] = Instance.new("UIGradient", G2L["9f"]);
G2L["a1"]["Rotation"] = -90;
G2L["a1"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.002, 0.9625),NumberSequenceKeypoint.new(0.500, 0.36875),NumberSequenceKeypoint.new(0.998, 0.95),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame
G2L["a2"] = Instance.new("Frame", G2L["9b"]);
G2L["a2"]["Interactable"] = false;
G2L["a2"]["BorderSizePixel"] = 0;
G2L["a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a2"]["Size"] = UDim2.new(0.3, 0, 0.02, 0);
G2L["a2"]["Position"] = UDim2.new(0.57, 0, 0.48, 0);
G2L["a2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame.UICorner
G2L["a3"] = Instance.new("UICorner", G2L["a2"]);
G2L["a3"]["CornerRadius"] = UDim.new(4, 0);


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame.UIGradient
G2L["a4"] = Instance.new("UIGradient", G2L["a2"]);
G2L["a4"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.002, 0.9625),NumberSequenceKeypoint.new(0.500, 0.36875),NumberSequenceKeypoint.new(0.998, 0.95),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame
G2L["a5"] = Instance.new("Frame", G2L["9b"]);
G2L["a5"]["Interactable"] = false;
G2L["a5"]["BorderSizePixel"] = 0;
G2L["a5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a5"]["Size"] = UDim2.new(0.3, 0, 0.02, 0);
G2L["a5"]["Position"] = UDim2.new(0.11, 0, 0.48, 0);
G2L["a5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame.UICorner
G2L["a6"] = Instance.new("UICorner", G2L["a5"]);
G2L["a6"]["CornerRadius"] = UDim.new(4, 0);


-- StarterGui.xescriptsXD.Storage.CrosshairV2.Frame.UIGradient
G2L["a7"] = Instance.new("UIGradient", G2L["a5"]);
G2L["a7"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.002, 0.9625),NumberSequenceKeypoint.new(0.500, 0.36875),NumberSequenceKeypoint.new(0.998, 0.95),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Storage.Assets
G2L["a8"] = Instance.new("Folder", G2L["12"]);
G2L["a8"]["Name"] = [[Assets]];


-- StarterGui.xescriptsXD.Storage.Assets.TargetESP
G2L["a9"] = Instance.new("Folder", G2L["a8"]);
G2L["a9"]["Name"] = [[TargetESP]];


-- StarterGui.xescriptsXD.Storage.Assets.TargetESP.TargetESP1
G2L["aa"] = Instance.new("BillboardGui", G2L["a9"]);
G2L["aa"]["Active"] = true;
G2L["aa"]["LightInfluence"] = 1;
G2L["aa"]["AlwaysOnTop"] = true;
G2L["aa"]["Size"] = UDim2.new(3.5, 0, 3.5, 0);
G2L["aa"]["Enabled"] = false;
G2L["aa"]["ClipsDescendants"] = true;
G2L["aa"]["ResetOnSpawn"] = false;
G2L["aa"]["Name"] = [[TargetESP1]];
G2L["aa"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.xescriptsXD.Storage.Assets.TargetESP.TargetESP1.ImageLabel
G2L["ab"] = Instance.new("ImageLabel", G2L["aa"]);
G2L["ab"]["Interactable"] = false;
G2L["ab"]["BorderSizePixel"] = 0;
G2L["ab"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ab"]["ImageTransparency"] = 0.22;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["ab"]["Image"] = [[http://www.roblox.com/asset/?id=81155924887135]];
G2L["ab"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["ab"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ab"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetESP.TargetESP2
G2L["ac"] = Instance.new("BillboardGui", G2L["a9"]);
G2L["ac"]["Active"] = true;
G2L["ac"]["LightInfluence"] = 1;
G2L["ac"]["AlwaysOnTop"] = true;
G2L["ac"]["Size"] = UDim2.new(3.5, 0, 3.5, 0);
G2L["ac"]["Enabled"] = false;
G2L["ac"]["ClipsDescendants"] = true;
G2L["ac"]["ResetOnSpawn"] = false;
G2L["ac"]["Name"] = [[TargetESP2]];
G2L["ac"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.xescriptsXD.Storage.Assets.TargetESP.TargetESP2.ImageLabel
G2L["ad"] = Instance.new("ImageLabel", G2L["ac"]);
G2L["ad"]["Interactable"] = false;
G2L["ad"]["BorderSizePixel"] = 0;
G2L["ad"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ad"]["ImageTransparency"] = 0.22;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["ad"]["Image"] = [[http://www.roblox.com/asset/?id=80836493755892]];
G2L["ad"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["ad"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ad"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetESP.TargetESP3
G2L["ae"] = Instance.new("BillboardGui", G2L["a9"]);
G2L["ae"]["Active"] = true;
G2L["ae"]["LightInfluence"] = 1;
G2L["ae"]["AlwaysOnTop"] = true;
G2L["ae"]["Size"] = UDim2.new(3.5, 0, 3.5, 0);
G2L["ae"]["Enabled"] = false;
G2L["ae"]["ClipsDescendants"] = true;
G2L["ae"]["ResetOnSpawn"] = false;
G2L["ae"]["Name"] = [[TargetESP3]];
G2L["ae"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.xescriptsXD.Storage.Assets.TargetESP.TargetESP3.ImageLabel
G2L["af"] = Instance.new("ImageLabel", G2L["ae"]);
G2L["af"]["Interactable"] = false;
G2L["af"]["BorderSizePixel"] = 0;
G2L["af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["af"]["ImageTransparency"] = 0.22;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["af"]["Image"] = [[http://www.roblox.com/asset/?id=104996823672172]];
G2L["af"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["af"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetESP.TargetESP4
G2L["b0"] = Instance.new("BillboardGui", G2L["a9"]);
G2L["b0"]["Active"] = true;
G2L["b0"]["LightInfluence"] = 1;
G2L["b0"]["AlwaysOnTop"] = true;
G2L["b0"]["Size"] = UDim2.new(3.5, 0, 3.5, 0);
G2L["b0"]["Enabled"] = false;
G2L["b0"]["ClipsDescendants"] = true;
G2L["b0"]["ResetOnSpawn"] = false;
G2L["b0"]["Name"] = [[TargetESP4]];
G2L["b0"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.xescriptsXD.Storage.Assets.TargetESP.TargetESP4.ImageLabel
G2L["b1"] = Instance.new("ImageLabel", G2L["b0"]);
G2L["b1"]["Interactable"] = false;
G2L["b1"]["BorderSizePixel"] = 0;
G2L["b1"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["b1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b1"]["ImageTransparency"] = 0.37;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["b1"]["ImageColor3"] = Color3.fromRGB(223, 223, 223);
G2L["b1"]["Image"] = [[http://www.roblox.com/asset/?id=131707219171665]];
G2L["b1"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["b1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b1"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud
G2L["b2"] = Instance.new("Folder", G2L["a8"]);
G2L["b2"]["Name"] = [[TargetHud]];


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1
G2L["b3"] = Instance.new("Frame", G2L["b2"]);
G2L["b3"]["Visible"] = false;
G2L["b3"]["Interactable"] = false;
G2L["b3"]["BorderSizePixel"] = 0;
G2L["b3"]["BackgroundColor3"] = Color3.fromRGB(26, 26, 26);
G2L["b3"]["Size"] = UDim2.new(0, 188, 0, 65);
G2L["b3"]["Position"] = UDim2.new(0.40653, 0, 0.6942, 0);
G2L["b3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b3"]["Name"] = [[TargetHud1]];
G2L["b3"]["BackgroundTransparency"] = 0.05;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Nickname
G2L["b4"] = Instance.new("TextLabel", G2L["b3"]);
G2L["b4"]["TextWrapped"] = true;
G2L["b4"]["Interactable"] = false;
G2L["b4"]["BorderSizePixel"] = 0;
G2L["b4"]["TextSize"] = 14;
G2L["b4"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["b4"]["TextScaled"] = true;
G2L["b4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["b4"]["TextColor3"] = Color3.fromRGB(205, 205, 205);
G2L["b4"]["BackgroundTransparency"] = 1;
G2L["b4"]["Size"] = UDim2.new(0.63298, 0, 0.30769, 0);
G2L["b4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b4"]["Text"] = [[XETARGET]];
G2L["b4"]["Name"] = [[Nickname]];
G2L["b4"]["Position"] = UDim2.new(0.32368, 0, 0.08606, 0);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Nickname.UI-Shadow
G2L["b5"] = Instance.new("Frame", G2L["b4"]);
G2L["b5"]["Interactable"] = false;
G2L["b5"]["ZIndex"] = -999999999;
G2L["b5"]["Size"] = UDim2.new(0.83673, 0, 1, 0);
G2L["b5"]["Position"] = UDim2.new(-0.00135, 0, 0, 0);
G2L["b5"]["Name"] = [[UI-Shadow]];
G2L["b5"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Nickname.UI-Shadow.umbraShadow
G2L["b6"] = Instance.new("ImageLabel", G2L["b5"]);
G2L["b6"]["Interactable"] = false;
G2L["b6"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["b6"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["b6"]["ImageTransparency"] = 0.98;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["b6"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["b6"]["Image"] = [[rbxassetid://1316045217]];
G2L["b6"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["b6"]["BackgroundTransparency"] = 1;
G2L["b6"]["Name"] = [[umbraShadow]];
G2L["b6"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Nickname.UI-Shadow.penumbraShadow
G2L["b7"] = Instance.new("ImageLabel", G2L["b5"]);
G2L["b7"]["Interactable"] = false;
G2L["b7"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["b7"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["b7"]["ImageTransparency"] = 0.98;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["b7"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["b7"]["Image"] = [[rbxassetid://1316045217]];
G2L["b7"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["b7"]["BackgroundTransparency"] = 1;
G2L["b7"]["Name"] = [[penumbraShadow]];
G2L["b7"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Nickname.UI-Shadow.ambientShadow
G2L["b8"] = Instance.new("ImageLabel", G2L["b5"]);
G2L["b8"]["Interactable"] = false;
G2L["b8"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["b8"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["b8"]["ImageTransparency"] = 0.98;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["b8"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["b8"]["Image"] = [[rbxassetid://1316045217]];
G2L["b8"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["b8"]["BackgroundTransparency"] = 1;
G2L["b8"]["Name"] = [[ambientShadow]];
G2L["b8"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Target
G2L["b9"] = Instance.new("Frame", G2L["b3"]);
G2L["b9"]["Interactable"] = false;
G2L["b9"]["BorderSizePixel"] = 0;
G2L["b9"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["b9"]["Size"] = UDim2.new(0.25532, 0, 0.78462, 0);
G2L["b9"]["Position"] = UDim2.new(0.03191, 0, 0.08606, 0);
G2L["b9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b9"]["Name"] = [[Target]];
G2L["b9"]["BackgroundTransparency"] = 0.05;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Target.ImageLabel
G2L["ba"] = Instance.new("ImageLabel", G2L["b9"]);
G2L["ba"]["Interactable"] = false;
G2L["ba"]["BorderSizePixel"] = 0;
G2L["ba"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["ba"]["ImageColor3"] = Color3.fromRGB(183, 183, 183);
G2L["ba"]["Image"] = [[https://www.roblox.com/headshot-thumbnail/image?userId=7163706893&width=420&height=420&format=png]];
G2L["ba"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["ba"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ba"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Target.ImageLabel.UIAspectRatioConstraint
G2L["bb"] = Instance.new("UIAspectRatioConstraint", G2L["ba"]);
G2L["bb"]["AspectRatio"] = 0.94118;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Target.ImageLabel.UICorner
G2L["bc"] = Instance.new("UICorner", G2L["ba"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Target.UICorner
G2L["bd"] = Instance.new("UICorner", G2L["b9"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health
G2L["be"] = Instance.new("Frame", G2L["b3"]);
G2L["be"]["Interactable"] = false;
G2L["be"]["BorderSizePixel"] = 0;
G2L["be"]["BackgroundColor3"] = Color3.fromRGB(29, 108, 51);
G2L["be"]["Size"] = UDim2.new(0.64134, 0, 0.369, 0);
G2L["be"]["Position"] = UDim2.new(0.32368, 0, 0.50518, 0);
G2L["be"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["be"]["Name"] = [[Health]];
G2L["be"]["BackgroundTransparency"] = 0.05;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UI-Shadow
G2L["bf"] = Instance.new("Frame", G2L["be"]);
G2L["bf"]["Interactable"] = false;
G2L["bf"]["ZIndex"] = -999999999;
G2L["bf"]["Size"] = UDim2.new(1.10185, 0, 1.64295, 0);
G2L["bf"]["Position"] = UDim2.new(-0.0473, 0, -0.30197, 0);
G2L["bf"]["Name"] = [[UI-Shadow]];
G2L["bf"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UI-Shadow.umbraShadow
G2L["c0"] = Instance.new("ImageLabel", G2L["bf"]);
G2L["c0"]["Interactable"] = false;
G2L["c0"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["c0"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["c0"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["c0"]["ImageColor3"] = Color3.fromRGB(111, 255, 21);
G2L["c0"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["c0"]["Image"] = [[rbxassetid://1316045217]];
G2L["c0"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["c0"]["BackgroundTransparency"] = 1;
G2L["c0"]["Name"] = [[umbraShadow]];
G2L["c0"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UI-Shadow.umbraShadow.UIGradient
G2L["c1"] = Instance.new("UIGradient", G2L["c0"]);
G2L["c1"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["c1"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UI-Shadow.penumbraShadow
G2L["c2"] = Instance.new("ImageLabel", G2L["bf"]);
G2L["c2"]["Interactable"] = false;
G2L["c2"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["c2"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["c2"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["c2"]["ImageColor3"] = Color3.fromRGB(111, 255, 21);
G2L["c2"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["c2"]["Image"] = [[rbxassetid://1316045217]];
G2L["c2"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["c2"]["BackgroundTransparency"] = 1;
G2L["c2"]["Name"] = [[penumbraShadow]];
G2L["c2"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UI-Shadow.penumbraShadow.UIGradient
G2L["c3"] = Instance.new("UIGradient", G2L["c2"]);
G2L["c3"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["c3"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UI-Shadow.ambientShadow
G2L["c4"] = Instance.new("ImageLabel", G2L["bf"]);
G2L["c4"]["Interactable"] = false;
G2L["c4"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["c4"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["c4"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["c4"]["ImageColor3"] = Color3.fromRGB(111, 255, 21);
G2L["c4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["c4"]["Image"] = [[rbxassetid://1316045217]];
G2L["c4"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["c4"]["BackgroundTransparency"] = 1;
G2L["c4"]["Name"] = [[ambientShadow]];
G2L["c4"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UI-Shadow.ambientShadow.UIGradient
G2L["c5"] = Instance.new("UIGradient", G2L["c4"]);
G2L["c5"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["c5"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UI-Shadow.UIGradient
G2L["c6"] = Instance.new("UIGradient", G2L["bf"]);
G2L["c6"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["c6"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UIGradient
G2L["c7"] = Instance.new("UIGradient", G2L["be"]);
G2L["c7"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["c7"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.Health.UICorner
G2L["c8"] = Instance.new("UICorner", G2L["be"]);
G2L["c8"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UI-Shadow
G2L["c9"] = Instance.new("Frame", G2L["b3"]);
G2L["c9"]["ZIndex"] = -999999999;
G2L["c9"]["Size"] = UDim2.new(1.07447, 0, 1.12308, 0);
G2L["c9"]["Position"] = UDim2.new(-0.03723, 0, -0.07692, 0);
G2L["c9"]["Name"] = [[UI-Shadow]];
G2L["c9"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UI-Shadow.umbraShadow
G2L["ca"] = Instance.new("ImageLabel", G2L["c9"]);
G2L["ca"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["ca"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["ca"]["ImageTransparency"] = 0.93;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["ca"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ca"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["ca"]["Image"] = [[rbxassetid://1316045217]];
G2L["ca"]["Size"] = UDim2.new(1.00495, 0, 1.16018, 0);
G2L["ca"]["BackgroundTransparency"] = 1;
G2L["ca"]["Name"] = [[umbraShadow]];
G2L["ca"]["Position"] = UDim2.new(0.50248, 0, 0.5158, 0);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UI-Shadow.umbraShadow.UICorner
G2L["cb"] = Instance.new("UICorner", G2L["ca"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UI-Shadow.penumbraShadow
G2L["cc"] = Instance.new("ImageLabel", G2L["c9"]);
G2L["cc"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["cc"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["cc"]["ImageTransparency"] = 0.93;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["cc"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cc"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["cc"]["Image"] = [[rbxassetid://1316045217]];
G2L["cc"]["Size"] = UDim2.new(1.00495, 0, 1.16018, 0);
G2L["cc"]["BackgroundTransparency"] = 1;
G2L["cc"]["Name"] = [[penumbraShadow]];
G2L["cc"]["Position"] = UDim2.new(0.50248, 0, 0.5158, 0);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UI-Shadow.penumbraShadow.UICorner
G2L["cd"] = Instance.new("UICorner", G2L["cc"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UI-Shadow.ambientShadow
G2L["ce"] = Instance.new("ImageLabel", G2L["c9"]);
G2L["ce"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["ce"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["ce"]["ImageTransparency"] = 0.93;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["ce"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ce"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["ce"]["Image"] = [[rbxassetid://1316045217]];
G2L["ce"]["Size"] = UDim2.new(1.00495, 0, 1.16018, 0);
G2L["ce"]["BackgroundTransparency"] = 1;
G2L["ce"]["Name"] = [[ambientShadow]];
G2L["ce"]["Position"] = UDim2.new(0.50248, 0, 0.5158, 0);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UI-Shadow.ambientShadow.UICorner
G2L["cf"] = Instance.new("UICorner", G2L["ce"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UI-Shadow.UICorner
G2L["d0"] = Instance.new("UICorner", G2L["c9"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UIStroke
G2L["d1"] = Instance.new("UIStroke", G2L["b3"]);
G2L["d1"]["Transparency"] = 0.35;
G2L["d1"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["d1"]["Color"] = Color3.fromRGB(227, 227, 227);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UIStroke.UIGradient
G2L["d2"] = Instance.new("UIGradient", G2L["d1"]);
G2L["d2"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud1.UICorner
G2L["d3"] = Instance.new("UICorner", G2L["b3"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2
G2L["d4"] = Instance.new("Frame", G2L["b2"]);
G2L["d4"]["Visible"] = false;
G2L["d4"]["Interactable"] = false;
G2L["d4"]["BorderSizePixel"] = 0;
G2L["d4"]["BackgroundColor3"] = Color3.fromRGB(26, 26, 26);
G2L["d4"]["Size"] = UDim2.new(0, 188, 0, 65);
G2L["d4"]["Position"] = UDim2.new(0.40653, 0, 0.6942, 0);
G2L["d4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d4"]["Name"] = [[TargetHud2]];
G2L["d4"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Nickname
G2L["d5"] = Instance.new("TextLabel", G2L["d4"]);
G2L["d5"]["TextWrapped"] = true;
G2L["d5"]["Interactable"] = false;
G2L["d5"]["BorderSizePixel"] = 0;
G2L["d5"]["TextSize"] = 14;
G2L["d5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["d5"]["TextScaled"] = true;
G2L["d5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["d5"]["TextColor3"] = Color3.fromRGB(192, 192, 192);
G2L["d5"]["BackgroundTransparency"] = 1;
G2L["d5"]["Size"] = UDim2.new(0.63298, 0, 0.30769, 0);
G2L["d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d5"]["Text"] = [[XETARGET]];
G2L["d5"]["Name"] = [[Nickname]];
G2L["d5"]["Position"] = UDim2.new(0.32368, 0, 0.08606, 0);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Nickname.UIAspectRatioConstraint
G2L["d6"] = Instance.new("UIAspectRatioConstraint", G2L["d5"]);
G2L["d6"]["AspectRatio"] = 5.95;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Nickname.UI-Shadow
G2L["d7"] = Instance.new("Frame", G2L["d5"]);
G2L["d7"]["Interactable"] = false;
G2L["d7"]["ZIndex"] = -999999999;
G2L["d7"]["Size"] = UDim2.new(0.83673, 0, 1, 0);
G2L["d7"]["Position"] = UDim2.new(-0.00135, 0, 0, 0);
G2L["d7"]["Name"] = [[UI-Shadow]];
G2L["d7"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Nickname.UI-Shadow.umbraShadow
G2L["d8"] = Instance.new("ImageLabel", G2L["d7"]);
G2L["d8"]["Interactable"] = false;
G2L["d8"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["d8"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["d8"]["ImageTransparency"] = 0.98;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["d8"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["d8"]["Image"] = [[rbxassetid://1316045217]];
G2L["d8"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["d8"]["BackgroundTransparency"] = 1;
G2L["d8"]["Name"] = [[umbraShadow]];
G2L["d8"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Nickname.UI-Shadow.penumbraShadow
G2L["d9"] = Instance.new("ImageLabel", G2L["d7"]);
G2L["d9"]["Interactable"] = false;
G2L["d9"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["d9"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["d9"]["ImageTransparency"] = 0.98;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["d9"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["d9"]["Image"] = [[rbxassetid://1316045217]];
G2L["d9"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["d9"]["BackgroundTransparency"] = 1;
G2L["d9"]["Name"] = [[penumbraShadow]];
G2L["d9"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Nickname.UI-Shadow.ambientShadow
G2L["da"] = Instance.new("ImageLabel", G2L["d7"]);
G2L["da"]["Interactable"] = false;
G2L["da"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["da"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["da"]["ImageTransparency"] = 0.98;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["da"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["da"]["Image"] = [[rbxassetid://1316045217]];
G2L["da"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["da"]["BackgroundTransparency"] = 1;
G2L["da"]["Name"] = [[ambientShadow]];
G2L["da"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Target
G2L["db"] = Instance.new("Frame", G2L["d4"]);
G2L["db"]["Interactable"] = false;
G2L["db"]["BorderSizePixel"] = 0;
G2L["db"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["db"]["Size"] = UDim2.new(0.25532, 0, 0.78462, 0);
G2L["db"]["Position"] = UDim2.new(0.03191, 0, 0.08606, 0);
G2L["db"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["db"]["Name"] = [[Target]];


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Target.ImageLabel
G2L["dc"] = Instance.new("ImageLabel", G2L["db"]);
G2L["dc"]["Interactable"] = false;
G2L["dc"]["BorderSizePixel"] = 0;
G2L["dc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["dc"]["ImageColor3"] = Color3.fromRGB(160, 137, 183);
G2L["dc"]["Image"] = [[https://www.roblox.com/headshot-thumbnail/image?userId=7163706893&width=420&height=420&format=png]];
G2L["dc"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["dc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["dc"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Target.ImageLabel.UIAspectRatioConstraint
G2L["dd"] = Instance.new("UIAspectRatioConstraint", G2L["dc"]);
G2L["dd"]["AspectRatio"] = 0.94118;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Target.ImageLabel.UICorner
G2L["de"] = Instance.new("UICorner", G2L["dc"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Target.UIAspectRatioConstraint
G2L["df"] = Instance.new("UIAspectRatioConstraint", G2L["db"]);
G2L["df"]["AspectRatio"] = 0.94118;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Target.UICorner
G2L["e0"] = Instance.new("UICorner", G2L["db"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health
G2L["e1"] = Instance.new("Frame", G2L["d4"]);
G2L["e1"]["Interactable"] = false;
G2L["e1"]["BorderSizePixel"] = 0;
G2L["e1"]["BackgroundColor3"] = Color3.fromRGB(138, 11, 201);
G2L["e1"]["Size"] = UDim2.new(0.64134, 0, 0.369, 0);
G2L["e1"]["Position"] = UDim2.new(0.32368, 0, 0.50518, 0);
G2L["e1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e1"]["Name"] = [[Health]];
G2L["e1"]["BackgroundTransparency"] = 0.05;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UI-Shadow
G2L["e2"] = Instance.new("Frame", G2L["e1"]);
G2L["e2"]["Interactable"] = false;
G2L["e2"]["ZIndex"] = -999999999;
G2L["e2"]["Size"] = UDim2.new(1.10185, 0, 1.64295, 0);
G2L["e2"]["Position"] = UDim2.new(-0.0473, 0, -0.30197, 0);
G2L["e2"]["Name"] = [[UI-Shadow]];
G2L["e2"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UI-Shadow.umbraShadow
G2L["e3"] = Instance.new("ImageLabel", G2L["e2"]);
G2L["e3"]["Interactable"] = false;
G2L["e3"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["e3"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["e3"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["e3"]["ImageColor3"] = Color3.fromRGB(157, 16, 255);
G2L["e3"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e3"]["Image"] = [[rbxassetid://1316045217]];
G2L["e3"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["e3"]["BackgroundTransparency"] = 1;
G2L["e3"]["Name"] = [[umbraShadow]];
G2L["e3"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UI-Shadow.umbraShadow.UIGradient
G2L["e4"] = Instance.new("UIGradient", G2L["e3"]);
G2L["e4"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.475),NumberSequenceKeypoint.new(1.000, 0),NumberSequenceKeypoint.new(1.000, 0.85)};
G2L["e4"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UI-Shadow.penumbraShadow
G2L["e5"] = Instance.new("ImageLabel", G2L["e2"]);
G2L["e5"]["Interactable"] = false;
G2L["e5"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["e5"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["e5"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["e5"]["ImageColor3"] = Color3.fromRGB(157, 16, 255);
G2L["e5"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e5"]["Image"] = [[rbxassetid://1316045217]];
G2L["e5"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["e5"]["BackgroundTransparency"] = 1;
G2L["e5"]["Name"] = [[penumbraShadow]];
G2L["e5"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UI-Shadow.penumbraShadow.UIGradient
G2L["e6"] = Instance.new("UIGradient", G2L["e5"]);
G2L["e6"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.475),NumberSequenceKeypoint.new(1.000, 0),NumberSequenceKeypoint.new(1.000, 0.85)};
G2L["e6"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UI-Shadow.ambientShadow
G2L["e7"] = Instance.new("ImageLabel", G2L["e2"]);
G2L["e7"]["Interactable"] = false;
G2L["e7"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["e7"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["e7"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["e7"]["ImageColor3"] = Color3.fromRGB(157, 16, 255);
G2L["e7"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["e7"]["Image"] = [[rbxassetid://1316045217]];
G2L["e7"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["e7"]["BackgroundTransparency"] = 1;
G2L["e7"]["Name"] = [[ambientShadow]];
G2L["e7"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UI-Shadow.ambientShadow.UIGradient
G2L["e8"] = Instance.new("UIGradient", G2L["e7"]);
G2L["e8"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.475),NumberSequenceKeypoint.new(1.000, 0),NumberSequenceKeypoint.new(1.000, 0.85)};
G2L["e8"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UI-Shadow.UIGradient
G2L["e9"] = Instance.new("UIGradient", G2L["e2"]);
G2L["e9"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.475),NumberSequenceKeypoint.new(1.000, 0),NumberSequenceKeypoint.new(1.000, 0.85)};
G2L["e9"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UIGradient
G2L["ea"] = Instance.new("UIGradient", G2L["e1"]);
G2L["ea"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.999, 0.475),NumberSequenceKeypoint.new(1.000, 0),NumberSequenceKeypoint.new(1.000, 0.85)};
G2L["ea"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.Health.UICorner
G2L["eb"] = Instance.new("UICorner", G2L["e1"]);
G2L["eb"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UI-Shadow
G2L["ec"] = Instance.new("Frame", G2L["d4"]);
G2L["ec"]["ZIndex"] = -999999999;
G2L["ec"]["Size"] = UDim2.new(0, 202, 0, 73);
G2L["ec"]["Position"] = UDim2.new(-0.03723, 0, -0.07692, 0);
G2L["ec"]["Name"] = [[UI-Shadow]];
G2L["ec"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UI-Shadow.umbraShadow
G2L["ed"] = Instance.new("ImageLabel", G2L["ec"]);
G2L["ed"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["ed"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["ed"]["ImageTransparency"] = 0.93;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["ed"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ed"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["ed"]["Image"] = [[rbxassetid://1316045217]];
G2L["ed"]["Size"] = UDim2.new(0.98515, 4, 1.10539, 4);
G2L["ed"]["BackgroundTransparency"] = 1;
G2L["ed"]["Name"] = [[umbraShadow]];
G2L["ed"]["Position"] = UDim2.new(0.50248, 0, 0.4747, 3);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UI-Shadow.umbraShadow.UICorner
G2L["ee"] = Instance.new("UICorner", G2L["ed"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UI-Shadow.penumbraShadow
G2L["ef"] = Instance.new("ImageLabel", G2L["ec"]);
G2L["ef"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["ef"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["ef"]["ImageTransparency"] = 0.93;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["ef"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ef"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["ef"]["Image"] = [[rbxassetid://1316045217]];
G2L["ef"]["Size"] = UDim2.new(0.98515, 4, 1.10539, 4);
G2L["ef"]["BackgroundTransparency"] = 1;
G2L["ef"]["Name"] = [[penumbraShadow]];
G2L["ef"]["Position"] = UDim2.new(0.50248, 0, 0.4747, 3);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UI-Shadow.penumbraShadow.UICorner
G2L["f0"] = Instance.new("UICorner", G2L["ef"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UI-Shadow.ambientShadow
G2L["f1"] = Instance.new("ImageLabel", G2L["ec"]);
G2L["f1"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["f1"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["f1"]["ImageTransparency"] = 0.93;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["f1"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f1"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["f1"]["Image"] = [[rbxassetid://1316045217]];
G2L["f1"]["Size"] = UDim2.new(0.98515, 4, 1.10539, 4);
G2L["f1"]["BackgroundTransparency"] = 1;
G2L["f1"]["Name"] = [[ambientShadow]];
G2L["f1"]["Position"] = UDim2.new(0.50248, 0, 0.4747, 3);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UI-Shadow.ambientShadow.UICorner
G2L["f2"] = Instance.new("UICorner", G2L["f1"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UI-Shadow.UICorner
G2L["f3"] = Instance.new("UICorner", G2L["ec"]);



-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UIStroke
G2L["f4"] = Instance.new("UIStroke", G2L["d4"]);
G2L["f4"]["Transparency"] = 0.35;
G2L["f4"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["f4"]["Color"] = Color3.fromRGB(227, 227, 227);


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UIStroke.UIGradient
G2L["f5"] = Instance.new("UIGradient", G2L["f4"]);
G2L["f5"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};


-- StarterGui.xescriptsXD.Storage.Assets.TargetHud.TargetHud2.UICorner
G2L["f6"] = Instance.new("UICorner", G2L["d4"]);



-- StarterGui.xescriptsXD.Storage.Assets.Sfx
G2L["f7"] = Instance.new("Folder", G2L["a8"]);
G2L["f7"]["Name"] = [[Sfx]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Select
G2L["f8"] = Instance.new("Sound", G2L["f7"]);
G2L["f8"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["f8"]["Name"] = [[Select]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit
G2L["f9"] = Instance.new("Folder", G2L["f7"]);
G2L["f9"]["Name"] = [[Hit]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.Rust
G2L["fa"] = Instance.new("Sound", G2L["f9"]);
G2L["fa"]["RollOffMaxDistance"] = 30000;
G2L["fa"]["Volume"] = 1.15;
G2L["fa"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["fa"]["Name"] = [[Rust]];
G2L["fa"]["SoundId"] = [[rbxassetid://138750331387064]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.Hit1
G2L["fb"] = Instance.new("Sound", G2L["f9"]);
G2L["fb"]["RollOffMaxDistance"] = 30000;
G2L["fb"]["Volume"] = 1.15;
G2L["fb"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["fb"]["Name"] = [[Hit1]];
G2L["fb"]["SoundId"] = [[rbxassetid://96170170666605]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.Classic
G2L["fc"] = Instance.new("Sound", G2L["f9"]);
G2L["fc"]["RollOffMaxDistance"] = 30000;
G2L["fc"]["Volume"] = 1.15;
G2L["fc"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["fc"]["Name"] = [[Classic]];
G2L["fc"]["SoundId"] = [[rbxassetid://12221967]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.Bell1
G2L["fd"] = Instance.new("Sound", G2L["f9"]);
G2L["fd"]["RollOffMaxDistance"] = 30000;
G2L["fd"]["Volume"] = 1.15;
G2L["fd"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["fd"]["Name"] = [[Bell1]];
G2L["fd"]["SoundId"] = [[rbxassetid://7112391013]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.Hit2
G2L["fe"] = Instance.new("Sound", G2L["f9"]);
G2L["fe"]["RollOffMaxDistance"] = 30000;
G2L["fe"]["Volume"] = 1.15;
G2L["fe"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["fe"]["Name"] = [[Hit2]];
G2L["fe"]["SoundId"] = [[rbxassetid://15675059323]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.Hit3
G2L["ff"] = Instance.new("Sound", G2L["f9"]);
G2L["ff"]["RollOffMaxDistance"] = 30000;
G2L["ff"]["Volume"] = 1.15;
G2L["ff"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["ff"]["Name"] = [[Hit3]];
G2L["ff"]["SoundId"] = [[rbxassetid://4499400560]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.Beep1
G2L["100"] = Instance.new("Sound", G2L["f9"]);
G2L["100"]["RollOffMaxDistance"] = 30000;
G2L["100"]["Volume"] = 1.15;
G2L["100"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["100"]["Name"] = [[Beep1]];
G2L["100"]["SoundId"] = [[rbxassetid://9113880610]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.DeathSfx
G2L["101"] = Instance.new("Sound", G2L["f9"]);
G2L["101"]["RollOffMaxDistance"] = 30000;
G2L["101"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["101"]["Name"] = [[DeathSfx]];
G2L["101"]["SoundId"] = [[rbxassetid://7039305222]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.Bass1
G2L["102"] = Instance.new("Sound", G2L["f9"]);
G2L["102"]["RollOffMaxDistance"] = 30000;
G2L["102"]["Volume"] = 1.15;
G2L["102"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["102"]["Name"] = [[Bass1]];
G2L["102"]["SoundId"] = [[rbxassetid://12221944]];


-- StarterGui.xescriptsXD.Storage.Assets.Sfx.Hit.Splat1
G2L["103"] = Instance.new("Sound", G2L["f9"]);
G2L["103"]["RollOffMaxDistance"] = 30000;
G2L["103"]["Volume"] = 1.15;
G2L["103"]["RollOffMode"] = Enum.RollOffMode.InverseTapered;
G2L["103"]["Name"] = [[Splat1]];
G2L["103"]["SoundId"] = [[rbxassetid://12222152]];


-- StarterGui.xescriptsXD.Storage.Assets.Cloned
G2L["104"] = Instance.new("Folder", G2L["a8"]);
G2L["104"]["Name"] = [[Cloned]];


-- StarterGui.xescriptsXD.Storage.Assets.Cloned.TargetESP1
G2L["105"] = Instance.new("BillboardGui", G2L["104"]);
G2L["105"]["Active"] = true;
G2L["105"]["LightInfluence"] = 1;
G2L["105"]["AlwaysOnTop"] = true;
G2L["105"]["Size"] = UDim2.new(3.5, 0, 3.5, 0);
G2L["105"]["Enabled"] = false;
G2L["105"]["ClipsDescendants"] = true;
G2L["105"]["ResetOnSpawn"] = false;
G2L["105"]["Name"] = [[TargetESP1]];
G2L["105"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.xescriptsXD.Storage.Assets.Cloned.TargetESP1.ImageLabel
G2L["106"] = Instance.new("ImageLabel", G2L["105"]);
G2L["106"]["Interactable"] = false;
G2L["106"]["BorderSizePixel"] = 0;
G2L["106"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["106"]["ImageTransparency"] = 0.22;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["106"]["Image"] = [[http://www.roblox.com/asset/?id=81155924887135]];
G2L["106"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["106"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["106"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Storage.Assets.Settings
G2L["107"] = Instance.new("Folder", G2L["a8"]);
G2L["107"]["Name"] = [[Settings]];


-- StarterGui.xescriptsXD.Storage.Assets.Settings.TargetESP
G2L["108"] = Instance.new("ModuleScript", G2L["107"]);
G2L["108"]["Name"] = [[TargetESP]];


-- StarterGui.xescriptsXD.Storage.ParticleEX2
G2L["109"] = Instance.new("Frame", G2L["12"]);
G2L["109"]["Visible"] = false;
G2L["109"]["Interactable"] = false;
G2L["109"]["ZIndex"] = -999999999;
G2L["109"]["BorderSizePixel"] = 0;
G2L["109"]["BackgroundColor3"] = Color3.fromRGB(215, 215, 215);
G2L["109"]["Size"] = UDim2.new(0, 34, 0, 35);
G2L["109"]["Position"] = UDim2.new(0.594, 0, 0.50635, 0);
G2L["109"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["109"]["Name"] = [[ParticleEX2]];
G2L["109"]["LayoutOrder"] = -999999999;
G2L["109"]["BackgroundTransparency"] = 0.9;


-- StarterGui.xescriptsXD.Storage.ParticleEX2.UICorner
G2L["10a"] = Instance.new("UICorner", G2L["109"]);
G2L["10a"]["CornerRadius"] = UDim.new(15, 8);


-- StarterGui.xescriptsXD.Storage.ParticleEX2.UIAspectRatioConstraint
G2L["10b"] = Instance.new("UIAspectRatioConstraint", G2L["109"]);



-- StarterGui.xescriptsXD.Storage.ParticleEX2.ParticleEX
G2L["10c"] = Instance.new("Frame", G2L["109"]);
G2L["10c"]["Interactable"] = false;
G2L["10c"]["ZIndex"] = -999999999;
G2L["10c"]["BorderSizePixel"] = 0;
G2L["10c"]["BackgroundColor3"] = Color3.fromRGB(215, 215, 215);
G2L["10c"]["Size"] = UDim2.new(0, 39, 0, 36);
G2L["10c"]["Position"] = UDim2.new(0.86829, 0, 0.50797, 0);
G2L["10c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10c"]["Name"] = [[ParticleEX]];
G2L["10c"]["LayoutOrder"] = -999999999;
G2L["10c"]["BackgroundTransparency"] = 0.9;


-- StarterGui.xescriptsXD.Storage.ParticleEX2.ParticleEX.UICorner
G2L["10d"] = Instance.new("UICorner", G2L["10c"]);
G2L["10d"]["CornerRadius"] = UDim.new(15, 8);


-- StarterGui.xescriptsXD.Storage.ParticleEX2.ParticleEX.UIAspectRatioConstraint
G2L["10e"] = Instance.new("UIAspectRatioConstraint", G2L["10c"]);



-- StarterGui.xescriptsXD.Storage.ParticleEX2.ParticleEX
G2L["10f"] = Instance.new("Frame", G2L["109"]);
G2L["10f"]["Interactable"] = false;
G2L["10f"]["ZIndex"] = -999999999;
G2L["10f"]["BorderSizePixel"] = 0;
G2L["10f"]["BackgroundColor3"] = Color3.fromRGB(215, 215, 215);
G2L["10f"]["Size"] = UDim2.new(0, 26, 0, 126);
G2L["10f"]["Position"] = UDim2.new(0.38648, 0, 0.41288, 0);
G2L["10f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10f"]["Name"] = [[ParticleEX]];
G2L["10f"]["Rotation"] = 22;
G2L["10f"]["LayoutOrder"] = -999999999;
G2L["10f"]["BackgroundTransparency"] = 0.9;


-- StarterGui.xescriptsXD.Storage.ParticleEX2.ParticleEX.UICorner
G2L["110"] = Instance.new("UICorner", G2L["10f"]);
G2L["110"]["CornerRadius"] = UDim.new(15, 8);


-- StarterGui.xescriptsXD.Storage.ParticleEX2.ParticleEX.UIAspectRatioConstraint
G2L["111"] = Instance.new("UIAspectRatioConstraint", G2L["10f"]);
G2L["111"]["AspectRatio"] = 0.34921;


-- StarterGui.xescriptsXD.Storage.KillEffect
G2L["112"] = Instance.new("ParticleEmitter", G2L["12"]);
G2L["112"]["ShapeStyle"] = Enum.ParticleEmitterShapeStyle.Surface;
G2L["112"]["LightInfluence"] = 1;
G2L["112"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(92, 63, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 204, 45))};
G2L["112"]["TimeScale"] = 0.85;
G2L["112"]["Size"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.7),NumberSequenceKeypoint.new(1.000, 0.7)};
G2L["112"]["Texture"] = [[rbxassetid://246689799]];
G2L["112"]["ShapeInOut"] = Enum.ParticleEmitterShapeInOut.Inward;
G2L["112"]["Rate"] = 75;
G2L["112"]["Name"] = [[KillEffect]];
G2L["112"]["Shape"] = Enum.ParticleEmitterShape.Sphere;


-- StarterGui.xescriptsXD.Storage.Crosshaifr
G2L["113"] = Instance.new("ImageLabel", G2L["12"]);
G2L["113"]["Interactable"] = false;
G2L["113"]["BorderSizePixel"] = 0;
G2L["113"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["113"]["ImageTransparency"] = 0.4;
G2L["113"]["Size"] = UDim2.new(0.01637, 0, 0.02331, 0);
G2L["113"]["Visible"] = false;
G2L["113"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["113"]["BackgroundTransparency"] = 1;
G2L["113"]["Name"] = [[Crosshaifr]];
G2L["113"]["Position"] = UDim2.new(0.49173, 0, 0.46067, 0);


-- StarterGui.xescriptsXD.Storage.Crosshaifr.UIAspectRatioConstraint
G2L["114"] = Instance.new("UIAspectRatioConstraint", G2L["113"]);



-- StarterGui.xescriptsXD.Storage.Crosshaifr.UIStroke
G2L["115"] = Instance.new("UIStroke", G2L["113"]);
G2L["115"]["Thickness"] = 3;
G2L["115"]["Color"] = Color3.fromRGB(168, 31, 202);


-- StarterGui.xescriptsXD.Storage.Crosshaifr.UICorner
G2L["116"] = Instance.new("UICorner", G2L["113"]);



-- StarterGui.xescriptsXD.Storage.SFXF
G2L["117"] = Instance.new("BoolValue", G2L["12"]);
G2L["117"]["Name"] = [[SFXF]];


-- StarterGui.xescriptsXD.Storage.ParticleEX
G2L["118"] = Instance.new("Frame", G2L["12"]);
G2L["118"]["Visible"] = false;
G2L["118"]["Interactable"] = false;
G2L["118"]["BorderSizePixel"] = 0;
G2L["118"]["BackgroundColor3"] = Color3.fromRGB(215, 215, 215);
G2L["118"]["Size"] = UDim2.new(0, 8, 0, 8);
G2L["118"]["Position"] = UDim2.new(0.3635, 0, 0.50635, 0);
G2L["118"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["118"]["Name"] = [[ParticleEX]];
G2L["118"]["LayoutOrder"] = -999999999;
G2L["118"]["BackgroundTransparency"] = 0.9;


-- StarterGui.xescriptsXD.Storage.ParticleEX.UICorner
G2L["119"] = Instance.new("UICorner", G2L["118"]);
G2L["119"]["CornerRadius"] = UDim.new(15, 8);


-- StarterGui.xescriptsXD.Storage.ParticleEX.UIAspectRatioConstraint
G2L["11a"] = Instance.new("UIAspectRatioConstraint", G2L["118"]);



-- StarterGui.xescriptsXD.Frame
G2L["11b"] = Instance.new("Frame", G2L["1"]);
G2L["11b"]["Visible"] = false;
G2L["11b"]["BorderSizePixel"] = 0;
G2L["11b"]["BackgroundColor3"] = Color3.fromRGB(27, 27, 27);
G2L["11b"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["11b"]["Size"] = UDim2.new(0.59937, 0, 0.56016, 0);
G2L["11b"]["Position"] = UDim2.new(0.439, 0, 0.51791, 0);
G2L["11b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11b"]["BackgroundTransparency"] = 0.03;


-- StarterGui.xescriptsXD.Frame.Ds
G2L["11c"] = Instance.new("LocalScript", G2L["11b"]);
G2L["11c"]["Name"] = [[Ds]];


-- StarterGui.xescriptsXD.Frame.LocalScript
G2L["11d"] = Instance.new("LocalScript", G2L["11b"]);



-- StarterGui.xescriptsXD.Frame.Ds2
G2L["11e"] = Instance.new("LocalScript", G2L["11b"]);
G2L["11e"]["Name"] = [[Ds2]];


-- StarterGui.xescriptsXD.Frame.UICorner
G2L["11f"] = Instance.new("UICorner", G2L["11b"]);



-- StarterGui.xescriptsXD.Frame.UIStroke
G2L["120"] = Instance.new("UIStroke", G2L["11b"]);
G2L["120"]["Transparency"] = 0.35;
G2L["120"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["120"]["Thickness"] = 1.5;
G2L["120"]["Color"] = Color3.fromRGB(227, 227, 227);


-- StarterGui.xescriptsXD.Frame.UIStroke.UIGradient
G2L["121"] = Instance.new("UIGradient", G2L["120"]);
G2L["121"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};


-- StarterGui.xescriptsXD.Frame.UIStroke.UIGradient.LocalScript
G2L["122"] = Instance.new("LocalScript", G2L["121"]);



-- StarterGui.xescriptsXD.Frame.General
G2L["123"] = Instance.new("Frame", G2L["11b"]);
G2L["123"]["BorderSizePixel"] = 0;
G2L["123"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["123"]["Size"] = UDim2.new(0.68078, 0, 0.81384, 0);
G2L["123"]["Position"] = UDim2.new(0.293, 0, 0.146, 0);
G2L["123"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["123"]["Name"] = [[General]];
G2L["123"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.General.LocalScript
G2L["124"] = Instance.new("LocalScript", G2L["123"]);



-- StarterGui.xescriptsXD.Frame.General.TextLabel
G2L["125"] = Instance.new("TextLabel", G2L["123"]);
G2L["125"]["TextWrapped"] = true;
G2L["125"]["BorderSizePixel"] = 0;
G2L["125"]["TextSize"] = 14;
G2L["125"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["125"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["125"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["125"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["125"]["TextColor3"] = Color3.fromRGB(225, 225, 225);
G2L["125"]["BackgroundTransparency"] = 1;
G2L["125"]["Size"] = UDim2.new(1, 0, 0.19864, 0);
G2L["125"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["125"]["Text"] = [[Welcome to XEScripts Beta! Current Version:1.7B]];


-- StarterGui.xescriptsXD.Frame.General.TextLabel.LocalScript
G2L["126"] = Instance.new("LocalScript", G2L["125"]);



-- StarterGui.xescriptsXD.Frame.ImageLabel
G2L["127"] = Instance.new("ImageLabel", G2L["11b"]);
G2L["127"]["BorderSizePixel"] = 0;
G2L["127"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["127"]["ImageTransparency"] = 0.4;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["127"]["Image"] = [[http://www.roblox.com/asset/?id=131887670312119]];
G2L["127"]["Size"] = UDim2.new(0.99838, 0, 0.99761, 0);
G2L["127"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["127"]["BackgroundTransparency"] = 1;
G2L["127"]["Position"] = UDim2.new(0, 0, 0.00239, 0);


-- StarterGui.xescriptsXD.Frame.ImageLabel.LocalScript
G2L["128"] = Instance.new("LocalScript", G2L["127"]);



-- StarterGui.xescriptsXD.Frame.UIGradient
G2L["129"] = Instance.new("UIGradient", G2L["11b"]);
G2L["129"]["Rotation"] = 62;
G2L["129"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(206, 206, 206)),ColorSequenceKeypoint.new(0.145, Color3.fromRGB(243, 243, 243)),ColorSequenceKeypoint.new(0.490, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(192, 192, 192))};


-- StarterGui.xescriptsXD.Frame.Title
G2L["12a"] = Instance.new("Frame", G2L["11b"]);
G2L["12a"]["BorderSizePixel"] = 0;
G2L["12a"]["BackgroundColor3"] = Color3.fromRGB(33, 33, 33);
G2L["12a"]["Size"] = UDim2.new(0.35907, 0, 0.07512, 0);
G2L["12a"]["Position"] = UDim2.new(0.02402, 0, 0.02242, 0);
G2L["12a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12a"]["Name"] = [[Title]];
G2L["12a"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Title.UICorner
G2L["12b"] = Instance.new("UICorner", G2L["12a"]);
G2L["12b"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Title.ImageLabel
G2L["12c"] = Instance.new("ImageLabel", G2L["12a"]);
G2L["12c"]["BorderSizePixel"] = 0;
G2L["12c"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["12c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["12c"]["ImageColor3"] = Color3.fromRGB(237, 237, 237);
G2L["12c"]["Image"] = [[rbxassetid://117239569908902]];
G2L["12c"]["Size"] = UDim2.new(0.22395, 0, 1.68939, 0);
G2L["12c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12c"]["BackgroundTransparency"] = 1;
G2L["12c"]["Position"] = UDim2.new(-0.04259, 0, -0.29846, 0);


-- StarterGui.xescriptsXD.Frame.Title.UIGradient
G2L["12d"] = Instance.new("UIGradient", G2L["12a"]);
G2L["12d"]["Rotation"] = 90;
G2L["12d"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Title.TextLabel
G2L["12e"] = Instance.new("TextLabel", G2L["12a"]);
G2L["12e"]["TextWrapped"] = true;
G2L["12e"]["BorderSizePixel"] = 0;
G2L["12e"]["TextSize"] = 14;
G2L["12e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["12e"]["TextScaled"] = true;
G2L["12e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["12e"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["12e"]["BackgroundTransparency"] = 1;
G2L["12e"]["Size"] = UDim2.new(1.13878, 0, 1, 0);
G2L["12e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12e"]["Text"] = [[XEScripts Beta | 1.7B | 0:00 AM]];
G2L["12e"]["Position"] = UDim2.new(0.16742, 0, 0.01406, 0);


-- StarterGui.xescriptsXD.Frame.Title.TextLabel.LocalScript
G2L["12f"] = Instance.new("LocalScript", G2L["12e"]);



-- StarterGui.xescriptsXD.Frame.Title.TextLabel.UITextSizeConstraint
G2L["130"] = Instance.new("UITextSizeConstraint", G2L["12e"]);
G2L["130"]["MaxTextSize"] = 24;


-- StarterGui.xescriptsXD.Frame.imaged
G2L["131"] = Instance.new("ImageLabel", G2L["11b"]);
G2L["131"]["ZIndex"] = -999999999;
G2L["131"]["BorderSizePixel"] = 0;
G2L["131"]["ScaleType"] = Enum.ScaleType.Fit;
G2L["131"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["131"]["ImageTransparency"] = 0.8;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["131"]["ImageColor3"] = Color3.fromRGB(167, 167, 167);
G2L["131"]["Image"] = [[http://www.roblox.com/asset/?id=1382468884]];
G2L["131"]["Size"] = UDim2.new(0.28445, 0, 0.52983, 0);
G2L["131"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["131"]["BackgroundTransparency"] = 1;
G2L["131"]["LayoutOrder"] = -999999999;
G2L["131"]["Name"] = [[imaged]];
G2L["131"]["Position"] = UDim2.new(0.69839, 0, 0.43748, 0);


-- StarterGui.xescriptsXD.Frame.XEScripts
G2L["132"] = Instance.new("TextLabel", G2L["11b"]);
G2L["132"]["TextWrapped"] = true;
G2L["132"]["ZIndex"] = -999;
G2L["132"]["BorderSizePixel"] = 0;
G2L["132"]["AutoLocalize"] = false;
G2L["132"]["TextSize"] = 14;
G2L["132"]["TextTransparency"] = 0.9;
G2L["132"]["TextScaled"] = true;
G2L["132"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["132"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["132"]["TextColor3"] = Color3.fromRGB(154, 154, 154);
G2L["132"]["BackgroundTransparency"] = 1;
G2L["132"]["Size"] = UDim2.new(0.70974, 0, 0.37232, 0);
G2L["132"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["132"]["Text"] = [[XESCRIPTS]];
G2L["132"]["LayoutOrder"] = -999999;
G2L["132"]["Rotation"] = 21;
G2L["132"]["Name"] = [[XEScripts]];
G2L["132"]["Position"] = UDim2.new(-0.01236, 0, 0.54415, 0);


-- StarterGui.xescriptsXD.Frame.Visual
G2L["133"] = Instance.new("Frame", G2L["11b"]);
G2L["133"]["Visible"] = false;
G2L["133"]["BorderSizePixel"] = 0;
G2L["133"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["133"]["Size"] = UDim2.new(0.68078, 0, 0.81384, 0);
G2L["133"]["Position"] = UDim2.new(0.29277, 0, 0.14558, 0);
G2L["133"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["133"]["Name"] = [[Visual]];
G2L["133"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.LocalScript
G2L["134"] = Instance.new("LocalScript", G2L["133"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame
G2L["135"] = Instance.new("ScrollingFrame", G2L["133"]);
G2L["135"]["Active"] = true;
G2L["135"]["BorderSizePixel"] = 0;
G2L["135"]["CanvasSize"] = UDim2.new(0, 0, 3, 0);
G2L["135"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["135"]["ScrollBarImageTransparency"] = 1;
G2L["135"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["135"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["135"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["135"]["ScrollBarThickness"] = 3;
G2L["135"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP
G2L["136"] = Instance.new("Frame", G2L["135"]);
G2L["136"]["BorderSizePixel"] = 0;
G2L["136"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["136"]["Size"] = UDim2.new(0.492, 0, 0.275, 0);
G2L["136"]["Position"] = UDim2.new(-0.00259, 0, 0, 0);
G2L["136"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["136"]["Name"] = [[ESP]];
G2L["136"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.TextLabel
G2L["137"] = Instance.new("TextLabel", G2L["136"]);
G2L["137"]["TextWrapped"] = true;
G2L["137"]["BorderSizePixel"] = 0;
G2L["137"]["TextSize"] = 14;
G2L["137"]["TextScaled"] = true;
G2L["137"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["137"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["137"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["137"]["BackgroundTransparency"] = 1;
G2L["137"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["137"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["137"]["Text"] = [[ESP]];
G2L["137"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.TextLabel
G2L["138"] = Instance.new("TextLabel", G2L["136"]);
G2L["138"]["TextWrapped"] = true;
G2L["138"]["BorderSizePixel"] = 0;
G2L["138"]["TextSize"] = 14;
G2L["138"]["TextScaled"] = true;
G2L["138"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["138"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["138"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["138"]["BackgroundTransparency"] = 1;
G2L["138"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["138"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["138"]["Text"] = [[________________________________________]];
G2L["138"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.TextLabel
G2L["139"] = Instance.new("TextLabel", G2L["136"]);
G2L["139"]["TextWrapped"] = true;
G2L["139"]["BorderSizePixel"] = 0;
G2L["139"]["TextSize"] = 14;
G2L["139"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["139"]["TextScaled"] = true;
G2L["139"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["139"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["139"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["139"]["BackgroundTransparency"] = 1;
G2L["139"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["139"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["139"]["Text"] = [[Enable]];
G2L["139"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable
G2L["13a"] = Instance.new("Frame", G2L["136"]);
G2L["13a"]["BorderSizePixel"] = 0;
G2L["13a"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["13a"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["13a"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["13a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13a"]["Name"] = [[Enable]];
G2L["13a"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.UICorner
G2L["13b"] = Instance.new("UICorner", G2L["13a"]);
G2L["13b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton
G2L["13c"] = Instance.new("TextButton", G2L["13a"]);
G2L["13c"]["BorderSizePixel"] = 0;
G2L["13c"]["TextTransparency"] = 1;
G2L["13c"]["TextSize"] = 14;
G2L["13c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13c"]["BackgroundTransparency"] = 1;
G2L["13c"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["13c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton.LocalScript
G2L["13d"] = Instance.new("LocalScript", G2L["13c"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton.UICorner
G2L["13e"] = Instance.new("UICorner", G2L["13c"]);
G2L["13e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton.UIAspectRatioConstraint
G2L["13f"] = Instance.new("UIAspectRatioConstraint", G2L["13c"]);
G2L["13f"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.Carget
G2L["140"] = Instance.new("Frame", G2L["13a"]);
G2L["140"]["BorderSizePixel"] = 0;
G2L["140"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["140"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["140"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["140"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["140"]["Name"] = [[Carget]];
G2L["140"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.Carget.UICorner
G2L["141"] = Instance.new("UICorner", G2L["140"]);
G2L["141"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.Carget.UIAspectRatioConstraint
G2L["142"] = Instance.new("UIAspectRatioConstraint", G2L["140"]);
G2L["142"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.UIAspectRatioConstraint
G2L["143"] = Instance.new("UIAspectRatioConstraint", G2L["13a"]);
G2L["143"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.Enabled
G2L["144"] = Instance.new("BoolValue", G2L["13a"]);
G2L["144"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Teamcheck
G2L["145"] = Instance.new("BoolValue", G2L["136"]);
G2L["145"]["Name"] = [[Teamcheck]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.TextLabel
G2L["146"] = Instance.new("TextLabel", G2L["136"]);
G2L["146"]["TextWrapped"] = true;
G2L["146"]["BorderSizePixel"] = 0;
G2L["146"]["TextSize"] = 14;
G2L["146"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["146"]["TextScaled"] = true;
G2L["146"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["146"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["146"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["146"]["BackgroundTransparency"] = 1;
G2L["146"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["146"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["146"]["Text"] = [[Team Check]];
G2L["146"]["Position"] = UDim2.new(0.04211, 0, 0.30469, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable
G2L["147"] = Instance.new("Frame", G2L["136"]);
G2L["147"]["BorderSizePixel"] = 0;
G2L["147"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["147"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["147"]["Position"] = UDim2.new(0.753, 0, 0.3125, 0);
G2L["147"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["147"]["Name"] = [[Enable]];
G2L["147"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.UICorner
G2L["148"] = Instance.new("UICorner", G2L["147"]);
G2L["148"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton
G2L["149"] = Instance.new("TextButton", G2L["147"]);
G2L["149"]["BorderSizePixel"] = 0;
G2L["149"]["TextTransparency"] = 1;
G2L["149"]["TextSize"] = 14;
G2L["149"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["149"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["149"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["149"]["BackgroundTransparency"] = 1;
G2L["149"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["149"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton.LocalScript
G2L["14a"] = Instance.new("LocalScript", G2L["149"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton.UICorner
G2L["14b"] = Instance.new("UICorner", G2L["149"]);
G2L["14b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton.UIAspectRatioConstraint
G2L["14c"] = Instance.new("UIAspectRatioConstraint", G2L["149"]);
G2L["14c"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.Carget
G2L["14d"] = Instance.new("Frame", G2L["147"]);
G2L["14d"]["BorderSizePixel"] = 0;
G2L["14d"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["14d"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["14d"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["14d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14d"]["Name"] = [[Carget]];
G2L["14d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.Carget.UICorner
G2L["14e"] = Instance.new("UICorner", G2L["14d"]);
G2L["14e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.Carget.UIAspectRatioConstraint
G2L["14f"] = Instance.new("UIAspectRatioConstraint", G2L["14d"]);
G2L["14f"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.UIAspectRatioConstraint
G2L["150"] = Instance.new("UIAspectRatioConstraint", G2L["147"]);
G2L["150"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.Enabled
G2L["151"] = Instance.new("BoolValue", G2L["147"]);
G2L["151"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.ColorVal
G2L["152"] = Instance.new("Color3Value", G2L["136"]);
G2L["152"]["Name"] = [[ColorVal]];
G2L["152"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency
G2L["153"] = Instance.new("Frame", G2L["136"]);
G2L["153"]["BorderSizePixel"] = 0;
G2L["153"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["153"]["Size"] = UDim2.new(0.92105, 0, 0.0831, 0);
G2L["153"]["Position"] = UDim2.new(0.02668, 0, 0.87511, 0);
G2L["153"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["153"]["Name"] = [[Transparency]];
G2L["153"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency.UICorner
G2L["154"] = Instance.new("UICorner", G2L["153"]);
G2L["154"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency.Enabled
G2L["155"] = Instance.new("BoolValue", G2L["153"]);
G2L["155"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency.TextLabel
G2L["156"] = Instance.new("TextLabel", G2L["153"]);
G2L["156"]["TextWrapped"] = true;
G2L["156"]["Interactable"] = false;
G2L["156"]["BorderSizePixel"] = 0;
G2L["156"]["TextSize"] = 14;
G2L["156"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["156"]["TextScaled"] = true;
G2L["156"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["156"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["156"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["156"]["BackgroundTransparency"] = 1;
G2L["156"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["156"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["156"]["Text"] = [[Transparency: 0.00]];
G2L["156"]["Position"] = UDim2.new(0.02586, 0, 0.14083, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency.Carget
G2L["157"] = Instance.new("Frame", G2L["153"]);
G2L["157"]["ZIndex"] = -333;
G2L["157"]["BorderSizePixel"] = 0;
G2L["157"]["AutoLocalize"] = false;
G2L["157"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["157"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["157"]["Position"] = UDim2.new(0.18, 0, 0, 0);
G2L["157"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["157"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency.Carget.UICorner
G2L["158"] = Instance.new("UICorner", G2L["157"]);
G2L["158"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency.Carget.TextButton
G2L["159"] = Instance.new("TextButton", G2L["157"]);
G2L["159"]["BorderSizePixel"] = 0;
G2L["159"]["TextTransparency"] = 1;
G2L["159"]["AutoLocalize"] = false;
G2L["159"]["TextSize"] = 14;
G2L["159"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["159"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["159"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["159"]["BackgroundTransparency"] = 1;
G2L["159"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["159"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency.Carget.TextButton.LocalScript
G2L["15a"] = Instance.new("LocalScript", G2L["159"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency.Carget.UIAspectRatioConstraint
G2L["15b"] = Instance.new("UIAspectRatioConstraint", G2L["157"]);
G2L["15b"]["AspectRatio"] = 0.78841;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.TransparencyVal
G2L["15c"] = Instance.new("NumberValue", G2L["136"]);
G2L["15c"]["Name"] = [[TransparencyVal]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness
G2L["15d"] = Instance.new("Frame", G2L["136"]);
G2L["15d"]["BorderSizePixel"] = 0;
G2L["15d"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["15d"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["15d"]["Position"] = UDim2.new(0.02668, 0, 0.76172, 0);
G2L["15d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15d"]["Name"] = [[Thickness]];
G2L["15d"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness.UICorner
G2L["15e"] = Instance.new("UICorner", G2L["15d"]);
G2L["15e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness.Enabled
G2L["15f"] = Instance.new("BoolValue", G2L["15d"]);
G2L["15f"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness.TextLabel
G2L["160"] = Instance.new("TextLabel", G2L["15d"]);
G2L["160"]["TextWrapped"] = true;
G2L["160"]["Interactable"] = false;
G2L["160"]["BorderSizePixel"] = 0;
G2L["160"]["TextSize"] = 14;
G2L["160"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["160"]["TextScaled"] = true;
G2L["160"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["160"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["160"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["160"]["BackgroundTransparency"] = 1;
G2L["160"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["160"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["160"]["Text"] = [[Thickness: 2.00]];
G2L["160"]["Position"] = UDim2.new(0.02586, 0, 0.14083, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness.Carget
G2L["161"] = Instance.new("Frame", G2L["15d"]);
G2L["161"]["ZIndex"] = -333;
G2L["161"]["BorderSizePixel"] = 0;
G2L["161"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["161"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["161"]["Position"] = UDim2.new(0.18, 0, 0, 0);
G2L["161"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["161"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness.Carget.UICorner
G2L["162"] = Instance.new("UICorner", G2L["161"]);
G2L["162"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness.Carget.UIAspectRatioConstraint
G2L["163"] = Instance.new("UIAspectRatioConstraint", G2L["161"]);
G2L["163"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness.Carget.TextButton
G2L["164"] = Instance.new("TextButton", G2L["161"]);
G2L["164"]["BorderSizePixel"] = 0;
G2L["164"]["TextTransparency"] = 1;
G2L["164"]["TextSize"] = 14;
G2L["164"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["164"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["164"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["164"]["BackgroundTransparency"] = 1;
G2L["164"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["164"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness.Carget.TextButton.LocalScript
G2L["165"] = Instance.new("LocalScript", G2L["164"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.ThicknessVal
G2L["166"] = Instance.new("NumberValue", G2L["136"]);
G2L["166"]["Name"] = [[ThicknessVal]];
G2L["166"]["Value"] = 2;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.TextBox
G2L["167"] = Instance.new("TextBox", G2L["136"]);
G2L["167"]["BorderSizePixel"] = 0;
G2L["167"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["167"]["TextSize"] = 14;
G2L["167"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["167"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["167"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["167"]["PlaceholderText"] = [[Color - 255,255,255]];
G2L["167"]["Size"] = UDim2.new(0.94737, 0, 0.15625, 0);
G2L["167"]["Position"] = UDim2.new(0, 0, 0.41822, 0);
G2L["167"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["167"]["Text"] = [[]];
G2L["167"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.TextBox.LocalScript
G2L["168"] = Instance.new("LocalScript", G2L["167"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams
G2L["169"] = Instance.new("Frame", G2L["135"]);
G2L["169"]["BorderSizePixel"] = 0;
G2L["169"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["169"]["Size"] = UDim2.new(0.492, 0, 0.275, 0);
G2L["169"]["Position"] = UDim2.new(0.50777, 0, 0, 0);
G2L["169"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["169"]["Name"] = [[Chams]];
G2L["169"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextLabel
G2L["16a"] = Instance.new("TextLabel", G2L["169"]);
G2L["16a"]["TextWrapped"] = true;
G2L["16a"]["BorderSizePixel"] = 0;
G2L["16a"]["TextSize"] = 14;
G2L["16a"]["TextScaled"] = true;
G2L["16a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["16a"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["16a"]["BackgroundTransparency"] = 1;
G2L["16a"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["16a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16a"]["Text"] = [[Chams]];
G2L["16a"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextLabel
G2L["16b"] = Instance.new("TextLabel", G2L["169"]);
G2L["16b"]["TextWrapped"] = true;
G2L["16b"]["BorderSizePixel"] = 0;
G2L["16b"]["TextSize"] = 14;
G2L["16b"]["TextScaled"] = true;
G2L["16b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["16b"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["16b"]["BackgroundTransparency"] = 1;
G2L["16b"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["16b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16b"]["Text"] = [[________________________________________]];
G2L["16b"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextLabel
G2L["16c"] = Instance.new("TextLabel", G2L["169"]);
G2L["16c"]["TextWrapped"] = true;
G2L["16c"]["BorderSizePixel"] = 0;
G2L["16c"]["TextSize"] = 14;
G2L["16c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["16c"]["TextScaled"] = true;
G2L["16c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["16c"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["16c"]["BackgroundTransparency"] = 1;
G2L["16c"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["16c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16c"]["Text"] = [[Enable]];
G2L["16c"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable
G2L["16d"] = Instance.new("Frame", G2L["169"]);
G2L["16d"]["BorderSizePixel"] = 0;
G2L["16d"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["16d"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["16d"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["16d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16d"]["Name"] = [[Enable]];
G2L["16d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.UICorner
G2L["16e"] = Instance.new("UICorner", G2L["16d"]);
G2L["16e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton
G2L["16f"] = Instance.new("TextButton", G2L["16d"]);
G2L["16f"]["BorderSizePixel"] = 0;
G2L["16f"]["TextTransparency"] = 1;
G2L["16f"]["TextSize"] = 14;
G2L["16f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16f"]["BackgroundTransparency"] = 1;
G2L["16f"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["16f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.LocalScript
G2L["170"] = Instance.new("LocalScript", G2L["16f"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.UICorner
G2L["171"] = Instance.new("UICorner", G2L["16f"]);
G2L["171"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.UIAspectRatioConstraint
G2L["172"] = Instance.new("UIAspectRatioConstraint", G2L["16f"]);
G2L["172"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget
G2L["173"] = Instance.new("Frame", G2L["16d"]);
G2L["173"]["BorderSizePixel"] = 0;
G2L["173"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["173"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["173"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["173"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["173"]["Name"] = [[Carget]];
G2L["173"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget.UICorner
G2L["174"] = Instance.new("UICorner", G2L["173"]);
G2L["174"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget.UIAspectRatioConstraint
G2L["175"] = Instance.new("UIAspectRatioConstraint", G2L["173"]);
G2L["175"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.UIAspectRatioConstraint
G2L["176"] = Instance.new("UIAspectRatioConstraint", G2L["16d"]);
G2L["176"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Enabled
G2L["177"] = Instance.new("BoolValue", G2L["16d"]);
G2L["177"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Teamcheck
G2L["178"] = Instance.new("BoolValue", G2L["169"]);
G2L["178"]["Name"] = [[Teamcheck]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextLabel
G2L["179"] = Instance.new("TextLabel", G2L["169"]);
G2L["179"]["TextWrapped"] = true;
G2L["179"]["BorderSizePixel"] = 0;
G2L["179"]["TextSize"] = 14;
G2L["179"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["179"]["TextScaled"] = true;
G2L["179"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["179"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["179"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["179"]["BackgroundTransparency"] = 1;
G2L["179"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["179"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["179"]["Text"] = [[Team Check]];
G2L["179"]["Position"] = UDim2.new(0.04211, 0, 0.30469, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable
G2L["17a"] = Instance.new("Frame", G2L["169"]);
G2L["17a"]["BorderSizePixel"] = 0;
G2L["17a"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["17a"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["17a"]["Position"] = UDim2.new(0.753, 0, 0.3125, 0);
G2L["17a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17a"]["Name"] = [[Enable]];
G2L["17a"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.UICorner
G2L["17b"] = Instance.new("UICorner", G2L["17a"]);
G2L["17b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton
G2L["17c"] = Instance.new("TextButton", G2L["17a"]);
G2L["17c"]["BorderSizePixel"] = 0;
G2L["17c"]["TextTransparency"] = 1;
G2L["17c"]["TextSize"] = 14;
G2L["17c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["17c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17c"]["BackgroundTransparency"] = 1;
G2L["17c"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["17c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.LocalScript
G2L["17d"] = Instance.new("LocalScript", G2L["17c"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.UICorner
G2L["17e"] = Instance.new("UICorner", G2L["17c"]);
G2L["17e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.UIAspectRatioConstraint
G2L["17f"] = Instance.new("UIAspectRatioConstraint", G2L["17c"]);
G2L["17f"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget
G2L["180"] = Instance.new("Frame", G2L["17a"]);
G2L["180"]["BorderSizePixel"] = 0;
G2L["180"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["180"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["180"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["180"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["180"]["Name"] = [[Carget]];
G2L["180"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget.UICorner
G2L["181"] = Instance.new("UICorner", G2L["180"]);
G2L["181"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget.UIAspectRatioConstraint
G2L["182"] = Instance.new("UIAspectRatioConstraint", G2L["180"]);
G2L["182"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.UIAspectRatioConstraint
G2L["183"] = Instance.new("UIAspectRatioConstraint", G2L["17a"]);
G2L["183"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Enabled
G2L["184"] = Instance.new("BoolValue", G2L["17a"]);
G2L["184"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.ColorVal
G2L["185"] = Instance.new("Color3Value", G2L["169"]);
G2L["185"]["Name"] = [[ColorVal]];
G2L["185"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency
G2L["186"] = Instance.new("Frame", G2L["169"]);
G2L["186"]["Visible"] = false;
G2L["186"]["BorderSizePixel"] = 0;
G2L["186"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["186"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["186"]["Position"] = UDim2.new(0.02668, 0, 0.875, 0);
G2L["186"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["186"]["Name"] = [[Transparency]];
G2L["186"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency.UICorner
G2L["187"] = Instance.new("UICorner", G2L["186"]);
G2L["187"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency.Enabled
G2L["188"] = Instance.new("BoolValue", G2L["186"]);
G2L["188"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency.TextLabel
G2L["189"] = Instance.new("TextLabel", G2L["186"]);
G2L["189"]["TextWrapped"] = true;
G2L["189"]["Interactable"] = false;
G2L["189"]["BorderSizePixel"] = 0;
G2L["189"]["TextSize"] = 14;
G2L["189"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["189"]["TextScaled"] = true;
G2L["189"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["189"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["189"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["189"]["BackgroundTransparency"] = 1;
G2L["189"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["189"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["189"]["Text"] = [[Transparency: 0.00]];
G2L["189"]["Position"] = UDim2.new(0.02586, 0, 0.14083, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency.Carget
G2L["18a"] = Instance.new("Frame", G2L["186"]);
G2L["18a"]["ZIndex"] = -333;
G2L["18a"]["BorderSizePixel"] = 0;
G2L["18a"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["18a"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["18a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18a"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency.Carget.UICorner
G2L["18b"] = Instance.new("UICorner", G2L["18a"]);
G2L["18b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency.Carget.TextButton
G2L["18c"] = Instance.new("TextButton", G2L["18a"]);
G2L["18c"]["BorderSizePixel"] = 0;
G2L["18c"]["TextTransparency"] = 1;
G2L["18c"]["TextSize"] = 14;
G2L["18c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18c"]["BackgroundTransparency"] = 1;
G2L["18c"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["18c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency.Carget.TextButton.LocalScript
G2L["18d"] = Instance.new("LocalScript", G2L["18c"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency.Carget.UIAspectRatioConstraint
G2L["18e"] = Instance.new("UIAspectRatioConstraint", G2L["18a"]);
G2L["18e"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TransparencyVal
G2L["18f"] = Instance.new("NumberValue", G2L["169"]);
G2L["18f"]["Name"] = [[TransparencyVal]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness
G2L["190"] = Instance.new("Frame", G2L["169"]);
G2L["190"]["Visible"] = false;
G2L["190"]["BorderSizePixel"] = 0;
G2L["190"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["190"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["190"]["Position"] = UDim2.new(0.02668, 0, 0.76172, 0);
G2L["190"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["190"]["Name"] = [[Thickness]];
G2L["190"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness.UICorner
G2L["191"] = Instance.new("UICorner", G2L["190"]);
G2L["191"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness.Enabled
G2L["192"] = Instance.new("BoolValue", G2L["190"]);
G2L["192"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness.TextLabel
G2L["193"] = Instance.new("TextLabel", G2L["190"]);
G2L["193"]["TextWrapped"] = true;
G2L["193"]["Interactable"] = false;
G2L["193"]["BorderSizePixel"] = 0;
G2L["193"]["TextSize"] = 14;
G2L["193"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["193"]["TextScaled"] = true;
G2L["193"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["193"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["193"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["193"]["BackgroundTransparency"] = 1;
G2L["193"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["193"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["193"]["Text"] = [[Thickness: 2.00]];
G2L["193"]["Position"] = UDim2.new(0.02586, 0, 0.14083, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness.Carget
G2L["194"] = Instance.new("Frame", G2L["190"]);
G2L["194"]["ZIndex"] = -333;
G2L["194"]["BorderSizePixel"] = 0;
G2L["194"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["194"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["194"]["Position"] = UDim2.new(0.18, 0, 0, 0);
G2L["194"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["194"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness.Carget.UICorner
G2L["195"] = Instance.new("UICorner", G2L["194"]);
G2L["195"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness.Carget.TextButton
G2L["196"] = Instance.new("TextButton", G2L["194"]);
G2L["196"]["BorderSizePixel"] = 0;
G2L["196"]["TextTransparency"] = 1;
G2L["196"]["TextSize"] = 14;
G2L["196"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["196"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["196"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["196"]["BackgroundTransparency"] = 1;
G2L["196"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["196"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness.Carget.TextButton.LocalScript
G2L["197"] = Instance.new("LocalScript", G2L["196"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness.Carget.UIAspectRatioConstraint
G2L["198"] = Instance.new("UIAspectRatioConstraint", G2L["194"]);
G2L["198"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.ThicknessVal
G2L["199"] = Instance.new("NumberValue", G2L["169"]);
G2L["199"]["Name"] = [[ThicknessVal]];
G2L["199"]["Value"] = 2;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextBox
G2L["19a"] = Instance.new("TextBox", G2L["169"]);
G2L["19a"]["BorderSizePixel"] = 0;
G2L["19a"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["19a"]["TextSize"] = 14;
G2L["19a"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["19a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["19a"]["PlaceholderText"] = [[Color - 255,255,255]];
G2L["19a"]["Size"] = UDim2.new(0.94737, 0, 0.15625, 0);
G2L["19a"]["Position"] = UDim2.new(0, 0, 0.41822, 0);
G2L["19a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19a"]["Text"] = [[]];
G2L["19a"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextBox.LocalScript
G2L["19b"] = Instance.new("LocalScript", G2L["19a"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextLabel
G2L["19c"] = Instance.new("TextLabel", G2L["169"]);
G2L["19c"]["TextWrapped"] = true;
G2L["19c"]["BorderSizePixel"] = 0;
G2L["19c"]["TextSize"] = 14;
G2L["19c"]["TextScaled"] = true;
G2L["19c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["19c"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["19c"]["BackgroundTransparency"] = 1;
G2L["19c"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["19c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19c"]["Text"] = [[SkeletonESP]];
G2L["19c"]["Position"] = UDim2.new(0, 0, 0.57831, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextLabel
G2L["19d"] = Instance.new("TextLabel", G2L["169"]);
G2L["19d"]["TextWrapped"] = true;
G2L["19d"]["BorderSizePixel"] = 0;
G2L["19d"]["TextSize"] = 14;
G2L["19d"]["TextScaled"] = true;
G2L["19d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["19d"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["19d"]["BackgroundTransparency"] = 1;
G2L["19d"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["19d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19d"]["Text"] = [[________________________________________]];
G2L["19d"]["Position"] = UDim2.new(0, 0, 0.6291, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextLabel
G2L["19e"] = Instance.new("TextLabel", G2L["169"]);
G2L["19e"]["TextWrapped"] = true;
G2L["19e"]["BorderSizePixel"] = 0;
G2L["19e"]["TextSize"] = 14;
G2L["19e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["19e"]["TextScaled"] = true;
G2L["19e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["19e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["19e"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["19e"]["BackgroundTransparency"] = 1;
G2L["19e"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["19e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19e"]["Text"] = [[Enable]];
G2L["19e"]["Position"] = UDim2.new(0.03158, 0, 0.74238, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable
G2L["19f"] = Instance.new("Frame", G2L["169"]);
G2L["19f"]["BorderSizePixel"] = 0;
G2L["19f"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["19f"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["19f"]["Position"] = UDim2.new(0.75263, 0, 0.75019, 0);
G2L["19f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19f"]["Name"] = [[Enable]];
G2L["19f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.UICorner
G2L["1a0"] = Instance.new("UICorner", G2L["19f"]);
G2L["1a0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton
G2L["1a1"] = Instance.new("TextButton", G2L["19f"]);
G2L["1a1"]["BorderSizePixel"] = 0;
G2L["1a1"]["TextTransparency"] = 1;
G2L["1a1"]["TextSize"] = 14;
G2L["1a1"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a1"]["BackgroundTransparency"] = 1;
G2L["1a1"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1a1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.LocalScript
G2L["1a2"] = Instance.new("LocalScript", G2L["1a1"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.UICorner
G2L["1a3"] = Instance.new("UICorner", G2L["1a1"]);
G2L["1a3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.UIAspectRatioConstraint
G2L["1a4"] = Instance.new("UIAspectRatioConstraint", G2L["1a1"]);
G2L["1a4"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget
G2L["1a5"] = Instance.new("Frame", G2L["19f"]);
G2L["1a5"]["BorderSizePixel"] = 0;
G2L["1a5"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["1a5"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["1a5"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["1a5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a5"]["Name"] = [[Carget]];
G2L["1a5"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget.UICorner
G2L["1a6"] = Instance.new("UICorner", G2L["1a5"]);
G2L["1a6"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget.UIAspectRatioConstraint
G2L["1a7"] = Instance.new("UIAspectRatioConstraint", G2L["1a5"]);
G2L["1a7"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.UIAspectRatioConstraint
G2L["1a8"] = Instance.new("UIAspectRatioConstraint", G2L["19f"]);
G2L["1a8"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Enabled
G2L["1a9"] = Instance.new("BoolValue", G2L["19f"]);
G2L["1a9"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextLabel
G2L["1aa"] = Instance.new("TextLabel", G2L["169"]);
G2L["1aa"]["TextWrapped"] = true;
G2L["1aa"]["BorderSizePixel"] = 0;
G2L["1aa"]["TextSize"] = 14;
G2L["1aa"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1aa"]["TextScaled"] = true;
G2L["1aa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1aa"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1aa"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["1aa"]["BackgroundTransparency"] = 1;
G2L["1aa"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["1aa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1aa"]["Text"] = [[Team Check]];
G2L["1aa"]["Position"] = UDim2.new(0.04211, 0, 0.85566, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable
G2L["1ab"] = Instance.new("Frame", G2L["169"]);
G2L["1ab"]["BorderSizePixel"] = 0;
G2L["1ab"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["1ab"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["1ab"]["Position"] = UDim2.new(0.753, 0, 0.86347, 0);
G2L["1ab"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ab"]["Name"] = [[Enable]];
G2L["1ab"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.UICorner
G2L["1ac"] = Instance.new("UICorner", G2L["1ab"]);
G2L["1ac"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton
G2L["1ad"] = Instance.new("TextButton", G2L["1ab"]);
G2L["1ad"]["BorderSizePixel"] = 0;
G2L["1ad"]["TextTransparency"] = 1;
G2L["1ad"]["TextSize"] = 14;
G2L["1ad"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ad"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ad"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1ad"]["BackgroundTransparency"] = 1;
G2L["1ad"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1ad"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.LocalScript
G2L["1ae"] = Instance.new("LocalScript", G2L["1ad"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.UICorner
G2L["1af"] = Instance.new("UICorner", G2L["1ad"]);
G2L["1af"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.UIAspectRatioConstraint
G2L["1b0"] = Instance.new("UIAspectRatioConstraint", G2L["1ad"]);
G2L["1b0"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget
G2L["1b1"] = Instance.new("Frame", G2L["1ab"]);
G2L["1b1"]["BorderSizePixel"] = 0;
G2L["1b1"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["1b1"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["1b1"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["1b1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b1"]["Name"] = [[Carget]];
G2L["1b1"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget.UICorner
G2L["1b2"] = Instance.new("UICorner", G2L["1b1"]);
G2L["1b2"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Carget.UIAspectRatioConstraint
G2L["1b3"] = Instance.new("UIAspectRatioConstraint", G2L["1b1"]);
G2L["1b3"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.UIAspectRatioConstraint
G2L["1b4"] = Instance.new("UIAspectRatioConstraint", G2L["1ab"]);
G2L["1b4"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.Enabled
G2L["1b5"] = Instance.new("BoolValue", G2L["1ab"]);
G2L["1b5"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Teamcheck2
G2L["1b6"] = Instance.new("BoolValue", G2L["169"]);
G2L["1b6"]["Name"] = [[Teamcheck2]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other
G2L["1b7"] = Instance.new("Frame", G2L["135"]);
G2L["1b7"]["BorderSizePixel"] = 0;
G2L["1b7"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["1b7"]["Size"] = UDim2.new(0.492, 0, 0.275, 0);
G2L["1b7"]["Position"] = UDim2.new(-0.00259, 0, 0.2839, 0);
G2L["1b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b7"]["Name"] = [[Other]];
G2L["1b7"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextLabel
G2L["1b8"] = Instance.new("TextLabel", G2L["1b7"]);
G2L["1b8"]["TextWrapped"] = true;
G2L["1b8"]["BorderSizePixel"] = 0;
G2L["1b8"]["TextSize"] = 14;
G2L["1b8"]["TextScaled"] = true;
G2L["1b8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b8"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1b8"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["1b8"]["BackgroundTransparency"] = 1;
G2L["1b8"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["1b8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b8"]["Text"] = [[Other]];
G2L["1b8"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextLabel
G2L["1b9"] = Instance.new("TextLabel", G2L["1b7"]);
G2L["1b9"]["TextWrapped"] = true;
G2L["1b9"]["BorderSizePixel"] = 0;
G2L["1b9"]["TextSize"] = 14;
G2L["1b9"]["TextScaled"] = true;
G2L["1b9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1b9"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["1b9"]["BackgroundTransparency"] = 1;
G2L["1b9"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["1b9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b9"]["Text"] = [[________________________________________]];
G2L["1b9"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextLabel
G2L["1ba"] = Instance.new("TextLabel", G2L["1b7"]);
G2L["1ba"]["TextWrapped"] = true;
G2L["1ba"]["BorderSizePixel"] = 0;
G2L["1ba"]["TextSize"] = 14;
G2L["1ba"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1ba"]["TextScaled"] = true;
G2L["1ba"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ba"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1ba"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["1ba"]["BackgroundTransparency"] = 1;
G2L["1ba"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["1ba"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ba"]["Text"] = [[WorldColor]];
G2L["1ba"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable
G2L["1bb"] = Instance.new("Frame", G2L["1b7"]);
G2L["1bb"]["BorderSizePixel"] = 0;
G2L["1bb"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["1bb"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["1bb"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["1bb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1bb"]["Name"] = [[Enable]];
G2L["1bb"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UICorner
G2L["1bc"] = Instance.new("UICorner", G2L["1bb"]);
G2L["1bc"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton
G2L["1bd"] = Instance.new("TextButton", G2L["1bb"]);
G2L["1bd"]["BorderSizePixel"] = 0;
G2L["1bd"]["TextTransparency"] = 1;
G2L["1bd"]["TextSize"] = 14;
G2L["1bd"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1bd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1bd"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1bd"]["BackgroundTransparency"] = 1;
G2L["1bd"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1bd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
G2L["1be"] = Instance.new("LocalScript", G2L["1bd"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UICorner
G2L["1bf"] = Instance.new("UICorner", G2L["1bd"]);
G2L["1bf"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UIAspectRatioConstraint
G2L["1c0"] = Instance.new("UIAspectRatioConstraint", G2L["1bd"]);
G2L["1c0"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget
G2L["1c1"] = Instance.new("Frame", G2L["1bb"]);
G2L["1c1"]["BorderSizePixel"] = 0;
G2L["1c1"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["1c1"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["1c1"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["1c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c1"]["Name"] = [[Carget]];
G2L["1c1"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UICorner
G2L["1c2"] = Instance.new("UICorner", G2L["1c1"]);
G2L["1c2"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UIAspectRatioConstraint
G2L["1c3"] = Instance.new("UIAspectRatioConstraint", G2L["1c1"]);
G2L["1c3"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UIAspectRatioConstraint
G2L["1c4"] = Instance.new("UIAspectRatioConstraint", G2L["1bb"]);
G2L["1c4"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Enabled
G2L["1c5"] = Instance.new("BoolValue", G2L["1bb"]);
G2L["1c5"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Teamcheck
G2L["1c6"] = Instance.new("BoolValue", G2L["1b7"]);
G2L["1c6"]["Name"] = [[Teamcheck]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.ColorVal
G2L["1c7"] = Instance.new("Color3Value", G2L["1b7"]);
G2L["1c7"]["Name"] = [[ColorVal]];
G2L["1c7"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TransparencyVal
G2L["1c8"] = Instance.new("NumberValue", G2L["1b7"]);
G2L["1c8"]["Name"] = [[TransparencyVal]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.ThicknessVal
G2L["1c9"] = Instance.new("NumberValue", G2L["1b7"]);
G2L["1c9"]["Name"] = [[ThicknessVal]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextBox
G2L["1ca"] = Instance.new("TextBox", G2L["1b7"]);
G2L["1ca"]["BorderSizePixel"] = 0;
G2L["1ca"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["1ca"]["TextSize"] = 14;
G2L["1ca"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["1ca"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ca"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1ca"]["PlaceholderText"] = [[WorldColor - 255,255,255]];
G2L["1ca"]["Size"] = UDim2.new(1, 0, 0.15625, 0);
G2L["1ca"]["Position"] = UDim2.new(0, 0, 0.8863, 0);
G2L["1ca"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ca"]["Text"] = [[]];
G2L["1ca"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextBox.LocalScript
G2L["1cb"] = Instance.new("LocalScript", G2L["1ca"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable
G2L["1cc"] = Instance.new("Frame", G2L["1b7"]);
G2L["1cc"]["BorderSizePixel"] = 0;
G2L["1cc"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["1cc"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["1cc"]["Position"] = UDim2.new(0.753, 0, 0.30391, 0);
G2L["1cc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1cc"]["Name"] = [[Enable]];
G2L["1cc"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UICorner
G2L["1cd"] = Instance.new("UICorner", G2L["1cc"]);
G2L["1cd"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton
G2L["1ce"] = Instance.new("TextButton", G2L["1cc"]);
G2L["1ce"]["BorderSizePixel"] = 0;
G2L["1ce"]["TextTransparency"] = 1;
G2L["1ce"]["TextSize"] = 14;
G2L["1ce"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ce"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ce"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1ce"]["BackgroundTransparency"] = 1;
G2L["1ce"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1ce"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
G2L["1cf"] = Instance.new("LocalScript", G2L["1ce"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UICorner
G2L["1d0"] = Instance.new("UICorner", G2L["1ce"]);
G2L["1d0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UIAspectRatioConstraint
G2L["1d1"] = Instance.new("UIAspectRatioConstraint", G2L["1ce"]);
G2L["1d1"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget
G2L["1d2"] = Instance.new("Frame", G2L["1cc"]);
G2L["1d2"]["BorderSizePixel"] = 0;
G2L["1d2"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["1d2"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["1d2"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["1d2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d2"]["Name"] = [[Carget]];
G2L["1d2"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UICorner
G2L["1d3"] = Instance.new("UICorner", G2L["1d2"]);
G2L["1d3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UIAspectRatioConstraint
G2L["1d4"] = Instance.new("UIAspectRatioConstraint", G2L["1d2"]);
G2L["1d4"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UIAspectRatioConstraint
G2L["1d5"] = Instance.new("UIAspectRatioConstraint", G2L["1cc"]);
G2L["1d5"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Enabled
G2L["1d6"] = Instance.new("BoolValue", G2L["1cc"]);
G2L["1d6"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextLabel
G2L["1d7"] = Instance.new("TextLabel", G2L["1b7"]);
G2L["1d7"]["TextWrapped"] = true;
G2L["1d7"]["BorderSizePixel"] = 0;
G2L["1d7"]["TextSize"] = 14;
G2L["1d7"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1d7"]["TextScaled"] = true;
G2L["1d7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d7"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1d7"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["1d7"]["BackgroundTransparency"] = 1;
G2L["1d7"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["1d7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d7"]["Text"] = [[FpsLabel]];
G2L["1d7"]["Position"] = UDim2.new(0.032, 0, 0.30391, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextLabel
G2L["1d8"] = Instance.new("TextLabel", G2L["1b7"]);
G2L["1d8"]["TextWrapped"] = true;
G2L["1d8"]["BorderSizePixel"] = 0;
G2L["1d8"]["TextSize"] = 14;
G2L["1d8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1d8"]["TextScaled"] = true;
G2L["1d8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d8"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1d8"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["1d8"]["BackgroundTransparency"] = 1;
G2L["1d8"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["1d8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d8"]["Text"] = [[CrosshairV2]];
G2L["1d8"]["Position"] = UDim2.new(0.032, 0, 0.40391, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable
G2L["1d9"] = Instance.new("Frame", G2L["1b7"]);
G2L["1d9"]["BorderSizePixel"] = 0;
G2L["1d9"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["1d9"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["1d9"]["Position"] = UDim2.new(0.753, 0, 0.40391, 0);
G2L["1d9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d9"]["Name"] = [[Enable]];
G2L["1d9"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UICorner
G2L["1da"] = Instance.new("UICorner", G2L["1d9"]);
G2L["1da"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton
G2L["1db"] = Instance.new("TextButton", G2L["1d9"]);
G2L["1db"]["BorderSizePixel"] = 0;
G2L["1db"]["TextTransparency"] = 1;
G2L["1db"]["TextSize"] = 14;
G2L["1db"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1db"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1db"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1db"]["BackgroundTransparency"] = 1;
G2L["1db"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1db"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
G2L["1dc"] = Instance.new("LocalScript", G2L["1db"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UICorner
G2L["1dd"] = Instance.new("UICorner", G2L["1db"]);
G2L["1dd"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UIAspectRatioConstraint
G2L["1de"] = Instance.new("UIAspectRatioConstraint", G2L["1db"]);
G2L["1de"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget
G2L["1df"] = Instance.new("Frame", G2L["1d9"]);
G2L["1df"]["BorderSizePixel"] = 0;
G2L["1df"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["1df"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["1df"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["1df"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1df"]["Name"] = [[Carget]];
G2L["1df"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UICorner
G2L["1e0"] = Instance.new("UICorner", G2L["1df"]);
G2L["1e0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UIAspectRatioConstraint
G2L["1e1"] = Instance.new("UIAspectRatioConstraint", G2L["1df"]);
G2L["1e1"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UIAspectRatioConstraint
G2L["1e2"] = Instance.new("UIAspectRatioConstraint", G2L["1d9"]);
G2L["1e2"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Enabled
G2L["1e3"] = Instance.new("BoolValue", G2L["1d9"]);
G2L["1e3"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable
G2L["1e4"] = Instance.new("Frame", G2L["1b7"]);
G2L["1e4"]["BorderSizePixel"] = 0;
G2L["1e4"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["1e4"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["1e4"]["Position"] = UDim2.new(0.753, 0, 0.50938, 0);
G2L["1e4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e4"]["Name"] = [[Enable]];
G2L["1e4"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UICorner
G2L["1e5"] = Instance.new("UICorner", G2L["1e4"]);
G2L["1e5"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton
G2L["1e6"] = Instance.new("TextButton", G2L["1e4"]);
G2L["1e6"]["BorderSizePixel"] = 0;
G2L["1e6"]["TextTransparency"] = 1;
G2L["1e6"]["TextSize"] = 14;
G2L["1e6"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e6"]["BackgroundTransparency"] = 1;
G2L["1e6"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1e6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
G2L["1e7"] = Instance.new("LocalScript", G2L["1e6"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UICorner
G2L["1e8"] = Instance.new("UICorner", G2L["1e6"]);
G2L["1e8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UIAspectRatioConstraint
G2L["1e9"] = Instance.new("UIAspectRatioConstraint", G2L["1e6"]);
G2L["1e9"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget
G2L["1ea"] = Instance.new("Frame", G2L["1e4"]);
G2L["1ea"]["BorderSizePixel"] = 0;
G2L["1ea"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["1ea"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["1ea"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["1ea"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ea"]["Name"] = [[Carget]];
G2L["1ea"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UICorner
G2L["1eb"] = Instance.new("UICorner", G2L["1ea"]);
G2L["1eb"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UIAspectRatioConstraint
G2L["1ec"] = Instance.new("UIAspectRatioConstraint", G2L["1ea"]);
G2L["1ec"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UIAspectRatioConstraint
G2L["1ed"] = Instance.new("UIAspectRatioConstraint", G2L["1e4"]);
G2L["1ed"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Enabled
G2L["1ee"] = Instance.new("BoolValue", G2L["1e4"]);
G2L["1ee"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextLabel
G2L["1ef"] = Instance.new("TextLabel", G2L["1b7"]);
G2L["1ef"]["TextWrapped"] = true;
G2L["1ef"]["BorderSizePixel"] = 0;
G2L["1ef"]["TextSize"] = 14;
G2L["1ef"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1ef"]["TextScaled"] = true;
G2L["1ef"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ef"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1ef"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["1ef"]["BackgroundTransparency"] = 1;
G2L["1ef"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["1ef"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ef"]["Text"] = [[Arraylist]];
G2L["1ef"]["Position"] = UDim2.new(0.032, 0, 0.50938, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable
G2L["1f0"] = Instance.new("Frame", G2L["1b7"]);
G2L["1f0"]["BorderSizePixel"] = 0;
G2L["1f0"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["1f0"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["1f0"]["Position"] = UDim2.new(0.753, 0, 0.61094, 0);
G2L["1f0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f0"]["Name"] = [[Enable]];
G2L["1f0"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UICorner
G2L["1f1"] = Instance.new("UICorner", G2L["1f0"]);
G2L["1f1"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton
G2L["1f2"] = Instance.new("TextButton", G2L["1f0"]);
G2L["1f2"]["BorderSizePixel"] = 0;
G2L["1f2"]["TextTransparency"] = 1;
G2L["1f2"]["TextSize"] = 14;
G2L["1f2"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f2"]["BackgroundTransparency"] = 1;
G2L["1f2"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1f2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
G2L["1f3"] = Instance.new("LocalScript", G2L["1f2"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UICorner
G2L["1f4"] = Instance.new("UICorner", G2L["1f2"]);
G2L["1f4"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UIAspectRatioConstraint
G2L["1f5"] = Instance.new("UIAspectRatioConstraint", G2L["1f2"]);
G2L["1f5"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget
G2L["1f6"] = Instance.new("Frame", G2L["1f0"]);
G2L["1f6"]["BorderSizePixel"] = 0;
G2L["1f6"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["1f6"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["1f6"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["1f6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f6"]["Name"] = [[Carget]];
G2L["1f6"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UICorner
G2L["1f7"] = Instance.new("UICorner", G2L["1f6"]);
G2L["1f7"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UIAspectRatioConstraint
G2L["1f8"] = Instance.new("UIAspectRatioConstraint", G2L["1f6"]);
G2L["1f8"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UIAspectRatioConstraint
G2L["1f9"] = Instance.new("UIAspectRatioConstraint", G2L["1f0"]);
G2L["1f9"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Enabled
G2L["1fa"] = Instance.new("BoolValue", G2L["1f0"]);
G2L["1fa"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextLabel
G2L["1fb"] = Instance.new("TextLabel", G2L["1b7"]);
G2L["1fb"]["TextWrapped"] = true;
G2L["1fb"]["BorderSizePixel"] = 0;
G2L["1fb"]["TextSize"] = 14;
G2L["1fb"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1fb"]["TextScaled"] = true;
G2L["1fb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1fb"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1fb"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["1fb"]["BackgroundTransparency"] = 1;
G2L["1fb"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["1fb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1fb"]["Text"] = [[Watermark]];
G2L["1fb"]["Position"] = UDim2.new(0.032, 0, 0.61094, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextLabel
G2L["1fc"] = Instance.new("TextLabel", G2L["1b7"]);
G2L["1fc"]["TextWrapped"] = true;
G2L["1fc"]["BorderSizePixel"] = 0;
G2L["1fc"]["TextSize"] = 14;
G2L["1fc"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["1fc"]["TextScaled"] = true;
G2L["1fc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1fc"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1fc"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["1fc"]["BackgroundTransparency"] = 1;
G2L["1fc"]["Size"] = UDim2.new(0.68443, 0, 0.10248, 0);
G2L["1fc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1fc"]["Text"] = [[StreamerMode]];
G2L["1fc"]["Position"] = UDim2.new(0.032, 0, 0.7125, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable
G2L["1fd"] = Instance.new("Frame", G2L["1b7"]);
G2L["1fd"]["BorderSizePixel"] = 0;
G2L["1fd"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["1fd"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["1fd"]["Position"] = UDim2.new(0.753, 0, 0.7125, 0);
G2L["1fd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1fd"]["Name"] = [[Enable]];
G2L["1fd"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UICorner
G2L["1fe"] = Instance.new("UICorner", G2L["1fd"]);
G2L["1fe"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton
G2L["1ff"] = Instance.new("TextButton", G2L["1fd"]);
G2L["1ff"]["BorderSizePixel"] = 0;
G2L["1ff"]["TextTransparency"] = 1;
G2L["1ff"]["TextSize"] = 14;
G2L["1ff"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ff"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ff"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1ff"]["BackgroundTransparency"] = 1;
G2L["1ff"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1ff"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
G2L["200"] = Instance.new("LocalScript", G2L["1ff"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UICorner
G2L["201"] = Instance.new("UICorner", G2L["1ff"]);
G2L["201"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UIAspectRatioConstraint
G2L["202"] = Instance.new("UIAspectRatioConstraint", G2L["1ff"]);
G2L["202"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget
G2L["203"] = Instance.new("Frame", G2L["1fd"]);
G2L["203"]["BorderSizePixel"] = 0;
G2L["203"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["203"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["203"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["203"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["203"]["Name"] = [[Carget]];
G2L["203"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UICorner
G2L["204"] = Instance.new("UICorner", G2L["203"]);
G2L["204"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UIAspectRatioConstraint
G2L["205"] = Instance.new("UIAspectRatioConstraint", G2L["203"]);
G2L["205"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UIAspectRatioConstraint
G2L["206"] = Instance.new("UIAspectRatioConstraint", G2L["1fd"]);
G2L["206"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Enabled
G2L["207"] = Instance.new("BoolValue", G2L["1fd"]);
G2L["207"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextLabel
G2L["208"] = Instance.new("TextLabel", G2L["1b7"]);
G2L["208"]["TextWrapped"] = true;
G2L["208"]["BorderSizePixel"] = 0;
G2L["208"]["TextSize"] = 14;
G2L["208"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["208"]["TextScaled"] = true;
G2L["208"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["208"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["208"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["208"]["BackgroundTransparency"] = 1;
G2L["208"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["208"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["208"]["Text"] = [[FullBright]];
G2L["208"]["Position"] = UDim2.new(0.032, 0, 0.81203, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable
G2L["209"] = Instance.new("Frame", G2L["1b7"]);
G2L["209"]["BorderSizePixel"] = 0;
G2L["209"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["209"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["209"]["Position"] = UDim2.new(0.753, 0, 0.81203, 0);
G2L["209"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["209"]["Name"] = [[Enable]];
G2L["209"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UICorner
G2L["20a"] = Instance.new("UICorner", G2L["209"]);
G2L["20a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton
G2L["20b"] = Instance.new("TextButton", G2L["209"]);
G2L["20b"]["BorderSizePixel"] = 0;
G2L["20b"]["TextTransparency"] = 1;
G2L["20b"]["TextSize"] = 14;
G2L["20b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["20b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["20b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["20b"]["BackgroundTransparency"] = 1;
G2L["20b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["20b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
G2L["20c"] = Instance.new("LocalScript", G2L["20b"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UICorner
G2L["20d"] = Instance.new("UICorner", G2L["20b"]);
G2L["20d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.UIAspectRatioConstraint
G2L["20e"] = Instance.new("UIAspectRatioConstraint", G2L["20b"]);
G2L["20e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget
G2L["20f"] = Instance.new("Frame", G2L["209"]);
G2L["20f"]["BorderSizePixel"] = 0;
G2L["20f"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["20f"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["20f"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["20f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["20f"]["Name"] = [[Carget]];
G2L["20f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UICorner
G2L["210"] = Instance.new("UICorner", G2L["20f"]);
G2L["210"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Carget.UIAspectRatioConstraint
G2L["211"] = Instance.new("UIAspectRatioConstraint", G2L["20f"]);
G2L["211"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.UIAspectRatioConstraint
G2L["212"] = Instance.new("UIAspectRatioConstraint", G2L["209"]);
G2L["212"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.Enabled
G2L["213"] = Instance.new("BoolValue", G2L["209"]);
G2L["213"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags
G2L["214"] = Instance.new("Frame", G2L["135"]);
G2L["214"]["BorderSizePixel"] = 0;
G2L["214"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["214"]["Size"] = UDim2.new(0.492, 0, 0.275, 0);
G2L["214"]["Position"] = UDim2.new(0.50777, 0, 0.2839, 0);
G2L["214"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["214"]["Name"] = [[Nametags]];
G2L["214"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.TextLabel
G2L["215"] = Instance.new("TextLabel", G2L["214"]);
G2L["215"]["TextWrapped"] = true;
G2L["215"]["BorderSizePixel"] = 0;
G2L["215"]["TextSize"] = 14;
G2L["215"]["TextScaled"] = true;
G2L["215"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["215"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["215"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["215"]["BackgroundTransparency"] = 1;
G2L["215"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["215"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["215"]["Text"] = [[Nametags]];
G2L["215"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.TextLabel
G2L["216"] = Instance.new("TextLabel", G2L["214"]);
G2L["216"]["TextWrapped"] = true;
G2L["216"]["BorderSizePixel"] = 0;
G2L["216"]["TextSize"] = 14;
G2L["216"]["TextScaled"] = true;
G2L["216"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["216"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["216"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["216"]["BackgroundTransparency"] = 1;
G2L["216"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["216"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["216"]["Text"] = [[________________________________________]];
G2L["216"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.TextLabel
G2L["217"] = Instance.new("TextLabel", G2L["214"]);
G2L["217"]["TextWrapped"] = true;
G2L["217"]["BorderSizePixel"] = 0;
G2L["217"]["TextSize"] = 14;
G2L["217"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["217"]["TextScaled"] = true;
G2L["217"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["217"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["217"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["217"]["BackgroundTransparency"] = 1;
G2L["217"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["217"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["217"]["Text"] = [[Enable]];
G2L["217"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable
G2L["218"] = Instance.new("Frame", G2L["214"]);
G2L["218"]["BorderSizePixel"] = 0;
G2L["218"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["218"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["218"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["218"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["218"]["Name"] = [[Enable]];
G2L["218"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.UICorner
G2L["219"] = Instance.new("UICorner", G2L["218"]);
G2L["219"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton
G2L["21a"] = Instance.new("TextButton", G2L["218"]);
G2L["21a"]["BorderSizePixel"] = 0;
G2L["21a"]["TextTransparency"] = 1;
G2L["21a"]["TextSize"] = 14;
G2L["21a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["21a"]["BackgroundTransparency"] = 1;
G2L["21a"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["21a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton.LocalScript
G2L["21b"] = Instance.new("LocalScript", G2L["21a"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton.UICorner
G2L["21c"] = Instance.new("UICorner", G2L["21a"]);
G2L["21c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton.UIAspectRatioConstraint
G2L["21d"] = Instance.new("UIAspectRatioConstraint", G2L["21a"]);
G2L["21d"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.Carget
G2L["21e"] = Instance.new("Frame", G2L["218"]);
G2L["21e"]["BorderSizePixel"] = 0;
G2L["21e"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["21e"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["21e"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["21e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21e"]["Name"] = [[Carget]];
G2L["21e"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.Carget.UICorner
G2L["21f"] = Instance.new("UICorner", G2L["21e"]);
G2L["21f"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.Carget.UIAspectRatioConstraint
G2L["220"] = Instance.new("UIAspectRatioConstraint", G2L["21e"]);
G2L["220"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.UIAspectRatioConstraint
G2L["221"] = Instance.new("UIAspectRatioConstraint", G2L["218"]);
G2L["221"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.Enabled
G2L["222"] = Instance.new("BoolValue", G2L["218"]);
G2L["222"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Teamcheck
G2L["223"] = Instance.new("BoolValue", G2L["214"]);
G2L["223"]["Name"] = [[Teamcheck]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.TextLabel
G2L["224"] = Instance.new("TextLabel", G2L["214"]);
G2L["224"]["TextWrapped"] = true;
G2L["224"]["BorderSizePixel"] = 0;
G2L["224"]["TextSize"] = 14;
G2L["224"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["224"]["TextScaled"] = true;
G2L["224"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["224"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["224"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["224"]["BackgroundTransparency"] = 1;
G2L["224"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["224"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["224"]["Text"] = [[Team Check]];
G2L["224"]["Position"] = UDim2.new(0.04211, 0, 0.30469, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable
G2L["225"] = Instance.new("Frame", G2L["214"]);
G2L["225"]["BorderSizePixel"] = 0;
G2L["225"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["225"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["225"]["Position"] = UDim2.new(0.753, 0, 0.3125, 0);
G2L["225"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["225"]["Name"] = [[Enable]];
G2L["225"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.UICorner
G2L["226"] = Instance.new("UICorner", G2L["225"]);
G2L["226"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton
G2L["227"] = Instance.new("TextButton", G2L["225"]);
G2L["227"]["BorderSizePixel"] = 0;
G2L["227"]["TextTransparency"] = 1;
G2L["227"]["TextSize"] = 14;
G2L["227"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["227"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["227"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["227"]["BackgroundTransparency"] = 1;
G2L["227"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["227"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton.LocalScript
G2L["228"] = Instance.new("LocalScript", G2L["227"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton.UICorner
G2L["229"] = Instance.new("UICorner", G2L["227"]);
G2L["229"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton.UIAspectRatioConstraint
G2L["22a"] = Instance.new("UIAspectRatioConstraint", G2L["227"]);
G2L["22a"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.Carget
G2L["22b"] = Instance.new("Frame", G2L["225"]);
G2L["22b"]["BorderSizePixel"] = 0;
G2L["22b"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["22b"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["22b"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["22b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["22b"]["Name"] = [[Carget]];
G2L["22b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.Carget.UICorner
G2L["22c"] = Instance.new("UICorner", G2L["22b"]);
G2L["22c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.Carget.UIAspectRatioConstraint
G2L["22d"] = Instance.new("UIAspectRatioConstraint", G2L["22b"]);
G2L["22d"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.UIAspectRatioConstraint
G2L["22e"] = Instance.new("UIAspectRatioConstraint", G2L["225"]);
G2L["22e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.Enabled
G2L["22f"] = Instance.new("BoolValue", G2L["225"]);
G2L["22f"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.ColorVal
G2L["230"] = Instance.new("Color3Value", G2L["214"]);
G2L["230"]["Name"] = [[ColorVal]];
G2L["230"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency
G2L["231"] = Instance.new("Frame", G2L["214"]);
G2L["231"]["BorderSizePixel"] = 0;
G2L["231"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["231"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["231"]["Position"] = UDim2.new(0.02668, 0, 0.875, 0);
G2L["231"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["231"]["Name"] = [[Transparency]];
G2L["231"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency.UICorner
G2L["232"] = Instance.new("UICorner", G2L["231"]);
G2L["232"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency.Enabled
G2L["233"] = Instance.new("BoolValue", G2L["231"]);
G2L["233"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency.TextLabel
G2L["234"] = Instance.new("TextLabel", G2L["231"]);
G2L["234"]["TextWrapped"] = true;
G2L["234"]["Interactable"] = false;
G2L["234"]["BorderSizePixel"] = 0;
G2L["234"]["TextSize"] = 14;
G2L["234"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["234"]["TextScaled"] = true;
G2L["234"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["234"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["234"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["234"]["BackgroundTransparency"] = 1;
G2L["234"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["234"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["234"]["Text"] = [[Transparency: 0.00]];
G2L["234"]["Position"] = UDim2.new(0.02586, 0, 0.14083, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency.Carget
G2L["235"] = Instance.new("Frame", G2L["231"]);
G2L["235"]["ZIndex"] = -333;
G2L["235"]["BorderSizePixel"] = 0;
G2L["235"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["235"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["235"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["235"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency.Carget.UICorner
G2L["236"] = Instance.new("UICorner", G2L["235"]);
G2L["236"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency.Carget.UIAspectRatioConstraint
G2L["237"] = Instance.new("UIAspectRatioConstraint", G2L["235"]);
G2L["237"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency.Carget.TextButton
G2L["238"] = Instance.new("TextButton", G2L["235"]);
G2L["238"]["BorderSizePixel"] = 0;
G2L["238"]["TextTransparency"] = 1;
G2L["238"]["AutoLocalize"] = false;
G2L["238"]["TextSize"] = 14;
G2L["238"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["238"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["238"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["238"]["BackgroundTransparency"] = 1;
G2L["238"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["238"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency.Carget.TextButton.LocalScript
G2L["239"] = Instance.new("LocalScript", G2L["238"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.TransparencyVal
G2L["23a"] = Instance.new("NumberValue", G2L["214"]);
G2L["23a"]["Name"] = [[TransparencyVal]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness
G2L["23b"] = Instance.new("Frame", G2L["214"]);
G2L["23b"]["Visible"] = false;
G2L["23b"]["BorderSizePixel"] = 0;
G2L["23b"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["23b"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["23b"]["Position"] = UDim2.new(0.02668, 0, 0.76172, 0);
G2L["23b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23b"]["Name"] = [[Thickness]];
G2L["23b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness.UICorner
G2L["23c"] = Instance.new("UICorner", G2L["23b"]);
G2L["23c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness.Enabled
G2L["23d"] = Instance.new("BoolValue", G2L["23b"]);
G2L["23d"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness.TextLabel
G2L["23e"] = Instance.new("TextLabel", G2L["23b"]);
G2L["23e"]["TextWrapped"] = true;
G2L["23e"]["Interactable"] = false;
G2L["23e"]["BorderSizePixel"] = 0;
G2L["23e"]["TextSize"] = 14;
G2L["23e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["23e"]["TextScaled"] = true;
G2L["23e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["23e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["23e"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["23e"]["BackgroundTransparency"] = 1;
G2L["23e"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["23e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23e"]["Text"] = [[Thickness: 2.00]];
G2L["23e"]["Position"] = UDim2.new(0.02586, 0, 0.14083, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness.Carget
G2L["23f"] = Instance.new("Frame", G2L["23b"]);
G2L["23f"]["ZIndex"] = -333;
G2L["23f"]["BorderSizePixel"] = 0;
G2L["23f"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["23f"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["23f"]["Position"] = UDim2.new(0.18, 0, 0, 0);
G2L["23f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23f"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness.Carget.UICorner
G2L["240"] = Instance.new("UICorner", G2L["23f"]);
G2L["240"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness.Carget.TextButton
G2L["241"] = Instance.new("TextButton", G2L["23f"]);
G2L["241"]["BorderSizePixel"] = 0;
G2L["241"]["TextTransparency"] = 1;
G2L["241"]["TextSize"] = 14;
G2L["241"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["241"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["241"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["241"]["BackgroundTransparency"] = 1;
G2L["241"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["241"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness.Carget.TextButton.LocalScript
G2L["242"] = Instance.new("LocalScript", G2L["241"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness.Carget.UIAspectRatioConstraint
G2L["243"] = Instance.new("UIAspectRatioConstraint", G2L["23f"]);
G2L["243"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.ThicknessVal
G2L["244"] = Instance.new("NumberValue", G2L["214"]);
G2L["244"]["Name"] = [[ThicknessVal]];
G2L["244"]["Value"] = 2;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.TextBox
G2L["245"] = Instance.new("TextBox", G2L["214"]);
G2L["245"]["BorderSizePixel"] = 0;
G2L["245"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["245"]["TextSize"] = 14;
G2L["245"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["245"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["245"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["245"]["PlaceholderText"] = [[Color - 255,255,255]];
G2L["245"]["Size"] = UDim2.new(0.94737, 0, 0.15625, 0);
G2L["245"]["Position"] = UDim2.new(0, 0, 0.41822, 0);
G2L["245"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["245"]["Text"] = [[]];
G2L["245"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.TextBox.LocalScript
G2L["246"] = Instance.new("LocalScript", G2L["245"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer
G2L["247"] = Instance.new("Frame", G2L["135"]);
G2L["247"]["BorderSizePixel"] = 0;
G2L["247"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["247"]["Size"] = UDim2.new(0.492, 0, 0.275, 0);
G2L["247"]["Position"] = UDim2.new(0.508, 0, 0.5622, 0);
G2L["247"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["247"]["Name"] = [[Optimizer]];
G2L["247"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextLabel
G2L["248"] = Instance.new("TextLabel", G2L["247"]);
G2L["248"]["TextWrapped"] = true;
G2L["248"]["BorderSizePixel"] = 0;
G2L["248"]["TextSize"] = 14;
G2L["248"]["TextScaled"] = true;
G2L["248"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["248"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["248"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["248"]["BackgroundTransparency"] = 1;
G2L["248"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["248"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["248"]["Text"] = [[Lighting]];
G2L["248"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextLabel
G2L["249"] = Instance.new("TextLabel", G2L["247"]);
G2L["249"]["TextWrapped"] = true;
G2L["249"]["BorderSizePixel"] = 0;
G2L["249"]["TextSize"] = 14;
G2L["249"]["TextScaled"] = true;
G2L["249"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["249"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["249"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["249"]["BackgroundTransparency"] = 1;
G2L["249"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["249"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["249"]["Text"] = [[________________________________________]];
G2L["249"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextLabel
G2L["24a"] = Instance.new("TextLabel", G2L["247"]);
G2L["24a"]["TextWrapped"] = true;
G2L["24a"]["BorderSizePixel"] = 0;
G2L["24a"]["TextSize"] = 14;
G2L["24a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["24a"]["TextScaled"] = true;
G2L["24a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["24a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["24a"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["24a"]["BackgroundTransparency"] = 1;
G2L["24a"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["24a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24a"]["Text"] = [[Shadows]];
G2L["24a"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable
G2L["24b"] = Instance.new("Frame", G2L["247"]);
G2L["24b"]["BorderSizePixel"] = 0;
G2L["24b"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["24b"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["24b"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["24b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24b"]["Name"] = [[Enable]];
G2L["24b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UICorner
G2L["24c"] = Instance.new("UICorner", G2L["24b"]);
G2L["24c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton
G2L["24d"] = Instance.new("TextButton", G2L["24b"]);
G2L["24d"]["BorderSizePixel"] = 0;
G2L["24d"]["TextTransparency"] = 1;
G2L["24d"]["TextSize"] = 14;
G2L["24d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["24d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["24d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["24d"]["BackgroundTransparency"] = 1;
G2L["24d"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["24d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
G2L["24e"] = Instance.new("LocalScript", G2L["24d"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UICorner
G2L["24f"] = Instance.new("UICorner", G2L["24d"]);
G2L["24f"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UIAspectRatioConstraint
G2L["250"] = Instance.new("UIAspectRatioConstraint", G2L["24d"]);
G2L["250"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget
G2L["251"] = Instance.new("Frame", G2L["24b"]);
G2L["251"]["BorderSizePixel"] = 0;
G2L["251"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["251"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["251"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["251"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["251"]["Name"] = [[Carget]];
G2L["251"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UICorner
G2L["252"] = Instance.new("UICorner", G2L["251"]);
G2L["252"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UIAspectRatioConstraint
G2L["253"] = Instance.new("UIAspectRatioConstraint", G2L["251"]);
G2L["253"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UIAspectRatioConstraint
G2L["254"] = Instance.new("UIAspectRatioConstraint", G2L["24b"]);
G2L["254"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Enabled
G2L["255"] = Instance.new("BoolValue", G2L["24b"]);
G2L["255"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.ColorVal
G2L["256"] = Instance.new("Color3Value", G2L["247"]);
G2L["256"]["Name"] = [[ColorVal]];
G2L["256"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextLabel
G2L["257"] = Instance.new("TextLabel", G2L["247"]);
G2L["257"]["TextWrapped"] = true;
G2L["257"]["BorderSizePixel"] = 0;
G2L["257"]["TextSize"] = 14;
G2L["257"]["TextScaled"] = true;
G2L["257"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["257"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["257"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["257"]["BackgroundTransparency"] = 1;
G2L["257"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["257"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["257"]["Text"] = [[________________________________________]];
G2L["257"]["Position"] = UDim2.new(-0.02558, 0, 0.68596, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextLabel
G2L["258"] = Instance.new("TextLabel", G2L["247"]);
G2L["258"]["TextWrapped"] = true;
G2L["258"]["BorderSizePixel"] = 0;
G2L["258"]["TextSize"] = 14;
G2L["258"]["TextScaled"] = true;
G2L["258"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["258"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["258"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["258"]["BackgroundTransparency"] = 1;
G2L["258"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["258"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["258"]["Text"] = [[Trails]];
G2L["258"]["Position"] = UDim2.new(-0.02558, 0, 0.63518, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextLabel
G2L["259"] = Instance.new("TextLabel", G2L["247"]);
G2L["259"]["TextWrapped"] = true;
G2L["259"]["BorderSizePixel"] = 0;
G2L["259"]["TextSize"] = 14;
G2L["259"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["259"]["TextScaled"] = true;
G2L["259"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["259"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["259"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["259"]["BackgroundTransparency"] = 1;
G2L["259"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["259"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["259"]["Text"] = [[Enable]];
G2L["259"]["Position"] = UDim2.new(0.006, 0, 0.8028, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable
G2L["25a"] = Instance.new("Frame", G2L["247"]);
G2L["25a"]["BorderSizePixel"] = 0;
G2L["25a"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["25a"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["25a"]["Position"] = UDim2.new(0.72705, 0, 0.81061, 0);
G2L["25a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["25a"]["Name"] = [[Enable]];
G2L["25a"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UICorner
G2L["25b"] = Instance.new("UICorner", G2L["25a"]);
G2L["25b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton
G2L["25c"] = Instance.new("TextButton", G2L["25a"]);
G2L["25c"]["BorderSizePixel"] = 0;
G2L["25c"]["TextTransparency"] = 1;
G2L["25c"]["TextSize"] = 14;
G2L["25c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["25c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["25c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["25c"]["BackgroundTransparency"] = 1;
G2L["25c"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["25c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
G2L["25d"] = Instance.new("LocalScript", G2L["25c"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UICorner
G2L["25e"] = Instance.new("UICorner", G2L["25c"]);
G2L["25e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UIAspectRatioConstraint
G2L["25f"] = Instance.new("UIAspectRatioConstraint", G2L["25c"]);
G2L["25f"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget
G2L["260"] = Instance.new("Frame", G2L["25a"]);
G2L["260"]["BorderSizePixel"] = 0;
G2L["260"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["260"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["260"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["260"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["260"]["Name"] = [[Carget]];
G2L["260"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UICorner
G2L["261"] = Instance.new("UICorner", G2L["260"]);
G2L["261"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UIAspectRatioConstraint
G2L["262"] = Instance.new("UIAspectRatioConstraint", G2L["260"]);
G2L["262"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UIAspectRatioConstraint
G2L["263"] = Instance.new("UIAspectRatioConstraint", G2L["25a"]);
G2L["263"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Enabled
G2L["264"] = Instance.new("BoolValue", G2L["25a"]);
G2L["264"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextBox
G2L["265"] = Instance.new("TextBox", G2L["247"]);
G2L["265"]["BorderSizePixel"] = 0;
G2L["265"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["265"]["TextSize"] = 14;
G2L["265"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["265"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["265"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["265"]["PlaceholderText"] = [[Color - 255,255,255]];
G2L["265"]["Size"] = UDim2.new(1, 0, 0.15625, 0);
G2L["265"]["Position"] = UDim2.new(-0.02558, 0, 0.92896, 0);
G2L["265"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["265"]["Text"] = [[]];
G2L["265"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextBox.LocalScript
G2L["266"] = Instance.new("LocalScript", G2L["265"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.ColorVal2
G2L["267"] = Instance.new("Color3Value", G2L["247"]);
G2L["267"]["Name"] = [[ColorVal2]];
G2L["267"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextLabel
G2L["268"] = Instance.new("TextLabel", G2L["247"]);
G2L["268"]["TextWrapped"] = true;
G2L["268"]["BorderSizePixel"] = 0;
G2L["268"]["TextSize"] = 14;
G2L["268"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["268"]["TextScaled"] = true;
G2L["268"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["268"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["268"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["268"]["BackgroundTransparency"] = 1;
G2L["268"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["268"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["268"]["Text"] = [[NoFog]];
G2L["268"]["Position"] = UDim2.new(0.03158, 0, 0.28738, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable
G2L["269"] = Instance.new("Frame", G2L["247"]);
G2L["269"]["BorderSizePixel"] = 0;
G2L["269"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["269"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["269"]["Position"] = UDim2.new(0.75263, 0, 0.29519, 0);
G2L["269"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["269"]["Name"] = [[Enable]];
G2L["269"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UICorner
G2L["26a"] = Instance.new("UICorner", G2L["269"]);
G2L["26a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton
G2L["26b"] = Instance.new("TextButton", G2L["269"]);
G2L["26b"]["BorderSizePixel"] = 0;
G2L["26b"]["TextTransparency"] = 1;
G2L["26b"]["TextSize"] = 14;
G2L["26b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["26b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["26b"]["BackgroundTransparency"] = 1;
G2L["26b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["26b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
G2L["26c"] = Instance.new("LocalScript", G2L["26b"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UICorner
G2L["26d"] = Instance.new("UICorner", G2L["26b"]);
G2L["26d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UIAspectRatioConstraint
G2L["26e"] = Instance.new("UIAspectRatioConstraint", G2L["26b"]);
G2L["26e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget
G2L["26f"] = Instance.new("Frame", G2L["269"]);
G2L["26f"]["BorderSizePixel"] = 0;
G2L["26f"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["26f"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["26f"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["26f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26f"]["Name"] = [[Carget]];
G2L["26f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UICorner
G2L["270"] = Instance.new("UICorner", G2L["26f"]);
G2L["270"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UIAspectRatioConstraint
G2L["271"] = Instance.new("UIAspectRatioConstraint", G2L["26f"]);
G2L["271"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UIAspectRatioConstraint
G2L["272"] = Instance.new("UIAspectRatioConstraint", G2L["269"]);
G2L["272"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Enabled
G2L["273"] = Instance.new("BoolValue", G2L["269"]);
G2L["273"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextLabel
G2L["274"] = Instance.new("TextLabel", G2L["247"]);
G2L["274"]["TextWrapped"] = true;
G2L["274"]["BorderSizePixel"] = 0;
G2L["274"]["TextSize"] = 14;
G2L["274"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["274"]["TextScaled"] = true;
G2L["274"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["274"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["274"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["274"]["BackgroundTransparency"] = 1;
G2L["274"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["274"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["274"]["Text"] = [[NoAtmosphere]];
G2L["274"]["Position"] = UDim2.new(0.03158, 0, 0.38336, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable
G2L["275"] = Instance.new("Frame", G2L["247"]);
G2L["275"]["BorderSizePixel"] = 0;
G2L["275"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["275"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["275"]["Position"] = UDim2.new(0.75263, 0, 0.39117, 0);
G2L["275"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["275"]["Name"] = [[Enable]];
G2L["275"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UICorner
G2L["276"] = Instance.new("UICorner", G2L["275"]);
G2L["276"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton
G2L["277"] = Instance.new("TextButton", G2L["275"]);
G2L["277"]["BorderSizePixel"] = 0;
G2L["277"]["TextTransparency"] = 1;
G2L["277"]["TextSize"] = 14;
G2L["277"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["277"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["277"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["277"]["BackgroundTransparency"] = 1;
G2L["277"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["277"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
G2L["278"] = Instance.new("LocalScript", G2L["277"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UICorner
G2L["279"] = Instance.new("UICorner", G2L["277"]);
G2L["279"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UIAspectRatioConstraint
G2L["27a"] = Instance.new("UIAspectRatioConstraint", G2L["277"]);
G2L["27a"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget
G2L["27b"] = Instance.new("Frame", G2L["275"]);
G2L["27b"]["BorderSizePixel"] = 0;
G2L["27b"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["27b"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["27b"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["27b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27b"]["Name"] = [[Carget]];
G2L["27b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UICorner
G2L["27c"] = Instance.new("UICorner", G2L["27b"]);
G2L["27c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UIAspectRatioConstraint
G2L["27d"] = Instance.new("UIAspectRatioConstraint", G2L["27b"]);
G2L["27d"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UIAspectRatioConstraint
G2L["27e"] = Instance.new("UIAspectRatioConstraint", G2L["275"]);
G2L["27e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Enabled
G2L["27f"] = Instance.new("BoolValue", G2L["275"]);
G2L["27f"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextLabel
G2L["280"] = Instance.new("TextLabel", G2L["247"]);
G2L["280"]["TextWrapped"] = true;
G2L["280"]["BorderSizePixel"] = 0;
G2L["280"]["TextSize"] = 14;
G2L["280"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["280"]["TextScaled"] = true;
G2L["280"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["280"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["280"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["280"]["BackgroundTransparency"] = 1;
G2L["280"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["280"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["280"]["Text"] = [[WhiteFog]];
G2L["280"]["Position"] = UDim2.new(0.03158, 0, 0.49, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable
G2L["281"] = Instance.new("Frame", G2L["247"]);
G2L["281"]["BorderSizePixel"] = 0;
G2L["281"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["281"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["281"]["Position"] = UDim2.new(0.75263, 0, 0.49781, 0);
G2L["281"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["281"]["Name"] = [[Enable]];
G2L["281"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UICorner
G2L["282"] = Instance.new("UICorner", G2L["281"]);
G2L["282"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton
G2L["283"] = Instance.new("TextButton", G2L["281"]);
G2L["283"]["BorderSizePixel"] = 0;
G2L["283"]["TextTransparency"] = 1;
G2L["283"]["TextSize"] = 14;
G2L["283"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["283"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["283"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["283"]["BackgroundTransparency"] = 1;
G2L["283"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["283"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
G2L["284"] = Instance.new("LocalScript", G2L["283"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UICorner
G2L["285"] = Instance.new("UICorner", G2L["283"]);
G2L["285"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.UIAspectRatioConstraint
G2L["286"] = Instance.new("UIAspectRatioConstraint", G2L["283"]);
G2L["286"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget
G2L["287"] = Instance.new("Frame", G2L["281"]);
G2L["287"]["BorderSizePixel"] = 0;
G2L["287"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["287"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["287"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["287"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["287"]["Name"] = [[Carget]];
G2L["287"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UICorner
G2L["288"] = Instance.new("UICorner", G2L["287"]);
G2L["288"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Carget.UIAspectRatioConstraint
G2L["289"] = Instance.new("UIAspectRatioConstraint", G2L["287"]);
G2L["289"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.UIAspectRatioConstraint
G2L["28a"] = Instance.new("UIAspectRatioConstraint", G2L["281"]);
G2L["28a"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.Enabled
G2L["28b"] = Instance.new("BoolValue", G2L["281"]);
G2L["28b"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov
G2L["28c"] = Instance.new("Frame", G2L["135"]);
G2L["28c"]["BorderSizePixel"] = 0;
G2L["28c"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["28c"]["Size"] = UDim2.new(0.492, 0, 0.275, 0);
G2L["28c"]["Position"] = UDim2.new(-0.00518, 0, 0.5622, 0);
G2L["28c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28c"]["Name"] = [[Fov]];
G2L["28c"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["28d"] = Instance.new("TextLabel", G2L["28c"]);
G2L["28d"]["TextWrapped"] = true;
G2L["28d"]["BorderSizePixel"] = 0;
G2L["28d"]["TextSize"] = 14;
G2L["28d"]["TextScaled"] = true;
G2L["28d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["28d"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["28d"]["BackgroundTransparency"] = 1;
G2L["28d"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["28d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28d"]["Text"] = [[FovChanger]];
G2L["28d"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["28e"] = Instance.new("TextLabel", G2L["28c"]);
G2L["28e"]["TextWrapped"] = true;
G2L["28e"]["BorderSizePixel"] = 0;
G2L["28e"]["TextSize"] = 14;
G2L["28e"]["TextScaled"] = true;
G2L["28e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["28e"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["28e"]["BackgroundTransparency"] = 1;
G2L["28e"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["28e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28e"]["Text"] = [[________________________________________]];
G2L["28e"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["28f"] = Instance.new("TextLabel", G2L["28c"]);
G2L["28f"]["TextWrapped"] = true;
G2L["28f"]["BorderSizePixel"] = 0;
G2L["28f"]["TextSize"] = 14;
G2L["28f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["28f"]["TextScaled"] = true;
G2L["28f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["28f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["28f"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["28f"]["BackgroundTransparency"] = 1;
G2L["28f"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["28f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["28f"]["Text"] = [[Enable]];
G2L["28f"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable
G2L["290"] = Instance.new("Frame", G2L["28c"]);
G2L["290"]["BorderSizePixel"] = 0;
G2L["290"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["290"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["290"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["290"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["290"]["Name"] = [[Enable]];
G2L["290"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.UICorner
G2L["291"] = Instance.new("UICorner", G2L["290"]);
G2L["291"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton
G2L["292"] = Instance.new("TextButton", G2L["290"]);
G2L["292"]["BorderSizePixel"] = 0;
G2L["292"]["TextTransparency"] = 1;
G2L["292"]["TextSize"] = 14;
G2L["292"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["292"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["292"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["292"]["BackgroundTransparency"] = 1;
G2L["292"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["292"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.LocalScript
G2L["293"] = Instance.new("LocalScript", G2L["292"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.UICorner
G2L["294"] = Instance.new("UICorner", G2L["292"]);
G2L["294"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.UIAspectRatioConstraint
G2L["295"] = Instance.new("UIAspectRatioConstraint", G2L["292"]);
G2L["295"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget
G2L["296"] = Instance.new("Frame", G2L["290"]);
G2L["296"]["BorderSizePixel"] = 0;
G2L["296"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["296"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["296"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["296"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["296"]["Name"] = [[Carget]];
G2L["296"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget.UICorner
G2L["297"] = Instance.new("UICorner", G2L["296"]);
G2L["297"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget.UIAspectRatioConstraint
G2L["298"] = Instance.new("UIAspectRatioConstraint", G2L["296"]);
G2L["298"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.UIAspectRatioConstraint
G2L["299"] = Instance.new("UIAspectRatioConstraint", G2L["290"]);
G2L["299"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Enabled
G2L["29a"] = Instance.new("BoolValue", G2L["290"]);
G2L["29a"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Teamcheck
G2L["29b"] = Instance.new("BoolValue", G2L["28c"]);
G2L["29b"]["Name"] = [[Teamcheck]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["29c"] = Instance.new("TextLabel", G2L["28c"]);
G2L["29c"]["TextWrapped"] = true;
G2L["29c"]["BorderSizePixel"] = 0;
G2L["29c"]["TextSize"] = 14;
G2L["29c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["29c"]["TextScaled"] = true;
G2L["29c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["29c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["29c"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["29c"]["BackgroundTransparency"] = 1;
G2L["29c"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["29c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29c"]["Text"] = [[Bypass]];
G2L["29c"]["Position"] = UDim2.new(0.04211, 0, 0.30469, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable
G2L["29d"] = Instance.new("Frame", G2L["28c"]);
G2L["29d"]["BorderSizePixel"] = 0;
G2L["29d"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["29d"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["29d"]["Position"] = UDim2.new(0.753, 0, 0.3125, 0);
G2L["29d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29d"]["Name"] = [[Enable]];
G2L["29d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.UICorner
G2L["29e"] = Instance.new("UICorner", G2L["29d"]);
G2L["29e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton
G2L["29f"] = Instance.new("TextButton", G2L["29d"]);
G2L["29f"]["BorderSizePixel"] = 0;
G2L["29f"]["TextTransparency"] = 1;
G2L["29f"]["TextSize"] = 14;
G2L["29f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["29f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["29f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["29f"]["BackgroundTransparency"] = 1;
G2L["29f"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["29f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.LocalScript
G2L["2a0"] = Instance.new("LocalScript", G2L["29f"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.UICorner
G2L["2a1"] = Instance.new("UICorner", G2L["29f"]);
G2L["2a1"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.UIAspectRatioConstraint
G2L["2a2"] = Instance.new("UIAspectRatioConstraint", G2L["29f"]);
G2L["2a2"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget
G2L["2a3"] = Instance.new("Frame", G2L["29d"]);
G2L["2a3"]["BorderSizePixel"] = 0;
G2L["2a3"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["2a3"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["2a3"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["2a3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a3"]["Name"] = [[Carget]];
G2L["2a3"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget.UICorner
G2L["2a4"] = Instance.new("UICorner", G2L["2a3"]);
G2L["2a4"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget.UIAspectRatioConstraint
G2L["2a5"] = Instance.new("UIAspectRatioConstraint", G2L["2a3"]);
G2L["2a5"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.UIAspectRatioConstraint
G2L["2a6"] = Instance.new("UIAspectRatioConstraint", G2L["29d"]);
G2L["2a6"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Enabled
G2L["2a7"] = Instance.new("BoolValue", G2L["29d"]);
G2L["2a7"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.ColorVal
G2L["2a8"] = Instance.new("Color3Value", G2L["28c"]);
G2L["2a8"]["Name"] = [[ColorVal]];
G2L["2a8"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency
G2L["2a9"] = Instance.new("Frame", G2L["28c"]);
G2L["2a9"]["BorderSizePixel"] = 0;
G2L["2a9"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["2a9"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["2a9"]["Position"] = UDim2.new(0.02172, 0, 0.41646, 0);
G2L["2a9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a9"]["Name"] = [[Transparency]];
G2L["2a9"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.UICorner
G2L["2aa"] = Instance.new("UICorner", G2L["2a9"]);
G2L["2aa"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Enabled
G2L["2ab"] = Instance.new("BoolValue", G2L["2a9"]);
G2L["2ab"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.TextLabel
G2L["2ac"] = Instance.new("TextLabel", G2L["2a9"]);
G2L["2ac"]["TextWrapped"] = true;
G2L["2ac"]["Interactable"] = false;
G2L["2ac"]["BorderSizePixel"] = 0;
G2L["2ac"]["TextSize"] = 14;
G2L["2ac"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["2ac"]["TextScaled"] = true;
G2L["2ac"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2ac"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2ac"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["2ac"]["BackgroundTransparency"] = 1;
G2L["2ac"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["2ac"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2ac"]["Text"] = [[Fov: 70]];
G2L["2ac"]["Position"] = UDim2.new(0.03126, 0, 0.01268, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget
G2L["2ad"] = Instance.new("Frame", G2L["2a9"]);
G2L["2ad"]["ZIndex"] = -333;
G2L["2ad"]["BorderSizePixel"] = 0;
G2L["2ad"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["2ad"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["2ad"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2ad"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.UICorner
G2L["2ae"] = Instance.new("UICorner", G2L["2ad"]);
G2L["2ae"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.TextButton
G2L["2af"] = Instance.new("TextButton", G2L["2ad"]);
G2L["2af"]["BorderSizePixel"] = 0;
G2L["2af"]["TextTransparency"] = 1;
G2L["2af"]["TextSize"] = 14;
G2L["2af"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2af"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2af"]["BackgroundTransparency"] = 1;
G2L["2af"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["2af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.TextButton.LocalScript
G2L["2b0"] = Instance.new("LocalScript", G2L["2af"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.UIAspectRatioConstraint
G2L["2b1"] = Instance.new("UIAspectRatioConstraint", G2L["2ad"]);
G2L["2b1"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TransparencyVal
G2L["2b2"] = Instance.new("NumberValue", G2L["28c"]);
G2L["2b2"]["Name"] = [[TransparencyVal]];
G2L["2b2"]["Value"] = 70;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.ThicknessVal
G2L["2b3"] = Instance.new("NumberValue", G2L["28c"]);
G2L["2b3"]["Name"] = [[ThicknessVal]];
G2L["2b3"]["Value"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextBox
G2L["2b4"] = Instance.new("TextBox", G2L["28c"]);
G2L["2b4"]["BorderSizePixel"] = 0;
G2L["2b4"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["2b4"]["TextSize"] = 14;
G2L["2b4"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["2b4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2b4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2b4"]["PlaceholderText"] = [[Color - 255,255,255]];
G2L["2b4"]["Size"] = UDim2.new(1, 0, 0.15625, 0);
G2L["2b4"]["Position"] = UDim2.new(0, 0, 0.82232, 0);
G2L["2b4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b4"]["Text"] = [[]];
G2L["2b4"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextBox.LocalScript
G2L["2b5"] = Instance.new("LocalScript", G2L["2b4"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["2b6"] = Instance.new("TextLabel", G2L["28c"]);
G2L["2b6"]["TextWrapped"] = true;
G2L["2b6"]["BorderSizePixel"] = 0;
G2L["2b6"]["TextSize"] = 14;
G2L["2b6"]["TextScaled"] = true;
G2L["2b6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2b6"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2b6"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["2b6"]["BackgroundTransparency"] = 1;
G2L["2b6"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["2b6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b6"]["Text"] = [[________________________________________]];
G2L["2b6"]["Position"] = UDim2.new(0, 0, 0.56155, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["2b7"] = Instance.new("TextLabel", G2L["28c"]);
G2L["2b7"]["TextWrapped"] = true;
G2L["2b7"]["BorderSizePixel"] = 0;
G2L["2b7"]["TextSize"] = 14;
G2L["2b7"]["TextScaled"] = true;
G2L["2b7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2b7"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2b7"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["2b7"]["BackgroundTransparency"] = 1;
G2L["2b7"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["2b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b7"]["Text"] = [[JumpCircle]];
G2L["2b7"]["Position"] = UDim2.new(0, 0, 0.51077, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["2b8"] = Instance.new("TextLabel", G2L["28c"]);
G2L["2b8"]["TextWrapped"] = true;
G2L["2b8"]["BorderSizePixel"] = 0;
G2L["2b8"]["TextSize"] = 14;
G2L["2b8"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["2b8"]["TextScaled"] = true;
G2L["2b8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2b8"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2b8"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["2b8"]["BackgroundTransparency"] = 1;
G2L["2b8"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["2b8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b8"]["Text"] = [[Enable]];
G2L["2b8"]["Position"] = UDim2.new(0.03158, 0, 0.67839, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable
G2L["2b9"] = Instance.new("Frame", G2L["28c"]);
G2L["2b9"]["BorderSizePixel"] = 0;
G2L["2b9"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["2b9"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["2b9"]["Position"] = UDim2.new(0.75263, 0, 0.6862, 0);
G2L["2b9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2b9"]["Name"] = [[Enable]];
G2L["2b9"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.UICorner
G2L["2ba"] = Instance.new("UICorner", G2L["2b9"]);
G2L["2ba"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton
G2L["2bb"] = Instance.new("TextButton", G2L["2b9"]);
G2L["2bb"]["BorderSizePixel"] = 0;
G2L["2bb"]["TextTransparency"] = 1;
G2L["2bb"]["TextSize"] = 14;
G2L["2bb"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2bb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2bb"]["BackgroundTransparency"] = 1;
G2L["2bb"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["2bb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.LocalScript
G2L["2bc"] = Instance.new("LocalScript", G2L["2bb"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.UICorner
G2L["2bd"] = Instance.new("UICorner", G2L["2bb"]);
G2L["2bd"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.UIAspectRatioConstraint
G2L["2be"] = Instance.new("UIAspectRatioConstraint", G2L["2bb"]);
G2L["2be"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget
G2L["2bf"] = Instance.new("Frame", G2L["2b9"]);
G2L["2bf"]["BorderSizePixel"] = 0;
G2L["2bf"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["2bf"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["2bf"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["2bf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2bf"]["Name"] = [[Carget]];
G2L["2bf"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget.UICorner
G2L["2c0"] = Instance.new("UICorner", G2L["2bf"]);
G2L["2c0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget.UIAspectRatioConstraint
G2L["2c1"] = Instance.new("UIAspectRatioConstraint", G2L["2bf"]);
G2L["2c1"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.UIAspectRatioConstraint
G2L["2c2"] = Instance.new("UIAspectRatioConstraint", G2L["2b9"]);
G2L["2c2"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Enabled
G2L["2c3"] = Instance.new("BoolValue", G2L["2b9"]);
G2L["2c3"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["2c4"] = Instance.new("TextLabel", G2L["28c"]);
G2L["2c4"]["TextWrapped"] = true;
G2L["2c4"]["BorderSizePixel"] = 0;
G2L["2c4"]["TextSize"] = 14;
G2L["2c4"]["TextScaled"] = true;
G2L["2c4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2c4"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["2c4"]["BackgroundTransparency"] = 1;
G2L["2c4"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["2c4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c4"]["Text"] = [[AspectRatio]];
G2L["2c4"]["Position"] = UDim2.new(0.00518, 0, 0.97998, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["2c5"] = Instance.new("TextLabel", G2L["28c"]);
G2L["2c5"]["TextWrapped"] = true;
G2L["2c5"]["BorderSizePixel"] = 0;
G2L["2c5"]["TextSize"] = 14;
G2L["2c5"]["TextScaled"] = true;
G2L["2c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2c5"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["2c5"]["BackgroundTransparency"] = 1;
G2L["2c5"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["2c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c5"]["Text"] = [[________________________________________]];
G2L["2c5"]["Position"] = UDim2.new(0.00518, 0, 1.03076, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextLabel
G2L["2c6"] = Instance.new("TextLabel", G2L["28c"]);
G2L["2c6"]["TextWrapped"] = true;
G2L["2c6"]["BorderSizePixel"] = 0;
G2L["2c6"]["TextSize"] = 14;
G2L["2c6"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["2c6"]["TextScaled"] = true;
G2L["2c6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c6"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2c6"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["2c6"]["BackgroundTransparency"] = 1;
G2L["2c6"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["2c6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c6"]["Text"] = [[Enable]];
G2L["2c6"]["Position"] = UDim2.new(0.03676, 0, 1.1476, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable
G2L["2c7"] = Instance.new("Frame", G2L["28c"]);
G2L["2c7"]["BorderSizePixel"] = 0;
G2L["2c7"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["2c7"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["2c7"]["Position"] = UDim2.new(0.75781, 0, 1.15541, 0);
G2L["2c7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c7"]["Name"] = [[Enable]];
G2L["2c7"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.UICorner
G2L["2c8"] = Instance.new("UICorner", G2L["2c7"]);
G2L["2c8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton
G2L["2c9"] = Instance.new("TextButton", G2L["2c7"]);
G2L["2c9"]["BorderSizePixel"] = 0;
G2L["2c9"]["TextTransparency"] = 1;
G2L["2c9"]["TextSize"] = 14;
G2L["2c9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2c9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2c9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2c9"]["BackgroundTransparency"] = 1;
G2L["2c9"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["2c9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.LocalScript
G2L["2ca"] = Instance.new("LocalScript", G2L["2c9"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.UICorner
G2L["2cb"] = Instance.new("UICorner", G2L["2c9"]);
G2L["2cb"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.UIAspectRatioConstraint
G2L["2cc"] = Instance.new("UIAspectRatioConstraint", G2L["2c9"]);
G2L["2cc"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget
G2L["2cd"] = Instance.new("Frame", G2L["2c7"]);
G2L["2cd"]["BorderSizePixel"] = 0;
G2L["2cd"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["2cd"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["2cd"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["2cd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2cd"]["Name"] = [[Carget]];
G2L["2cd"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget.UICorner
G2L["2ce"] = Instance.new("UICorner", G2L["2cd"]);
G2L["2ce"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Carget.UIAspectRatioConstraint
G2L["2cf"] = Instance.new("UIAspectRatioConstraint", G2L["2cd"]);
G2L["2cf"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.UIAspectRatioConstraint
G2L["2d0"] = Instance.new("UIAspectRatioConstraint", G2L["2c7"]);
G2L["2d0"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.Enabled
G2L["2d1"] = Instance.new("BoolValue", G2L["2c7"]);
G2L["2d1"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency
G2L["2d2"] = Instance.new("Frame", G2L["28c"]);
G2L["2d2"]["BorderSizePixel"] = 0;
G2L["2d2"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["2d2"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["2d2"]["Position"] = UDim2.new(0.02172, 0, 1.266, 0);
G2L["2d2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2d2"]["Name"] = [[Transparency]];
G2L["2d2"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.UICorner
G2L["2d3"] = Instance.new("UICorner", G2L["2d2"]);
G2L["2d3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Enabled
G2L["2d4"] = Instance.new("BoolValue", G2L["2d2"]);
G2L["2d4"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.TextLabel
G2L["2d5"] = Instance.new("TextLabel", G2L["2d2"]);
G2L["2d5"]["TextWrapped"] = true;
G2L["2d5"]["Interactable"] = false;
G2L["2d5"]["BorderSizePixel"] = 0;
G2L["2d5"]["TextSize"] = 14;
G2L["2d5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["2d5"]["TextScaled"] = true;
G2L["2d5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2d5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2d5"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["2d5"]["BackgroundTransparency"] = 1;
G2L["2d5"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["2d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2d5"]["Text"] = [[Aspect: 1]];
G2L["2d5"]["Position"] = UDim2.new(0.02043, 0, 0.22627, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget
G2L["2d6"] = Instance.new("Frame", G2L["2d2"]);
G2L["2d6"]["ZIndex"] = -333;
G2L["2d6"]["BorderSizePixel"] = 0;
G2L["2d6"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["2d6"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["2d6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2d6"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.UICorner
G2L["2d7"] = Instance.new("UICorner", G2L["2d6"]);
G2L["2d7"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.UIAspectRatioConstraint
G2L["2d8"] = Instance.new("UIAspectRatioConstraint", G2L["2d6"]);
G2L["2d8"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.TextButton
G2L["2d9"] = Instance.new("TextButton", G2L["2d6"]);
G2L["2d9"]["BorderSizePixel"] = 0;
G2L["2d9"]["TextTransparency"] = 1;
G2L["2d9"]["AutoLocalize"] = false;
G2L["2d9"]["TextSize"] = 14;
G2L["2d9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2d9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2d9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2d9"]["BackgroundTransparency"] = 1;
G2L["2d9"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["2d9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.TextButton.LocalScript
G2L["2da"] = Instance.new("LocalScript", G2L["2d9"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview
G2L["2db"] = Instance.new("ViewportFrame", G2L["28c"]);
G2L["2db"]["Visible"] = false;
-- [ERROR] cannot convert CurrentCamera, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["2db"]["BorderSizePixel"] = 0;
G2L["2db"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["2db"]["LightColor"] = Color3.fromRGB(255, 254, 254);
G2L["2db"]["Ambient"] = Color3.fromRGB(168, 168, 168);
G2L["2db"]["Size"] = UDim2.new(0.99779, 0, 0.48493, 0);
G2L["2db"]["Position"] = UDim2.new(1.00222, 0, 0.16511, 0);
G2L["2db"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2db"]["Name"] = [[Preview]];
G2L["2db"]["BackgroundTransparency"] = 0.03;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.preview
G2L["2dc"] = Instance.new("Model", G2L["2db"]);
G2L["2dc"]["WorldPivot"] = CFrame.new(Vector3.new(0, -1, -2), Vector3.new(0, 0, -1));
G2L["2dc"]["Name"] = [[preview]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.preview.Left Arm
G2L["2dd"] = Instance.new("Part", G2L["2dc"]);
G2L["2dd"]["CanCollide"] = false;
G2L["2dd"]["CFrame"] = CFrame.new(Vector3.new(-1.44503, -2.01443, -2.45994), Vector3.new(0, 1, 0));
G2L["2dd"]["Size"] = Vector3.new(1, 4, 1);
-- [ERROR] cannot convert BrickColor, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["2dd"]["Color"] = Color3.fromRGB(255, 205, 154);
G2L["2dd"]["Rotation"] = Vector3.new(90, 0, 0);
G2L["2dd"]["Name"] = [[Left Arm]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.preview.Left Arm.Mesh
G2L["2de"] = Instance.new("SpecialMesh", G2L["2dd"]);
G2L["2de"]["MeshId"] = [[rbxassetid://488154609]];
G2L["2de"]["MeshType"] = Enum.MeshType.FileMesh;
G2L["2de"]["Scale"] = Vector3.new(0.01, 0.02, 0.01);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.preview.Right Arm
G2L["2df"] = Instance.new("Part", G2L["2dc"]);
G2L["2df"]["CanCollide"] = false;
G2L["2df"]["CFrame"] = CFrame.new(Vector3.new(1.55497, -2.01443, -2.45994), Vector3.new(0, 1, 0));
G2L["2df"]["Size"] = Vector3.new(1, 4, 1);
-- [ERROR] cannot convert BrickColor, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["2df"]["Color"] = Color3.fromRGB(255, 205, 154);
G2L["2df"]["Rotation"] = Vector3.new(90, 0, 0);
G2L["2df"]["Name"] = [[Right Arm]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.preview.Right Arm.Mesh
G2L["2e0"] = Instance.new("SpecialMesh", G2L["2df"]);
G2L["2e0"]["MeshId"] = [[rbxassetid://488154808]];
G2L["2e0"]["MeshType"] = Enum.MeshType.FileMesh;
G2L["2e0"]["Scale"] = Vector3.new(0.01, 0.02, 0.01);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.UICorner
G2L["2e1"] = Instance.new("UICorner", G2L["2db"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.UIGradient
G2L["2e2"] = Instance.new("UIGradient", G2L["2db"]);
G2L["2e2"]["Rotation"] = 62;
G2L["2e2"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(206, 206, 206)),ColorSequenceKeypoint.new(0.145, Color3.fromRGB(243, 243, 243)),ColorSequenceKeypoint.new(0.490, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(192, 192, 192))};


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.UIStroke
G2L["2e3"] = Instance.new("UIStroke", G2L["2db"]);
G2L["2e3"]["Transparency"] = 0.35;
G2L["2e3"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2e3"]["Thickness"] = 1.5;
G2L["2e3"]["Color"] = Color3.fromRGB(227, 227, 227);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.UIStroke.UIGradient
G2L["2e4"] = Instance.new("UIGradient", G2L["2e3"]);
G2L["2e4"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.UIStroke.UIGradient.LocalScript
G2L["2e5"] = Instance.new("LocalScript", G2L["2e4"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.Camera
G2L["2e6"] = Instance.new("Camera", G2L["2db"]);
G2L["2e6"]["CFrame"] = CFrame.new(Vector3.new(0, 0, -0.5), Vector3.new(0, 0, -1));
G2L["2e6"]["CameraType"] = Enum.CameraType.Scriptable;
G2L["2e6"]["Focus"] = CFrame.new(Vector3.new(0, -1, -1), Vector3.new(0, 0, -1));
G2L["2e6"]["HeadLocked"] = false;
-- [ERROR] cannot convert CameraSubject, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.Part
G2L["2e7"] = Instance.new("Part", G2L["2db"]);
G2L["2e7"]["Anchored"] = true;
G2L["2e7"]["BottomSurface"] = Enum.SurfaceType.Smooth;
G2L["2e7"]["TopSurface"] = Enum.SurfaceType.Smooth;
G2L["2e7"]["CFrame"] = CFrame.new(Vector3.new(0, 0, -12), Vector3.new(0, 0, -1));
G2L["2e7"]["Size"] = Vector3.new(4, 1, 2);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack
G2L["2e8"] = Instance.new("Frame", G2L["135"]);
G2L["2e8"]["BorderSizePixel"] = 0;
G2L["2e8"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["2e8"]["Size"] = UDim2.new(0.492, 0, 0.275, 0);
G2L["2e8"]["Position"] = UDim2.new(0.508, 0, 0.792, 0);
G2L["2e8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e8"]["Name"] = [[BackTrack]];
G2L["2e8"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.TextLabel
G2L["2e9"] = Instance.new("TextLabel", G2L["2e8"]);
G2L["2e9"]["TextWrapped"] = true;
G2L["2e9"]["BorderSizePixel"] = 0;
G2L["2e9"]["TextSize"] = 14;
G2L["2e9"]["TextScaled"] = true;
G2L["2e9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2e9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2e9"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["2e9"]["BackgroundTransparency"] = 1;
G2L["2e9"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["2e9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e9"]["Text"] = [[BackTrack]];
G2L["2e9"]["Position"] = UDim2.new(-0.02986, 0, 0.25484, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.TextLabel
G2L["2ea"] = Instance.new("TextLabel", G2L["2e8"]);
G2L["2ea"]["TextWrapped"] = true;
G2L["2ea"]["BorderSizePixel"] = 0;
G2L["2ea"]["TextSize"] = 14;
G2L["2ea"]["TextScaled"] = true;
G2L["2ea"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2ea"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2ea"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["2ea"]["BackgroundTransparency"] = 1;
G2L["2ea"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["2ea"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2ea"]["Text"] = [[________________________________________]];
G2L["2ea"]["Position"] = UDim2.new(-0.02986, 0, 0.30563, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.TextLabel
G2L["2eb"] = Instance.new("TextLabel", G2L["2e8"]);
G2L["2eb"]["TextWrapped"] = true;
G2L["2eb"]["BorderSizePixel"] = 0;
G2L["2eb"]["TextSize"] = 14;
G2L["2eb"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["2eb"]["TextScaled"] = true;
G2L["2eb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2eb"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2eb"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["2eb"]["BackgroundTransparency"] = 1;
G2L["2eb"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["2eb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2eb"]["Text"] = [[Enable]];
G2L["2eb"]["Position"] = UDim2.new(0.00172, 0, 0.41891, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable
G2L["2ec"] = Instance.new("Frame", G2L["2e8"]);
G2L["2ec"]["BorderSizePixel"] = 0;
G2L["2ec"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["2ec"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["2ec"]["Position"] = UDim2.new(0.72277, 0, 0.42672, 0);
G2L["2ec"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2ec"]["Name"] = [[Enable]];
G2L["2ec"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.UICorner
G2L["2ed"] = Instance.new("UICorner", G2L["2ec"]);
G2L["2ed"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.TextButton
G2L["2ee"] = Instance.new("TextButton", G2L["2ec"]);
G2L["2ee"]["BorderSizePixel"] = 0;
G2L["2ee"]["TextTransparency"] = 1;
G2L["2ee"]["TextSize"] = 14;
G2L["2ee"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2ee"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2ee"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2ee"]["BackgroundTransparency"] = 1;
G2L["2ee"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["2ee"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.TextButton.LocalScript
G2L["2ef"] = Instance.new("LocalScript", G2L["2ee"]);



-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.TextButton.UICorner
G2L["2f0"] = Instance.new("UICorner", G2L["2ee"]);
G2L["2f0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.TextButton.UIAspectRatioConstraint
G2L["2f1"] = Instance.new("UIAspectRatioConstraint", G2L["2ee"]);
G2L["2f1"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.Carget
G2L["2f2"] = Instance.new("Frame", G2L["2ec"]);
G2L["2f2"]["BorderSizePixel"] = 0;
G2L["2f2"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["2f2"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["2f2"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["2f2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2f2"]["Name"] = [[Carget]];
G2L["2f2"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.Carget.UICorner
G2L["2f3"] = Instance.new("UICorner", G2L["2f2"]);
G2L["2f3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.Carget.UIAspectRatioConstraint
G2L["2f4"] = Instance.new("UIAspectRatioConstraint", G2L["2f2"]);
G2L["2f4"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.UIAspectRatioConstraint
G2L["2f5"] = Instance.new("UIAspectRatioConstraint", G2L["2ec"]);
G2L["2f5"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.Enabled
G2L["2f6"] = Instance.new("BoolValue", G2L["2ec"]);
G2L["2f6"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.ColorVal
G2L["2f7"] = Instance.new("Color3Value", G2L["2e8"]);
G2L["2f7"]["Name"] = [[ColorVal]];
G2L["2f7"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.ColorVal2
G2L["2f8"] = Instance.new("Color3Value", G2L["2e8"]);
G2L["2f8"]["Name"] = [[ColorVal2]];
G2L["2f8"]["Value"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Visual.Preview
G2L["2f9"] = Instance.new("Frame", G2L["133"]);
G2L["2f9"]["BorderSizePixel"] = 0;
G2L["2f9"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["2f9"]["Size"] = UDim2.new(0.50291, 0, 1.22874, 0);
G2L["2f9"]["Position"] = UDim2.new(1.05488, 0, -0.17888, 0);
G2L["2f9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2f9"]["Name"] = [[Preview]];
G2L["2f9"]["BackgroundTransparency"] = 0.03;


-- StarterGui.xescriptsXD.Frame.Visual.Preview.TextLabel
G2L["2fa"] = Instance.new("TextLabel", G2L["2f9"]);
G2L["2fa"]["TextWrapped"] = true;
G2L["2fa"]["BorderSizePixel"] = 0;
G2L["2fa"]["TextSize"] = 14;
G2L["2fa"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["2fa"]["TextScaled"] = true;
G2L["2fa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2fa"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2fa"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["2fa"]["BackgroundTransparency"] = 1;
G2L["2fa"]["Size"] = UDim2.new(0.5778, 0, 0.07402, 0);
G2L["2fa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2fa"]["Text"] = [[Preview]];
G2L["2fa"]["Position"] = UDim2.new(0.03083, 0, 0.01167, 0);


-- StarterGui.xescriptsXD.Frame.Visual.Preview.TextLabel.UITextSizeConstraint
G2L["2fb"] = Instance.new("UITextSizeConstraint", G2L["2fa"]);
G2L["2fb"]["MaxTextSize"] = 24;


-- StarterGui.xescriptsXD.Frame.Visual.Preview.ImageLabel
G2L["2fc"] = Instance.new("ImageLabel", G2L["2f9"]);
G2L["2fc"]["BorderSizePixel"] = 0;
G2L["2fc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["2fc"]["Image"] = [[rbxassetid://95723529271493]];
G2L["2fc"]["Size"] = UDim2.new(1.30732, 0, 0.68421, 0);
G2L["2fc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2fc"]["BackgroundTransparency"] = 1;
G2L["2fc"]["Position"] = UDim2.new(-0.1561, 0, 0.15789, 0);


-- StarterGui.xescriptsXD.Frame.Visual.Preview.UIStroke
G2L["2fd"] = Instance.new("UIStroke", G2L["2f9"]);
G2L["2fd"]["Transparency"] = 0.35;
G2L["2fd"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["2fd"]["Thickness"] = 1.5;
G2L["2fd"]["Color"] = Color3.fromRGB(227, 227, 227);


-- StarterGui.xescriptsXD.Frame.Visual.Preview.UIStroke.UIGradient
G2L["2fe"] = Instance.new("UIGradient", G2L["2fd"]);
G2L["2fe"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};


-- StarterGui.xescriptsXD.Frame.Visual.Preview.UIStroke.UIGradient.LocalScript
G2L["2ff"] = Instance.new("LocalScript", G2L["2fe"]);



-- StarterGui.xescriptsXD.Frame.Visual.Preview.UICorner
G2L["300"] = Instance.new("UICorner", G2L["2f9"]);



-- StarterGui.xescriptsXD.Frame.Visual.Preview.UIGradient
G2L["301"] = Instance.new("UIGradient", G2L["2f9"]);
G2L["301"]["Rotation"] = 62;
G2L["301"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(206, 206, 206)),ColorSequenceKeypoint.new(0.145, Color3.fromRGB(243, 243, 243)),ColorSequenceKeypoint.new(0.490, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(192, 192, 192))};


-- StarterGui.xescriptsXD.Frame.Visual.Preview.ESP
G2L["302"] = Instance.new("Frame", G2L["2f9"]);
G2L["302"]["Visible"] = false;
G2L["302"]["BorderSizePixel"] = 4;
G2L["302"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["302"]["BorderMode"] = Enum.BorderMode.Inset;
G2L["302"]["Size"] = UDim2.new(0.9399, 0, 0.56796, 0);
G2L["302"]["Position"] = UDim2.new(0.03083, 0, 0.2334, 0);
G2L["302"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["302"]["Name"] = [[ESP]];
G2L["302"]["BackgroundTransparency"] = 0.9;


-- StarterGui.xescriptsXD.Frame.Visual.Preview.Nametag
G2L["303"] = Instance.new("TextLabel", G2L["2f9"]);
G2L["303"]["TextWrapped"] = true;
G2L["303"]["BorderSizePixel"] = 0;
G2L["303"]["TextSize"] = 14;
G2L["303"]["TextScaled"] = true;
G2L["303"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["303"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["303"]["TextColor3"] = Color3.fromRGB(236, 236, 236);
G2L["303"]["BackgroundTransparency"] = 1;
G2L["303"]["Size"] = UDim2.new(1, 0, 0.073, 0);
G2L["303"]["Visible"] = false;
G2L["303"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["303"]["Text"] = [[XESCRIPTS]];
G2L["303"]["Name"] = [[Nametag]];
G2L["303"]["Position"] = UDim2.new(0, 0, 0.12482, 0);


-- StarterGui.xescriptsXD.Frame.Visual.Preview.Skeleton
G2L["304"] = Instance.new("Frame", G2L["2f9"]);
G2L["304"]["Visible"] = false;
G2L["304"]["BorderSizePixel"] = 0;
G2L["304"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["304"]["Size"] = UDim2.new(0.84878, 0, 0.71122, 0);
G2L["304"]["Position"] = UDim2.new(0.07317, 0, 0.12888, 0);
G2L["304"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["304"]["Name"] = [[Skeleton]];
G2L["304"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Visual.Preview.Skeleton.Frame
G2L["305"] = Instance.new("Frame", G2L["304"]);
G2L["305"]["BorderSizePixel"] = 0;
G2L["305"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["305"]["Size"] = UDim2.new(0.03448, 0, 0.29195, 0);
G2L["305"]["Position"] = UDim2.new(0.48276, 0, 0.33131, 0);
G2L["305"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Visual.Preview.Skeleton.Frame
G2L["306"] = Instance.new("Frame", G2L["304"]);
G2L["306"]["BorderSizePixel"] = 0;
G2L["306"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["306"]["Size"] = UDim2.new(0.03448, 0, 0.34899, 0);
G2L["306"]["Position"] = UDim2.new(0.47701, 0, 0.2953, 0);
G2L["306"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["306"]["Rotation"] = 90;


-- StarterGui.xescriptsXD.Frame.Visual.Preview.Skeleton.Frame
G2L["307"] = Instance.new("Frame", G2L["304"]);
G2L["307"]["BorderSizePixel"] = 0;
G2L["307"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["307"]["Size"] = UDim2.new(0.03448, 0, 0.17114, 0);
G2L["307"]["Position"] = UDim2.new(0.41667, 0, 0.58557, 0);
G2L["307"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["307"]["Rotation"] = 30;


-- StarterGui.xescriptsXD.Frame.Visual.Preview.Skeleton.Frame
G2L["308"] = Instance.new("Frame", G2L["304"]);
G2L["308"]["BorderSizePixel"] = 0;
G2L["308"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["308"]["Size"] = UDim2.new(0.03448, 0, 0.17114, 0);
G2L["308"]["Position"] = UDim2.new(0.5546, 0, 0.59228, 0);
G2L["308"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["308"]["Rotation"] = -30;


-- StarterGui.xescriptsXD.Frame.XEScripts
G2L["309"] = Instance.new("TextLabel", G2L["11b"]);
G2L["309"]["TextWrapped"] = true;
G2L["309"]["ZIndex"] = -999;
G2L["309"]["BorderSizePixel"] = 0;
G2L["309"]["AutoLocalize"] = false;
G2L["309"]["TextSize"] = 14;
G2L["309"]["TextTransparency"] = 0.95;
G2L["309"]["TextScaled"] = true;
G2L["309"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["309"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["309"]["TextColor3"] = Color3.fromRGB(154, 154, 154);
G2L["309"]["BackgroundTransparency"] = 1;
G2L["309"]["Size"] = UDim2.new(0.70974, 0, 0.37232, 0);
G2L["309"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["309"]["Text"] = [[XESCRIPTS]];
G2L["309"]["LayoutOrder"] = -999999;
G2L["309"]["Rotation"] = 21;
G2L["309"]["Name"] = [[XEScripts]];
G2L["309"]["Position"] = UDim2.new(0.00528, 0, 0.52506, 0);


-- StarterGui.xescriptsXD.Frame.Plr
G2L["30a"] = Instance.new("Frame", G2L["11b"]);
G2L["30a"]["ZIndex"] = 3;
G2L["30a"]["BorderSizePixel"] = 0;
G2L["30a"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["30a"]["Size"] = UDim2.new(0.25155, 0, 0.08358, 0);
G2L["30a"]["Position"] = UDim2.new(0.01764, 0, 0.89775, 0);
G2L["30a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30a"]["Name"] = [[Plr]];
G2L["30a"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Plr.UICorner
G2L["30b"] = Instance.new("UICorner", G2L["30a"]);
G2L["30b"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.xescriptsXD.Frame.Plr.TextLabel
G2L["30c"] = Instance.new("TextLabel", G2L["30a"]);
G2L["30c"]["TextWrapped"] = true;
G2L["30c"]["BorderSizePixel"] = 0;
G2L["30c"]["TextSize"] = 13;
G2L["30c"]["TextScaled"] = true;
G2L["30c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["30c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["30c"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["30c"]["BackgroundTransparency"] = 1;
G2L["30c"]["RichText"] = true;
G2L["30c"]["Size"] = UDim2.new(0.66966, 0, 0.77602, 0);
G2L["30c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30c"]["Text"] = [[rzhaviytrener]];
G2L["30c"]["Position"] = UDim2.new(0.32653, 0, 0.10977, 0);


-- StarterGui.xescriptsXD.Frame.Plr.TextLabel.LocalScript
G2L["30d"] = Instance.new("LocalScript", G2L["30c"]);



-- StarterGui.xescriptsXD.Frame.Plr.TextLabel.UITextSizeConstraint
G2L["30e"] = Instance.new("UITextSizeConstraint", G2L["30c"]);



-- StarterGui.xescriptsXD.Frame.Plr.Avatar
G2L["30f"] = Instance.new("ImageLabel", G2L["30a"]);
G2L["30f"]["ZIndex"] = 5;
G2L["30f"]["BorderSizePixel"] = 0;
G2L["30f"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["30f"]["ImageTransparency"] = 0.1;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["30f"]["ImageColor3"] = Color3.fromRGB(215, 215, 215);
G2L["30f"]["Image"] = [[https://www.roblox.com/headshot-thumbnail/image?userId=7879546502&width=420&height=420&format=png]];
G2L["30f"]["Size"] = UDim2.new(0.22506, 0, 1, 0);
G2L["30f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["30f"]["BackgroundTransparency"] = 1;
G2L["30f"]["LayoutOrder"] = 3;
G2L["30f"]["Name"] = [[Avatar]];
G2L["30f"]["Position"] = UDim2.new(0.01818, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Plr.Avatar.LocalScript
G2L["310"] = Instance.new("LocalScript", G2L["30f"]);



-- StarterGui.xescriptsXD.Frame.Plr.Avatar.UICorner
G2L["311"] = Instance.new("UICorner", G2L["30f"]);
G2L["311"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.xescriptsXD.Frame.Plr.TextLabel
G2L["312"] = Instance.new("TextLabel", G2L["30a"]);
G2L["312"]["TextWrapped"] = true;
G2L["312"]["BorderSizePixel"] = 0;
G2L["312"]["TextSize"] = 13;
G2L["312"]["TextTransparency"] = 0.8;
G2L["312"]["TextScaled"] = true;
G2L["312"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["312"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["312"]["TextColor3"] = Color3.fromRGB(182, 182, 182);
G2L["312"]["BackgroundTransparency"] = 1;
G2L["312"]["RichText"] = true;
G2L["312"]["Size"] = UDim2.new(0.48166, 0, 0.40481, 0);
G2L["312"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["312"]["Text"] = [[UUID:3519]];
G2L["312"]["Position"] = UDim2.new(3.38447, 0, 0.48098, 0);


-- StarterGui.xescriptsXD.Frame.Plr.TextLabel.LocalScript
G2L["313"] = Instance.new("LocalScript", G2L["312"]);



-- StarterGui.xescriptsXD.Frame.Plr.TextLabel.UITextSizeConstraint
G2L["314"] = Instance.new("UITextSizeConstraint", G2L["312"]);



-- StarterGui.xescriptsXD.Frame.Close2
G2L["315"] = Instance.new("TextButton", G2L["11b"]);
G2L["315"]["BorderSizePixel"] = 0;
G2L["315"]["TextSize"] = 14;
G2L["315"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["315"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["315"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["315"]["ZIndex"] = 3;
G2L["315"]["BackgroundTransparency"] = 1;
G2L["315"]["Size"] = UDim2.new(0.05254, 0, 0.07008, 0);
G2L["315"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["315"]["Text"] = [[–]];
G2L["315"]["Name"] = [[Close2]];
G2L["315"]["Position"] = UDim2.new(0.869, 0, 0.014, 0);


-- StarterGui.xescriptsXD.Frame.Close2.LocalScript
G2L["316"] = Instance.new("LocalScript", G2L["315"]);



-- StarterGui.xescriptsXD.Frame.Close2.UICorner
G2L["317"] = Instance.new("UICorner", G2L["315"]);
G2L["317"]["CornerRadius"] = UDim.new(0, 2);


-- StarterGui.xescriptsXD.Frame.Close2.UIAspectRatioConstraint
G2L["318"] = Instance.new("UIAspectRatioConstraint", G2L["315"]);
G2L["318"]["AspectRatio"] = 1.19231;


-- StarterGui.xescriptsXD.Frame.Close
G2L["319"] = Instance.new("TextButton", G2L["11b"]);
G2L["319"]["BorderSizePixel"] = 0;
G2L["319"]["TextSize"] = 14;
G2L["319"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["319"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["319"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["319"]["ZIndex"] = 3;
G2L["319"]["BackgroundTransparency"] = 1;
G2L["319"]["Size"] = UDim2.new(0.05254, 0, 0.07008, 0);
G2L["319"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["319"]["Text"] = [[X]];
G2L["319"]["Name"] = [[Close]];
G2L["319"]["Position"] = UDim2.new(0.92712, 0, 0.014, 0);


-- StarterGui.xescriptsXD.Frame.Close.LocalScript
G2L["31a"] = Instance.new("LocalScript", G2L["319"]);



-- StarterGui.xescriptsXD.Frame.Close.UICorner
G2L["31b"] = Instance.new("UICorner", G2L["319"]);
G2L["31b"]["CornerRadius"] = UDim.new(0, 2);


-- StarterGui.xescriptsXD.Frame.Close.UIAspectRatioConstraint
G2L["31c"] = Instance.new("UIAspectRatioConstraint", G2L["319"]);
G2L["31c"]["AspectRatio"] = 1.19231;


-- StarterGui.xescriptsXD.Frame.UnLoad
G2L["31d"] = Instance.new("TextButton", G2L["11b"]);
G2L["31d"]["BorderSizePixel"] = 0;
G2L["31d"]["TextSize"] = 14;
G2L["31d"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["31d"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["31d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["31d"]["ZIndex"] = 3;
G2L["31d"]["BackgroundTransparency"] = 1;
G2L["31d"]["Size"] = UDim2.new(0.05254, 0, 0.07008, 0);
G2L["31d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["31d"]["Text"] = [[]];
G2L["31d"]["Name"] = [[UnLoad]];
G2L["31d"]["Position"] = UDim2.new(0.809, 0, 0.014, 0);


-- StarterGui.xescriptsXD.Frame.UnLoad.LocalScript
G2L["31e"] = Instance.new("LocalScript", G2L["31d"]);



-- StarterGui.xescriptsXD.Frame.UnLoad.UICorner
G2L["31f"] = Instance.new("UICorner", G2L["31d"]);
G2L["31f"]["CornerRadius"] = UDim.new(0, 2);


-- StarterGui.xescriptsXD.Frame.UnLoad.UIAspectRatioConstraint
G2L["320"] = Instance.new("UIAspectRatioConstraint", G2L["31d"]);
G2L["320"]["AspectRatio"] = 1.19231;


-- StarterGui.xescriptsXD.Frame.UnLoad.ImageLabel
G2L["321"] = Instance.new("ImageLabel", G2L["31d"]);
G2L["321"]["BorderSizePixel"] = 0;
G2L["321"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["321"]["ImageColor3"] = Color3.fromRGB(233, 233, 233);
G2L["321"]["Image"] = [[http://www.roblox.com/asset/?id=72865988207889]];
G2L["321"]["Size"] = UDim2.new(0.59923, 0, 0.6192, 0);
G2L["321"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["321"]["BackgroundTransparency"] = 1;
G2L["321"]["Position"] = UDim2.new(0.19974, 0, 0.19052, 0);


-- StarterGui.xescriptsXD.Frame.UID
G2L["322"] = Instance.new("Frame", G2L["11b"]);
G2L["322"]["Visible"] = false;
G2L["322"]["ZIndex"] = 3;
G2L["322"]["BorderSizePixel"] = 0;
G2L["322"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["322"]["Size"] = UDim2.new(0.16457, 0, 0.08895, 0);
G2L["322"]["Position"] = UDim2.new(0.42634, 0, 0.013, 0);
G2L["322"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["322"]["Name"] = [[UID]];
G2L["322"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.UID.LocalScript
G2L["323"] = Instance.new("LocalScript", G2L["322"]);
G2L["323"]["Enabled"] = false;
G2L["323"]["Disabled"] = true;


-- StarterGui.xescriptsXD.Frame.UID.UICorner
G2L["324"] = Instance.new("UICorner", G2L["322"]);
G2L["324"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.xescriptsXD.Frame.UID.TextLabel
G2L["325"] = Instance.new("TextLabel", G2L["322"]);
G2L["325"]["TextWrapped"] = true;
G2L["325"]["BorderSizePixel"] = 0;
G2L["325"]["TextSize"] = 14;
G2L["325"]["TextScaled"] = true;
G2L["325"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["325"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["325"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["325"]["BackgroundTransparency"] = 1;
G2L["325"]["RichText"] = true;
G2L["325"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["325"]["Visible"] = false;
G2L["325"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["325"]["Text"] = [[UID:134]];


-- StarterGui.xescriptsXD.Frame.UID.TextLabel.LocalScript
G2L["326"] = Instance.new("LocalScript", G2L["325"]);



-- StarterGui.xescriptsXD.Frame.UID.TextLabel.UITextSizeConstraint
G2L["327"] = Instance.new("UITextSizeConstraint", G2L["325"]);
G2L["327"]["MaxTextSize"] = 14;


-- StarterGui.xescriptsXD.Frame.UID.TextLabel.UIAspectRatioConstraint
G2L["328"] = Instance.new("UIAspectRatioConstraint", G2L["325"]);
G2L["328"]["AspectRatio"] = 2.94233;


-- StarterGui.xescriptsXD.Frame.UID.UIAspectRatioConstraint
G2L["329"] = Instance.new("UIAspectRatioConstraint", G2L["322"]);
G2L["329"]["AspectRatio"] = 2.94233;


-- StarterGui.xescriptsXD.Frame.XEScripts
G2L["32a"] = Instance.new("TextLabel", G2L["11b"]);
G2L["32a"]["TextWrapped"] = true;
G2L["32a"]["ZIndex"] = -999;
G2L["32a"]["BorderSizePixel"] = 0;
G2L["32a"]["AutoLocalize"] = false;
G2L["32a"]["TextSize"] = 14;
G2L["32a"]["TextTransparency"] = 0.9;
G2L["32a"]["TextScaled"] = true;
G2L["32a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["32a"]["TextColor3"] = Color3.fromRGB(154, 154, 154);
G2L["32a"]["BackgroundTransparency"] = 1;
G2L["32a"]["Size"] = UDim2.new(0.70974, 0, 0.37232, 0);
G2L["32a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32a"]["Text"] = [[XESCRIPTS]];
G2L["32a"]["LayoutOrder"] = -999999;
G2L["32a"]["Rotation"] = 21;
G2L["32a"]["Name"] = [[XEScripts]];
G2L["32a"]["Position"] = UDim2.new(0.06356, 0, 0.29594, 0);


-- StarterGui.xescriptsXD.Frame.XEScripts
G2L["32b"] = Instance.new("TextLabel", G2L["11b"]);
G2L["32b"]["TextWrapped"] = true;
G2L["32b"]["ZIndex"] = -999;
G2L["32b"]["BorderSizePixel"] = 0;
G2L["32b"]["AutoLocalize"] = false;
G2L["32b"]["TextSize"] = 14;
G2L["32b"]["TextTransparency"] = 0.95;
G2L["32b"]["TextScaled"] = true;
G2L["32b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["32b"]["TextColor3"] = Color3.fromRGB(154, 154, 154);
G2L["32b"]["BackgroundTransparency"] = 1;
G2L["32b"]["Size"] = UDim2.new(0.70974, 0, 0.37232, 0);
G2L["32b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32b"]["Text"] = [[XESCRIPTS]];
G2L["32b"]["LayoutOrder"] = -999999;
G2L["32b"]["Rotation"] = 21;
G2L["32b"]["Name"] = [[XEScripts]];
G2L["32b"]["Position"] = UDim2.new(0.04589, 0, 0.40573, 0);


-- StarterGui.xescriptsXD.Frame.XEScripts
G2L["32c"] = Instance.new("TextLabel", G2L["11b"]);
G2L["32c"]["TextWrapped"] = true;
G2L["32c"]["ZIndex"] = -999;
G2L["32c"]["BorderSizePixel"] = 0;
G2L["32c"]["AutoLocalize"] = false;
G2L["32c"]["TextSize"] = 14;
G2L["32c"]["TextTransparency"] = 0.9;
G2L["32c"]["TextScaled"] = true;
G2L["32c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["32c"]["TextColor3"] = Color3.fromRGB(154, 154, 154);
G2L["32c"]["BackgroundTransparency"] = 1;
G2L["32c"]["Size"] = UDim2.new(0.70974, 0, 0.37232, 0);
G2L["32c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32c"]["Text"] = [[XESCRIPTS]];
G2L["32c"]["LayoutOrder"] = -999999;
G2L["32c"]["Rotation"] = 21;
G2L["32c"]["Name"] = [[XEScripts]];
G2L["32c"]["Position"] = UDim2.new(0.02825, 0, 0.42482, 0);


-- StarterGui.xescriptsXD.Frame.XEScripts
G2L["32d"] = Instance.new("TextLabel", G2L["11b"]);
G2L["32d"]["TextWrapped"] = true;
G2L["32d"]["ZIndex"] = -999;
G2L["32d"]["BorderSizePixel"] = 0;
G2L["32d"]["AutoLocalize"] = false;
G2L["32d"]["TextSize"] = 14;
G2L["32d"]["TextTransparency"] = 0.95;
G2L["32d"]["TextScaled"] = true;
G2L["32d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["32d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["32d"]["TextColor3"] = Color3.fromRGB(154, 154, 154);
G2L["32d"]["BackgroundTransparency"] = 1;
G2L["32d"]["Size"] = UDim2.new(0.70974, 0, 0.37232, 0);
G2L["32d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32d"]["Text"] = [[XESCRIPTS]];
G2L["32d"]["LayoutOrder"] = -999999;
G2L["32d"]["Rotation"] = 21;
G2L["32d"]["Name"] = [[XEScripts]];
G2L["32d"]["Position"] = UDim2.new(0.0812, 0, 0.27685, 0);


-- StarterGui.xescriptsXD.Frame.Movement
G2L["32e"] = Instance.new("Frame", G2L["11b"]);
G2L["32e"]["Visible"] = false;
G2L["32e"]["BorderSizePixel"] = 0;
G2L["32e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32e"]["Size"] = UDim2.new(0.68078, 0, 0.81384, 0);
G2L["32e"]["Position"] = UDim2.new(0.29277, 0, 0.14558, 0);
G2L["32e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["32e"]["Name"] = [[Movement]];
G2L["32e"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.LocalScript
G2L["32f"] = Instance.new("LocalScript", G2L["32e"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame
G2L["330"] = Instance.new("ScrollingFrame", G2L["32e"]);
G2L["330"]["Active"] = true;
G2L["330"]["BorderSizePixel"] = 0;
G2L["330"]["CanvasSize"] = UDim2.new(0, 0, 3, 0);
G2L["330"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["330"]["ScrollBarImageTransparency"] = 1;
G2L["330"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["330"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["330"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["330"]["ScrollBarThickness"] = 3;
G2L["330"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack
G2L["331"] = Instance.new("Frame", G2L["330"]);
G2L["331"]["BorderSizePixel"] = 0;
G2L["331"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["331"]["Size"] = UDim2.new(0.49223, 0, 0.275, 0);
G2L["331"]["Position"] = UDim2.new(0.50572, 0, 0.2781, 0);
G2L["331"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["331"]["Name"] = [[JumpHack]];
G2L["331"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.TextLabel
G2L["332"] = Instance.new("TextLabel", G2L["331"]);
G2L["332"]["TextWrapped"] = true;
G2L["332"]["BorderSizePixel"] = 0;
G2L["332"]["TextSize"] = 14;
G2L["332"]["TextScaled"] = true;
G2L["332"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["332"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["332"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["332"]["BackgroundTransparency"] = 1;
G2L["332"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["332"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["332"]["Text"] = [[Jumphack]];
G2L["332"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.TextLabel
G2L["333"] = Instance.new("TextLabel", G2L["331"]);
G2L["333"]["TextWrapped"] = true;
G2L["333"]["BorderSizePixel"] = 0;
G2L["333"]["TextSize"] = 14;
G2L["333"]["TextScaled"] = true;
G2L["333"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["333"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["333"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["333"]["BackgroundTransparency"] = 1;
G2L["333"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["333"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["333"]["Text"] = [[________________________________________]];
G2L["333"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.TextLabel
G2L["334"] = Instance.new("TextLabel", G2L["331"]);
G2L["334"]["TextWrapped"] = true;
G2L["334"]["BorderSizePixel"] = 0;
G2L["334"]["TextSize"] = 14;
G2L["334"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["334"]["TextScaled"] = true;
G2L["334"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["334"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["334"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["334"]["BackgroundTransparency"] = 1;
G2L["334"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["334"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["334"]["Text"] = [[Enable]];
G2L["334"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1
G2L["335"] = Instance.new("Frame", G2L["331"]);
G2L["335"]["BorderSizePixel"] = 0;
G2L["335"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["335"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["335"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["335"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["335"]["Name"] = [[Enable1]];
G2L["335"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.UICorner
G2L["336"] = Instance.new("UICorner", G2L["335"]);
G2L["336"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.TextButton
G2L["337"] = Instance.new("TextButton", G2L["335"]);
G2L["337"]["BorderSizePixel"] = 0;
G2L["337"]["TextTransparency"] = 1;
G2L["337"]["TextSize"] = 14;
G2L["337"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["337"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["337"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["337"]["BackgroundTransparency"] = 1;
G2L["337"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["337"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.TextButton.LocalScript
G2L["338"] = Instance.new("LocalScript", G2L["337"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.TextButton.UICorner
G2L["339"] = Instance.new("UICorner", G2L["337"]);
G2L["339"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.TextButton.UIAspectRatioConstraint
G2L["33a"] = Instance.new("UIAspectRatioConstraint", G2L["337"]);
G2L["33a"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.Carget
G2L["33b"] = Instance.new("Frame", G2L["335"]);
G2L["33b"]["BorderSizePixel"] = 0;
G2L["33b"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["33b"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["33b"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["33b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33b"]["Name"] = [[Carget]];
G2L["33b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.Carget.UICorner
G2L["33c"] = Instance.new("UICorner", G2L["33b"]);
G2L["33c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.Carget.UIAspectRatioConstraint
G2L["33d"] = Instance.new("UIAspectRatioConstraint", G2L["33b"]);
G2L["33d"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.UIAspectRatioConstraint
G2L["33e"] = Instance.new("UIAspectRatioConstraint", G2L["335"]);
G2L["33e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.Enabled
G2L["33f"] = Instance.new("BoolValue", G2L["335"]);
G2L["33f"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Teamcheck
G2L["340"] = Instance.new("BoolValue", G2L["331"]);
G2L["340"]["Name"] = [[Teamcheck]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.TextLabel
G2L["341"] = Instance.new("TextLabel", G2L["331"]);
G2L["341"]["TextWrapped"] = true;
G2L["341"]["BorderSizePixel"] = 0;
G2L["341"]["TextSize"] = 14;
G2L["341"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["341"]["TextScaled"] = true;
G2L["341"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["341"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["341"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["341"]["BackgroundTransparency"] = 1;
G2L["341"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["341"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["341"]["Text"] = [[Bypass1]];
G2L["341"]["Position"] = UDim2.new(0.032, 0, 0.28906, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable
G2L["342"] = Instance.new("Frame", G2L["331"]);
G2L["342"]["BorderSizePixel"] = 0;
G2L["342"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["342"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["342"]["Position"] = UDim2.new(0.753, 0, 0.29687, 0);
G2L["342"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["342"]["Name"] = [[Enable]];
G2L["342"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.UICorner
G2L["343"] = Instance.new("UICorner", G2L["342"]);
G2L["343"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.TextButton
G2L["344"] = Instance.new("TextButton", G2L["342"]);
G2L["344"]["BorderSizePixel"] = 0;
G2L["344"]["TextTransparency"] = 1;
G2L["344"]["TextSize"] = 14;
G2L["344"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["344"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["344"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["344"]["BackgroundTransparency"] = 1;
G2L["344"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["344"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.TextButton.LocalScript
G2L["345"] = Instance.new("LocalScript", G2L["344"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.TextButton.UICorner
G2L["346"] = Instance.new("UICorner", G2L["344"]);
G2L["346"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.TextButton.UIAspectRatioConstraint
G2L["347"] = Instance.new("UIAspectRatioConstraint", G2L["344"]);
G2L["347"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.Carget
G2L["348"] = Instance.new("Frame", G2L["342"]);
G2L["348"]["BorderSizePixel"] = 0;
G2L["348"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["348"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["348"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["348"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["348"]["Name"] = [[Carget]];
G2L["348"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.Carget.UICorner
G2L["349"] = Instance.new("UICorner", G2L["348"]);
G2L["349"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.Carget.UIAspectRatioConstraint
G2L["34a"] = Instance.new("UIAspectRatioConstraint", G2L["348"]);
G2L["34a"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.UIAspectRatioConstraint
G2L["34b"] = Instance.new("UIAspectRatioConstraint", G2L["342"]);
G2L["34b"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.Enabled
G2L["34c"] = Instance.new("BoolValue", G2L["342"]);
G2L["34c"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.ColorVal
G2L["34d"] = Instance.new("Color3Value", G2L["331"]);
G2L["34d"]["Name"] = [[ColorVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.TransparencyVal
G2L["34e"] = Instance.new("NumberValue", G2L["331"]);
G2L["34e"]["Name"] = [[TransparencyVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.ThicknessVal
G2L["34f"] = Instance.new("NumberValue", G2L["331"]);
G2L["34f"]["Name"] = [[ThicknessVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Bypass1
G2L["350"] = Instance.new("BoolValue", G2L["331"]);
G2L["350"]["Name"] = [[Bypass1]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Bypass2
G2L["351"] = Instance.new("BoolValue", G2L["331"]);
G2L["351"]["Name"] = [[Bypass2]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.TextLabel
G2L["352"] = Instance.new("TextLabel", G2L["331"]);
G2L["352"]["TextWrapped"] = true;
G2L["352"]["BorderSizePixel"] = 0;
G2L["352"]["TextSize"] = 14;
G2L["352"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["352"]["TextScaled"] = true;
G2L["352"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["352"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["352"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["352"]["BackgroundTransparency"] = 1;
G2L["352"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["352"]["Visible"] = false;
G2L["352"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["352"]["Text"] = [[Bypass2]];
G2L["352"]["Position"] = UDim2.new(0.032, 0, 0.39062, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.TextBox
G2L["353"] = Instance.new("TextBox", G2L["331"]);
G2L["353"]["BorderSizePixel"] = 0;
G2L["353"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["353"]["TextSize"] = 14;
G2L["353"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["353"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["353"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["353"]["PlaceholderText"] = [[Power (50)]];
G2L["353"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["353"]["Position"] = UDim2.new(-0.00003, 0, 0.844, 0);
G2L["353"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["353"]["Text"] = [[]];
G2L["353"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.TextBox.LocalScript
G2L["354"] = Instance.new("LocalScript", G2L["353"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other
G2L["355"] = Instance.new("Frame", G2L["330"]);
G2L["355"]["BorderSizePixel"] = 0;
G2L["355"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["355"]["Size"] = UDim2.new(0.49223, 0, 0.275, 0);
G2L["355"]["Position"] = UDim2.new(-0.00259, 0, 0.27859, 0);
G2L["355"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["355"]["Name"] = [[Other]];
G2L["355"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextLabel
G2L["356"] = Instance.new("TextLabel", G2L["355"]);
G2L["356"]["TextWrapped"] = true;
G2L["356"]["BorderSizePixel"] = 0;
G2L["356"]["TextSize"] = 14;
G2L["356"]["TextScaled"] = true;
G2L["356"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["356"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["356"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["356"]["BackgroundTransparency"] = 1;
G2L["356"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["356"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["356"]["Text"] = [[Other]];
G2L["356"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextLabel
G2L["357"] = Instance.new("TextLabel", G2L["355"]);
G2L["357"]["TextWrapped"] = true;
G2L["357"]["BorderSizePixel"] = 0;
G2L["357"]["TextSize"] = 14;
G2L["357"]["TextScaled"] = true;
G2L["357"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["357"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["357"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["357"]["BackgroundTransparency"] = 1;
G2L["357"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["357"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["357"]["Text"] = [[________________________________________]];
G2L["357"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextLabel
G2L["358"] = Instance.new("TextLabel", G2L["355"]);
G2L["358"]["TextWrapped"] = true;
G2L["358"]["BorderSizePixel"] = 0;
G2L["358"]["TextSize"] = 14;
G2L["358"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["358"]["TextScaled"] = true;
G2L["358"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["358"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["358"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["358"]["BackgroundTransparency"] = 1;
G2L["358"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["358"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["358"]["Text"] = [[InfJump]];
G2L["358"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1
G2L["359"] = Instance.new("Frame", G2L["355"]);
G2L["359"]["BorderSizePixel"] = 0;
G2L["359"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["359"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["359"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["359"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["359"]["Name"] = [[Enable1]];
G2L["359"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.UICorner
G2L["35a"] = Instance.new("UICorner", G2L["359"]);
G2L["35a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.TextButton
G2L["35b"] = Instance.new("TextButton", G2L["359"]);
G2L["35b"]["BorderSizePixel"] = 0;
G2L["35b"]["TextTransparency"] = 1;
G2L["35b"]["TextSize"] = 14;
G2L["35b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["35b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["35b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["35b"]["BackgroundTransparency"] = 1;
G2L["35b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["35b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.TextButton.LocalScript
G2L["35c"] = Instance.new("LocalScript", G2L["35b"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.TextButton.ModuleScript
G2L["35d"] = Instance.new("ModuleScript", G2L["35b"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.TextButton.UICorner
G2L["35e"] = Instance.new("UICorner", G2L["35b"]);
G2L["35e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.TextButton.UIAspectRatioConstraint
G2L["35f"] = Instance.new("UIAspectRatioConstraint", G2L["35b"]);
G2L["35f"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.Carget
G2L["360"] = Instance.new("Frame", G2L["359"]);
G2L["360"]["BorderSizePixel"] = 0;
G2L["360"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["360"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["360"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["360"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["360"]["Name"] = [[Carget]];
G2L["360"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.Carget.UICorner
G2L["361"] = Instance.new("UICorner", G2L["360"]);
G2L["361"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.Carget.UIAspectRatioConstraint
G2L["362"] = Instance.new("UIAspectRatioConstraint", G2L["360"]);
G2L["362"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.UIAspectRatioConstraint
G2L["363"] = Instance.new("UIAspectRatioConstraint", G2L["359"]);
G2L["363"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.Enabled
G2L["364"] = Instance.new("BoolValue", G2L["359"]);
G2L["364"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Teamcheck
G2L["365"] = Instance.new("BoolValue", G2L["355"]);
G2L["365"]["Name"] = [[Teamcheck]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.ColorVal
G2L["366"] = Instance.new("Color3Value", G2L["355"]);
G2L["366"]["Name"] = [[ColorVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TransparencyVal
G2L["367"] = Instance.new("NumberValue", G2L["355"]);
G2L["367"]["Name"] = [[TransparencyVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.ThicknessVal
G2L["368"] = Instance.new("NumberValue", G2L["355"]);
G2L["368"]["Name"] = [[ThicknessVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Bypass1
G2L["369"] = Instance.new("BoolValue", G2L["355"]);
G2L["369"]["Name"] = [[Bypass1]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Bypass2
G2L["36a"] = Instance.new("BoolValue", G2L["355"]);
G2L["36a"]["Name"] = [[Bypass2]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextLabel
G2L["36b"] = Instance.new("TextLabel", G2L["355"]);
G2L["36b"]["TextWrapped"] = true;
G2L["36b"]["BorderSizePixel"] = 0;
G2L["36b"]["TextSize"] = 14;
G2L["36b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["36b"]["TextScaled"] = true;
G2L["36b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["36b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["36b"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["36b"]["BackgroundTransparency"] = 1;
G2L["36b"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["36b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36b"]["Text"] = [[Strafe]];
G2L["36b"]["Position"] = UDim2.new(0.03158, 0, 0.29297, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2
G2L["36c"] = Instance.new("Frame", G2L["355"]);
G2L["36c"]["BorderSizePixel"] = 0;
G2L["36c"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["36c"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["36c"]["Position"] = UDim2.new(0.75263, 0, 0.30078, 0);
G2L["36c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36c"]["Name"] = [[Enable2]];
G2L["36c"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.UICorner
G2L["36d"] = Instance.new("UICorner", G2L["36c"]);
G2L["36d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.TextButton
G2L["36e"] = Instance.new("TextButton", G2L["36c"]);
G2L["36e"]["BorderSizePixel"] = 0;
G2L["36e"]["TextTransparency"] = 1;
G2L["36e"]["TextSize"] = 14;
G2L["36e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["36e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["36e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["36e"]["BackgroundTransparency"] = 1;
G2L["36e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["36e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.TextButton.LocalScript
G2L["36f"] = Instance.new("LocalScript", G2L["36e"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.TextButton.UICorner
G2L["370"] = Instance.new("UICorner", G2L["36e"]);
G2L["370"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.TextButton.UIAspectRatioConstraint
G2L["371"] = Instance.new("UIAspectRatioConstraint", G2L["36e"]);
G2L["371"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.Carget
G2L["372"] = Instance.new("Frame", G2L["36c"]);
G2L["372"]["BorderSizePixel"] = 0;
G2L["372"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["372"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["372"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["372"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["372"]["Name"] = [[Carget]];
G2L["372"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.Carget.UICorner
G2L["373"] = Instance.new("UICorner", G2L["372"]);
G2L["373"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.Carget.UIAspectRatioConstraint
G2L["374"] = Instance.new("UIAspectRatioConstraint", G2L["372"]);
G2L["374"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.UIAspectRatioConstraint
G2L["375"] = Instance.new("UIAspectRatioConstraint", G2L["36c"]);
G2L["375"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.Enabled
G2L["376"] = Instance.new("BoolValue", G2L["36c"]);
G2L["376"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextLabel
G2L["377"] = Instance.new("TextLabel", G2L["355"]);
G2L["377"]["TextWrapped"] = true;
G2L["377"]["BorderSizePixel"] = 0;
G2L["377"]["TextSize"] = 14;
G2L["377"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["377"]["TextScaled"] = true;
G2L["377"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["377"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["377"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["377"]["BackgroundTransparency"] = 1;
G2L["377"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["377"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["377"]["Text"] = [[Spinbot]];
G2L["377"]["Position"] = UDim2.new(0.03158, 0, 0.39453, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3
G2L["378"] = Instance.new("Frame", G2L["355"]);
G2L["378"]["BorderSizePixel"] = 0;
G2L["378"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["378"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["378"]["Position"] = UDim2.new(0.75263, 0, 0.40234, 0);
G2L["378"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["378"]["Name"] = [[Enable3]];
G2L["378"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.UICorner
G2L["379"] = Instance.new("UICorner", G2L["378"]);
G2L["379"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton
G2L["37a"] = Instance.new("TextButton", G2L["378"]);
G2L["37a"]["BorderSizePixel"] = 0;
G2L["37a"]["TextTransparency"] = 1;
G2L["37a"]["TextSize"] = 14;
G2L["37a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["37a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["37a"]["BackgroundTransparency"] = 1;
G2L["37a"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["37a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.LocalScript
G2L["37b"] = Instance.new("LocalScript", G2L["37a"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.ModuleScript
G2L["37c"] = Instance.new("ModuleScript", G2L["37a"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.UICorner
G2L["37d"] = Instance.new("UICorner", G2L["37a"]);
G2L["37d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.UIAspectRatioConstraint
G2L["37e"] = Instance.new("UIAspectRatioConstraint", G2L["37a"]);
G2L["37e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget
G2L["37f"] = Instance.new("Frame", G2L["378"]);
G2L["37f"]["BorderSizePixel"] = 0;
G2L["37f"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["37f"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["37f"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["37f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37f"]["Name"] = [[Carget]];
G2L["37f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget.UICorner
G2L["380"] = Instance.new("UICorner", G2L["37f"]);
G2L["380"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget.UIAspectRatioConstraint
G2L["381"] = Instance.new("UIAspectRatioConstraint", G2L["37f"]);
G2L["381"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.UIAspectRatioConstraint
G2L["382"] = Instance.new("UIAspectRatioConstraint", G2L["378"]);
G2L["382"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Enabled
G2L["383"] = Instance.new("BoolValue", G2L["378"]);
G2L["383"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextLabel
G2L["384"] = Instance.new("TextLabel", G2L["355"]);
G2L["384"]["TextWrapped"] = true;
G2L["384"]["BorderSizePixel"] = 0;
G2L["384"]["TextSize"] = 14;
G2L["384"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["384"]["TextScaled"] = true;
G2L["384"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["384"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["384"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["384"]["BackgroundTransparency"] = 1;
G2L["384"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["384"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["384"]["Text"] = [[Noclip]];
G2L["384"]["Position"] = UDim2.new(0.03158, 0, 0.49609, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3
G2L["385"] = Instance.new("Frame", G2L["355"]);
G2L["385"]["BorderSizePixel"] = 0;
G2L["385"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["385"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["385"]["Position"] = UDim2.new(0.75263, 0, 0.50391, 0);
G2L["385"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["385"]["Name"] = [[Enable3]];
G2L["385"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.UICorner
G2L["386"] = Instance.new("UICorner", G2L["385"]);
G2L["386"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton
G2L["387"] = Instance.new("TextButton", G2L["385"]);
G2L["387"]["BorderSizePixel"] = 0;
G2L["387"]["TextTransparency"] = 1;
G2L["387"]["TextSize"] = 14;
G2L["387"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["387"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["387"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["387"]["BackgroundTransparency"] = 1;
G2L["387"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["387"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.LocalScript
G2L["388"] = Instance.new("LocalScript", G2L["387"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.ModuleScript
G2L["389"] = Instance.new("ModuleScript", G2L["387"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.UICorner
G2L["38a"] = Instance.new("UICorner", G2L["387"]);
G2L["38a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.UIAspectRatioConstraint
G2L["38b"] = Instance.new("UIAspectRatioConstraint", G2L["387"]);
G2L["38b"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget
G2L["38c"] = Instance.new("Frame", G2L["385"]);
G2L["38c"]["BorderSizePixel"] = 0;
G2L["38c"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["38c"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["38c"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["38c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["38c"]["Name"] = [[Carget]];
G2L["38c"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget.UICorner
G2L["38d"] = Instance.new("UICorner", G2L["38c"]);
G2L["38d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget.UIAspectRatioConstraint
G2L["38e"] = Instance.new("UIAspectRatioConstraint", G2L["38c"]);
G2L["38e"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.UIAspectRatioConstraint
G2L["38f"] = Instance.new("UIAspectRatioConstraint", G2L["385"]);
G2L["38f"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Enabled
G2L["390"] = Instance.new("BoolValue", G2L["385"]);
G2L["390"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextBox
G2L["391"] = Instance.new("TextBox", G2L["355"]);
G2L["391"]["BorderSizePixel"] = 0;
G2L["391"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["391"]["TextSize"] = 14;
G2L["391"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["391"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["391"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["391"]["PlaceholderText"] = [[Gravity (196.2)]];
G2L["391"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["391"]["Position"] = UDim2.new(-0.00003, 0, 0.82532, 0);
G2L["391"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["391"]["Text"] = [[]];
G2L["391"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextBox.LocalScript
G2L["392"] = Instance.new("LocalScript", G2L["391"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextLabel
G2L["393"] = Instance.new("TextLabel", G2L["355"]);
G2L["393"]["TextWrapped"] = true;
G2L["393"]["BorderSizePixel"] = 0;
G2L["393"]["TextSize"] = 14;
G2L["393"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["393"]["TextScaled"] = true;
G2L["393"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["393"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["393"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["393"]["BackgroundTransparency"] = 1;
G2L["393"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["393"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["393"]["Text"] = [[GravityChanger]];
G2L["393"]["Position"] = UDim2.new(0.03158, 0, 0.59562, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3
G2L["394"] = Instance.new("Frame", G2L["355"]);
G2L["394"]["BorderSizePixel"] = 0;
G2L["394"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["394"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["394"]["Position"] = UDim2.new(0.75263, 0, 0.60344, 0);
G2L["394"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["394"]["Name"] = [[Enable3]];
G2L["394"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.UICorner
G2L["395"] = Instance.new("UICorner", G2L["394"]);
G2L["395"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton
G2L["396"] = Instance.new("TextButton", G2L["394"]);
G2L["396"]["BorderSizePixel"] = 0;
G2L["396"]["TextTransparency"] = 1;
G2L["396"]["TextSize"] = 14;
G2L["396"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["396"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["396"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["396"]["BackgroundTransparency"] = 1;
G2L["396"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["396"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.LocalScript
G2L["397"] = Instance.new("LocalScript", G2L["396"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.UICorner
G2L["398"] = Instance.new("UICorner", G2L["396"]);
G2L["398"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.UIAspectRatioConstraint
G2L["399"] = Instance.new("UIAspectRatioConstraint", G2L["396"]);
G2L["399"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget
G2L["39a"] = Instance.new("Frame", G2L["394"]);
G2L["39a"]["BorderSizePixel"] = 0;
G2L["39a"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["39a"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["39a"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["39a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39a"]["Name"] = [[Carget]];
G2L["39a"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget.UICorner
G2L["39b"] = Instance.new("UICorner", G2L["39a"]);
G2L["39b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget.UIAspectRatioConstraint
G2L["39c"] = Instance.new("UIAspectRatioConstraint", G2L["39a"]);
G2L["39c"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.UIAspectRatioConstraint
G2L["39d"] = Instance.new("UIAspectRatioConstraint", G2L["394"]);
G2L["39d"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Enabled
G2L["39e"] = Instance.new("BoolValue", G2L["394"]);
G2L["39e"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Gravityv
G2L["39f"] = Instance.new("NumberValue", G2L["355"]);
G2L["39f"]["Name"] = [[Gravityv]];
G2L["39f"]["Value"] = 196.2;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextLabel
G2L["3a0"] = Instance.new("TextLabel", G2L["355"]);
G2L["3a0"]["TextWrapped"] = true;
G2L["3a0"]["BorderSizePixel"] = 0;
G2L["3a0"]["TextSize"] = 14;
G2L["3a0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["3a0"]["TextScaled"] = true;
G2L["3a0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3a0"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3a0"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["3a0"]["BackgroundTransparency"] = 1;
G2L["3a0"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["3a0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a0"]["Text"] = [[TPTool]];
G2L["3a0"]["Position"] = UDim2.new(0.03158, 0, 0.69515, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3
G2L["3a1"] = Instance.new("Frame", G2L["355"]);
G2L["3a1"]["BorderSizePixel"] = 0;
G2L["3a1"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["3a1"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["3a1"]["Position"] = UDim2.new(0.75263, 0, 0.70296, 0);
G2L["3a1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a1"]["Name"] = [[Enable3]];
G2L["3a1"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.UICorner
G2L["3a2"] = Instance.new("UICorner", G2L["3a1"]);
G2L["3a2"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton
G2L["3a3"] = Instance.new("TextButton", G2L["3a1"]);
G2L["3a3"]["BorderSizePixel"] = 0;
G2L["3a3"]["TextTransparency"] = 1;
G2L["3a3"]["TextSize"] = 14;
G2L["3a3"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3a3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3a3"]["BackgroundTransparency"] = 1;
G2L["3a3"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3a3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.LocalScript
G2L["3a4"] = Instance.new("LocalScript", G2L["3a3"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.UICorner
G2L["3a5"] = Instance.new("UICorner", G2L["3a3"]);
G2L["3a5"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.UIAspectRatioConstraint
G2L["3a6"] = Instance.new("UIAspectRatioConstraint", G2L["3a3"]);
G2L["3a6"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget
G2L["3a7"] = Instance.new("Frame", G2L["3a1"]);
G2L["3a7"]["BorderSizePixel"] = 0;
G2L["3a7"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["3a7"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["3a7"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["3a7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3a7"]["Name"] = [[Carget]];
G2L["3a7"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget.UICorner
G2L["3a8"] = Instance.new("UICorner", G2L["3a7"]);
G2L["3a8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Carget.UIAspectRatioConstraint
G2L["3a9"] = Instance.new("UIAspectRatioConstraint", G2L["3a7"]);
G2L["3a9"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.UIAspectRatioConstraint
G2L["3aa"] = Instance.new("UIAspectRatioConstraint", G2L["3a1"]);
G2L["3aa"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.Enabled
G2L["3ab"] = Instance.new("BoolValue", G2L["3a1"]);
G2L["3ab"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly
G2L["3ac"] = Instance.new("Frame", G2L["330"]);
G2L["3ac"]["BorderSizePixel"] = 0;
G2L["3ac"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["3ac"]["Size"] = UDim2.new(0.49223, 0, 0.275, 0);
G2L["3ac"]["Position"] = UDim2.new(0.50572, 0, -0.003, 0);
G2L["3ac"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3ac"]["Name"] = [[Fly]];
G2L["3ac"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextLabel
G2L["3ad"] = Instance.new("TextLabel", G2L["3ac"]);
G2L["3ad"]["TextWrapped"] = true;
G2L["3ad"]["BorderSizePixel"] = 0;
G2L["3ad"]["TextSize"] = 14;
G2L["3ad"]["TextScaled"] = true;
G2L["3ad"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3ad"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3ad"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["3ad"]["BackgroundTransparency"] = 1;
G2L["3ad"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["3ad"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3ad"]["Text"] = [[Fly]];
G2L["3ad"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextLabel
G2L["3ae"] = Instance.new("TextLabel", G2L["3ac"]);
G2L["3ae"]["TextWrapped"] = true;
G2L["3ae"]["BorderSizePixel"] = 0;
G2L["3ae"]["TextSize"] = 14;
G2L["3ae"]["TextScaled"] = true;
G2L["3ae"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3ae"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3ae"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["3ae"]["BackgroundTransparency"] = 1;
G2L["3ae"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["3ae"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3ae"]["Text"] = [[________________________________________]];
G2L["3ae"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextLabel
G2L["3af"] = Instance.new("TextLabel", G2L["3ac"]);
G2L["3af"]["TextWrapped"] = true;
G2L["3af"]["BorderSizePixel"] = 0;
G2L["3af"]["TextSize"] = 14;
G2L["3af"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["3af"]["TextScaled"] = true;
G2L["3af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3af"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3af"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["3af"]["BackgroundTransparency"] = 1;
G2L["3af"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["3af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3af"]["Text"] = [[Enable]];
G2L["3af"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1
G2L["3b0"] = Instance.new("Frame", G2L["3ac"]);
G2L["3b0"]["BorderSizePixel"] = 0;
G2L["3b0"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["3b0"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["3b0"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["3b0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b0"]["Name"] = [[Enable1]];
G2L["3b0"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.UICorner
G2L["3b1"] = Instance.new("UICorner", G2L["3b0"]);
G2L["3b1"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.TextButton
G2L["3b2"] = Instance.new("TextButton", G2L["3b0"]);
G2L["3b2"]["BorderSizePixel"] = 0;
G2L["3b2"]["TextTransparency"] = 1;
G2L["3b2"]["TextSize"] = 14;
G2L["3b2"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3b2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3b2"]["BackgroundTransparency"] = 1;
G2L["3b2"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3b2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.TextButton.LocalScript
G2L["3b3"] = Instance.new("LocalScript", G2L["3b2"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.TextButton.ModuleScript
G2L["3b4"] = Instance.new("ModuleScript", G2L["3b2"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.TextButton.UICorner
G2L["3b5"] = Instance.new("UICorner", G2L["3b2"]);
G2L["3b5"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.TextButton.UIAspectRatioConstraint
G2L["3b6"] = Instance.new("UIAspectRatioConstraint", G2L["3b2"]);
G2L["3b6"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.Carget
G2L["3b7"] = Instance.new("Frame", G2L["3b0"]);
G2L["3b7"]["BorderSizePixel"] = 0;
G2L["3b7"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["3b7"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["3b7"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["3b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3b7"]["Name"] = [[Carget]];
G2L["3b7"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.Carget.UICorner
G2L["3b8"] = Instance.new("UICorner", G2L["3b7"]);
G2L["3b8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.Carget.UIAspectRatioConstraint
G2L["3b9"] = Instance.new("UIAspectRatioConstraint", G2L["3b7"]);
G2L["3b9"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.UIAspectRatioConstraint
G2L["3ba"] = Instance.new("UIAspectRatioConstraint", G2L["3b0"]);
G2L["3ba"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.Enabled
G2L["3bb"] = Instance.new("BoolValue", G2L["3b0"]);
G2L["3bb"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Teamcheck
G2L["3bc"] = Instance.new("BoolValue", G2L["3ac"]);
G2L["3bc"]["Name"] = [[Teamcheck]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.ColorVal
G2L["3bd"] = Instance.new("Color3Value", G2L["3ac"]);
G2L["3bd"]["Name"] = [[ColorVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TransparencyVal
G2L["3be"] = Instance.new("NumberValue", G2L["3ac"]);
G2L["3be"]["Name"] = [[TransparencyVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.ThicknessVal
G2L["3bf"] = Instance.new("NumberValue", G2L["3ac"]);
G2L["3bf"]["Name"] = [[ThicknessVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Bypass1
G2L["3c0"] = Instance.new("BoolValue", G2L["3ac"]);
G2L["3c0"]["Name"] = [[Bypass1]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Bypass2
G2L["3c1"] = Instance.new("BoolValue", G2L["3ac"]);
G2L["3c1"]["Name"] = [[Bypass2]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextBox
G2L["3c2"] = Instance.new("TextBox", G2L["3ac"]);
G2L["3c2"]["PlaceholderColor3"] = Color3.fromRGB(180, 180, 180);
G2L["3c2"]["BorderSizePixel"] = 0;
G2L["3c2"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["3c2"]["TextSize"] = 14;
G2L["3c2"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["3c2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3c2"]["PlaceholderText"] = [[Speed (2)]];
G2L["3c2"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["3c2"]["Position"] = UDim2.new(0.00493, 0, 0.70502, 0);
G2L["3c2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c2"]["Text"] = [[]];
G2L["3c2"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextBox.LocalScript
G2L["3c3"] = Instance.new("LocalScript", G2L["3c2"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.FlySpeed
G2L["3c4"] = Instance.new("NumberValue", G2L["3ac"]);
G2L["3c4"]["Name"] = [[FlySpeed]];
G2L["3c4"]["Value"] = 2;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextLabel
G2L["3c5"] = Instance.new("TextLabel", G2L["3ac"]);
G2L["3c5"]["TextWrapped"] = true;
G2L["3c5"]["BorderSizePixel"] = 0;
G2L["3c5"]["TextSize"] = 14;
G2L["3c5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["3c5"]["TextScaled"] = true;
G2L["3c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3c5"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["3c5"]["BackgroundTransparency"] = 1;
G2L["3c5"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["3c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c5"]["Text"] = [[Bypass1]];
G2L["3c5"]["Position"] = UDim2.new(0.032, 0, 0.28906, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable
G2L["3c6"] = Instance.new("Frame", G2L["3ac"]);
G2L["3c6"]["BorderSizePixel"] = 0;
G2L["3c6"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["3c6"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["3c6"]["Position"] = UDim2.new(0.753, 0, 0.29687, 0);
G2L["3c6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c6"]["Name"] = [[Enable]];
G2L["3c6"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.UICorner
G2L["3c7"] = Instance.new("UICorner", G2L["3c6"]);
G2L["3c7"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.TextButton
G2L["3c8"] = Instance.new("TextButton", G2L["3c6"]);
G2L["3c8"]["BorderSizePixel"] = 0;
G2L["3c8"]["TextTransparency"] = 1;
G2L["3c8"]["TextSize"] = 14;
G2L["3c8"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3c8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3c8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3c8"]["BackgroundTransparency"] = 1;
G2L["3c8"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3c8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.TextButton.LocalScript
G2L["3c9"] = Instance.new("LocalScript", G2L["3c8"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.TextButton.UICorner
G2L["3ca"] = Instance.new("UICorner", G2L["3c8"]);
G2L["3ca"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.TextButton.UIAspectRatioConstraint
G2L["3cb"] = Instance.new("UIAspectRatioConstraint", G2L["3c8"]);
G2L["3cb"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.Carget
G2L["3cc"] = Instance.new("Frame", G2L["3c6"]);
G2L["3cc"]["BorderSizePixel"] = 0;
G2L["3cc"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["3cc"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["3cc"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["3cc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3cc"]["Name"] = [[Carget]];
G2L["3cc"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.Carget.UICorner
G2L["3cd"] = Instance.new("UICorner", G2L["3cc"]);
G2L["3cd"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.Carget.UIAspectRatioConstraint
G2L["3ce"] = Instance.new("UIAspectRatioConstraint", G2L["3cc"]);
G2L["3ce"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.UIAspectRatioConstraint
G2L["3cf"] = Instance.new("UIAspectRatioConstraint", G2L["3c6"]);
G2L["3cf"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.Enabled
G2L["3d0"] = Instance.new("BoolValue", G2L["3c6"]);
G2L["3d0"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextBox
G2L["3d1"] = Instance.new("TextBox", G2L["3ac"]);
G2L["3d1"]["PlaceholderColor3"] = Color3.fromRGB(180, 180, 180);
G2L["3d1"]["BorderSizePixel"] = 0;
G2L["3d1"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["3d1"]["TextSize"] = 14;
G2L["3d1"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["3d1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d1"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3d1"]["PlaceholderText"] = [[BIND (NONE)]];
G2L["3d1"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["3d1"]["Position"] = UDim2.new(-0.00003, 0, 0.86442, 0);
G2L["3d1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d1"]["Text"] = [[Bind (None)]];
G2L["3d1"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextBox.TextButton
G2L["3d2"] = Instance.new("TextButton", G2L["3d1"]);
G2L["3d2"]["BorderSizePixel"] = 0;
G2L["3d2"]["TextTransparency"] = 1;
G2L["3d2"]["TextSize"] = 14;
G2L["3d2"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3d2"]["BackgroundTransparency"] = 1;
G2L["3d2"]["Size"] = UDim2.new(0.99281, 0, 1.02118, 0);
G2L["3d2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d2"]["Position"] = UDim2.new(0.00003, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextBox.TextButton.LocalScript
G2L["3d3"] = Instance.new("LocalScript", G2L["3d2"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack
G2L["3d4"] = Instance.new("Frame", G2L["330"]);
G2L["3d4"]["BorderSizePixel"] = 0;
G2L["3d4"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["3d4"]["Size"] = UDim2.new(0.49223, 0, 0.275, 0);
G2L["3d4"]["Position"] = UDim2.new(-0.00259, 0, -0.00293, 0);
G2L["3d4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d4"]["Name"] = [[Speedhack]];
G2L["3d4"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextLabel
G2L["3d5"] = Instance.new("TextLabel", G2L["3d4"]);
G2L["3d5"]["TextWrapped"] = true;
G2L["3d5"]["BorderSizePixel"] = 0;
G2L["3d5"]["TextSize"] = 14;
G2L["3d5"]["TextScaled"] = true;
G2L["3d5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3d5"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["3d5"]["BackgroundTransparency"] = 1;
G2L["3d5"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["3d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d5"]["Text"] = [[Speedhack]];
G2L["3d5"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextLabel
G2L["3d6"] = Instance.new("TextLabel", G2L["3d4"]);
G2L["3d6"]["TextWrapped"] = true;
G2L["3d6"]["BorderSizePixel"] = 0;
G2L["3d6"]["TextSize"] = 14;
G2L["3d6"]["TextScaled"] = true;
G2L["3d6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d6"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3d6"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["3d6"]["BackgroundTransparency"] = 1;
G2L["3d6"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["3d6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d6"]["Text"] = [[________________________________________]];
G2L["3d6"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextLabel
G2L["3d7"] = Instance.new("TextLabel", G2L["3d4"]);
G2L["3d7"]["TextWrapped"] = true;
G2L["3d7"]["BorderSizePixel"] = 0;
G2L["3d7"]["TextSize"] = 14;
G2L["3d7"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["3d7"]["TextScaled"] = true;
G2L["3d7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d7"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3d7"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["3d7"]["BackgroundTransparency"] = 1;
G2L["3d7"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["3d7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d7"]["Text"] = [[Enable]];
G2L["3d7"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1
G2L["3d8"] = Instance.new("Frame", G2L["3d4"]);
G2L["3d8"]["BorderSizePixel"] = 0;
G2L["3d8"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["3d8"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["3d8"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["3d8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d8"]["Name"] = [[Enable1]];
G2L["3d8"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.UICorner
G2L["3d9"] = Instance.new("UICorner", G2L["3d8"]);
G2L["3d9"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.TextButton
G2L["3da"] = Instance.new("TextButton", G2L["3d8"]);
G2L["3da"]["BorderSizePixel"] = 0;
G2L["3da"]["TextTransparency"] = 1;
G2L["3da"]["TextSize"] = 14;
G2L["3da"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3da"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3da"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3da"]["BackgroundTransparency"] = 1;
G2L["3da"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3da"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.TextButton.LocalScript
G2L["3db"] = Instance.new("LocalScript", G2L["3da"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.TextButton.UICorner
G2L["3dc"] = Instance.new("UICorner", G2L["3da"]);
G2L["3dc"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.TextButton.UIAspectRatioConstraint
G2L["3dd"] = Instance.new("UIAspectRatioConstraint", G2L["3da"]);
G2L["3dd"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.Carget
G2L["3de"] = Instance.new("Frame", G2L["3d8"]);
G2L["3de"]["BorderSizePixel"] = 0;
G2L["3de"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["3de"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["3de"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["3de"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3de"]["Name"] = [[Carget]];
G2L["3de"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.Carget.UICorner
G2L["3df"] = Instance.new("UICorner", G2L["3de"]);
G2L["3df"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.Carget.UIAspectRatioConstraint
G2L["3e0"] = Instance.new("UIAspectRatioConstraint", G2L["3de"]);
G2L["3e0"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.UIAspectRatioConstraint
G2L["3e1"] = Instance.new("UIAspectRatioConstraint", G2L["3d8"]);
G2L["3e1"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.Enabled
G2L["3e2"] = Instance.new("BoolValue", G2L["3d8"]);
G2L["3e2"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Teamcheck
G2L["3e3"] = Instance.new("BoolValue", G2L["3d4"]);
G2L["3e3"]["Name"] = [[Teamcheck]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextLabel
G2L["3e4"] = Instance.new("TextLabel", G2L["3d4"]);
G2L["3e4"]["TextWrapped"] = true;
G2L["3e4"]["BorderSizePixel"] = 0;
G2L["3e4"]["TextSize"] = 14;
G2L["3e4"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["3e4"]["TextScaled"] = true;
G2L["3e4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3e4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3e4"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["3e4"]["BackgroundTransparency"] = 1;
G2L["3e4"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["3e4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3e4"]["Text"] = [[Bypass1]];
G2L["3e4"]["Position"] = UDim2.new(0.032, 0, 0.28906, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable
G2L["3e5"] = Instance.new("Frame", G2L["3d4"]);
G2L["3e5"]["BorderSizePixel"] = 0;
G2L["3e5"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["3e5"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["3e5"]["Position"] = UDim2.new(0.753, 0, 0.29687, 0);
G2L["3e5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3e5"]["Name"] = [[Enable]];
G2L["3e5"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.UICorner
G2L["3e6"] = Instance.new("UICorner", G2L["3e5"]);
G2L["3e6"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton
G2L["3e7"] = Instance.new("TextButton", G2L["3e5"]);
G2L["3e7"]["BorderSizePixel"] = 0;
G2L["3e7"]["TextTransparency"] = 1;
G2L["3e7"]["TextSize"] = 14;
G2L["3e7"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3e7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3e7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3e7"]["BackgroundTransparency"] = 1;
G2L["3e7"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3e7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton.LocalScript
G2L["3e8"] = Instance.new("LocalScript", G2L["3e7"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton.UICorner
G2L["3e9"] = Instance.new("UICorner", G2L["3e7"]);
G2L["3e9"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton.UIAspectRatioConstraint
G2L["3ea"] = Instance.new("UIAspectRatioConstraint", G2L["3e7"]);
G2L["3ea"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.Carget
G2L["3eb"] = Instance.new("Frame", G2L["3e5"]);
G2L["3eb"]["BorderSizePixel"] = 0;
G2L["3eb"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["3eb"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["3eb"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["3eb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3eb"]["Name"] = [[Carget]];
G2L["3eb"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.Carget.UICorner
G2L["3ec"] = Instance.new("UICorner", G2L["3eb"]);
G2L["3ec"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.Carget.UIAspectRatioConstraint
G2L["3ed"] = Instance.new("UIAspectRatioConstraint", G2L["3eb"]);
G2L["3ed"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.UIAspectRatioConstraint
G2L["3ee"] = Instance.new("UIAspectRatioConstraint", G2L["3e5"]);
G2L["3ee"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.Enabled
G2L["3ef"] = Instance.new("BoolValue", G2L["3e5"]);
G2L["3ef"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.ColorVal
G2L["3f0"] = Instance.new("Color3Value", G2L["3d4"]);
G2L["3f0"]["Name"] = [[ColorVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TransparencyVal
G2L["3f1"] = Instance.new("NumberValue", G2L["3d4"]);
G2L["3f1"]["Name"] = [[TransparencyVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.ThicknessVal
G2L["3f2"] = Instance.new("NumberValue", G2L["3d4"]);
G2L["3f2"]["Name"] = [[ThicknessVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Bypass1
G2L["3f3"] = Instance.new("BoolValue", G2L["3d4"]);
G2L["3f3"]["Name"] = [[Bypass1]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Bypass2
G2L["3f4"] = Instance.new("BoolValue", G2L["3d4"]);
G2L["3f4"]["Name"] = [[Bypass2]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextLabel
G2L["3f5"] = Instance.new("TextLabel", G2L["3d4"]);
G2L["3f5"]["TextWrapped"] = true;
G2L["3f5"]["BorderSizePixel"] = 0;
G2L["3f5"]["TextSize"] = 14;
G2L["3f5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["3f5"]["TextScaled"] = true;
G2L["3f5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3f5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3f5"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["3f5"]["BackgroundTransparency"] = 1;
G2L["3f5"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["3f5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f5"]["Text"] = [[Bypass2]];
G2L["3f5"]["Position"] = UDim2.new(0.032, 0, 0.39062, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable
G2L["3f6"] = Instance.new("Frame", G2L["3d4"]);
G2L["3f6"]["BorderSizePixel"] = 0;
G2L["3f6"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["3f6"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["3f6"]["Position"] = UDim2.new(0.753, 0, 0.39844, 0);
G2L["3f6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f6"]["Name"] = [[Enable]];
G2L["3f6"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.UICorner
G2L["3f7"] = Instance.new("UICorner", G2L["3f6"]);
G2L["3f7"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton
G2L["3f8"] = Instance.new("TextButton", G2L["3f6"]);
G2L["3f8"]["BorderSizePixel"] = 0;
G2L["3f8"]["TextTransparency"] = 1;
G2L["3f8"]["TextSize"] = 14;
G2L["3f8"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3f8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3f8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3f8"]["BackgroundTransparency"] = 1;
G2L["3f8"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3f8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton.LocalScript
G2L["3f9"] = Instance.new("LocalScript", G2L["3f8"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton.UICorner
G2L["3fa"] = Instance.new("UICorner", G2L["3f8"]);
G2L["3fa"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton.UIAspectRatioConstraint
G2L["3fb"] = Instance.new("UIAspectRatioConstraint", G2L["3f8"]);
G2L["3fb"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.Carget
G2L["3fc"] = Instance.new("Frame", G2L["3f6"]);
G2L["3fc"]["BorderSizePixel"] = 0;
G2L["3fc"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["3fc"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["3fc"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["3fc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3fc"]["Name"] = [[Carget]];
G2L["3fc"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.Carget.UICorner
G2L["3fd"] = Instance.new("UICorner", G2L["3fc"]);
G2L["3fd"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.Carget.UIAspectRatioConstraint
G2L["3fe"] = Instance.new("UIAspectRatioConstraint", G2L["3fc"]);
G2L["3fe"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.UIAspectRatioConstraint
G2L["3ff"] = Instance.new("UIAspectRatioConstraint", G2L["3f6"]);
G2L["3ff"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.Enabled
G2L["400"] = Instance.new("BoolValue", G2L["3f6"]);
G2L["400"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextBox
G2L["401"] = Instance.new("TextBox", G2L["3d4"]);
G2L["401"]["BorderSizePixel"] = 0;
G2L["401"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["401"]["TextSize"] = 14;
G2L["401"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["401"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["401"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["401"]["PlaceholderText"] = [[Speed (16)]];
G2L["401"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["401"]["Position"] = UDim2.new(-0.00003, 0, 0.67603, 0);
G2L["401"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["401"]["Text"] = [[]];
G2L["401"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextBox.LocalScript
G2L["402"] = Instance.new("LocalScript", G2L["401"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextBox2
G2L["403"] = Instance.new("TextBox", G2L["3d4"]);
G2L["403"]["Name"] = [[TextBox2]];
G2L["403"]["BorderSizePixel"] = 0;
G2L["403"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["403"]["TextSize"] = 14;
G2L["403"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["403"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["403"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["403"]["PlaceholderText"] = [[Bypass2Speed (1)]];
G2L["403"]["Size"] = UDim2.new(1, 0, 0.15625, 0);
G2L["403"]["Position"] = UDim2.new(0, 0, 0.83228, 0);
G2L["403"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["403"]["Text"] = [[]];
G2L["403"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextBox2.LocalScript
G2L["404"] = Instance.new("LocalScript", G2L["403"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe
G2L["405"] = Instance.new("Frame", G2L["330"]);
G2L["405"]["BorderSizePixel"] = 0;
G2L["405"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["405"]["Size"] = UDim2.new(0.49223, 0, 0.275, 0);
G2L["405"]["Position"] = UDim2.new(-0.003, 0, 0.558, 0);
G2L["405"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["405"]["Name"] = [[TargetStrafe]];
G2L["405"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.TextLabel
G2L["406"] = Instance.new("TextLabel", G2L["405"]);
G2L["406"]["TextWrapped"] = true;
G2L["406"]["BorderSizePixel"] = 0;
G2L["406"]["TextSize"] = 14;
G2L["406"]["TextScaled"] = true;
G2L["406"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["406"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["406"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["406"]["BackgroundTransparency"] = 1;
G2L["406"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["406"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["406"]["Text"] = [[TargetStrafe]];
G2L["406"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.TextLabel
G2L["407"] = Instance.new("TextLabel", G2L["405"]);
G2L["407"]["TextWrapped"] = true;
G2L["407"]["BorderSizePixel"] = 0;
G2L["407"]["TextSize"] = 14;
G2L["407"]["TextScaled"] = true;
G2L["407"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["407"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["407"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["407"]["BackgroundTransparency"] = 1;
G2L["407"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["407"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["407"]["Text"] = [[________________________________________]];
G2L["407"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.TextLabel
G2L["408"] = Instance.new("TextLabel", G2L["405"]);
G2L["408"]["TextWrapped"] = true;
G2L["408"]["BorderSizePixel"] = 0;
G2L["408"]["TextSize"] = 14;
G2L["408"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["408"]["TextScaled"] = true;
G2L["408"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["408"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["408"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["408"]["BackgroundTransparency"] = 1;
G2L["408"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["408"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["408"]["Text"] = [[Enable]];
G2L["408"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1
G2L["409"] = Instance.new("Frame", G2L["405"]);
G2L["409"]["BorderSizePixel"] = 0;
G2L["409"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["409"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["409"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["409"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["409"]["Name"] = [[Enable1]];
G2L["409"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.UICorner
G2L["40a"] = Instance.new("UICorner", G2L["409"]);
G2L["40a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton
G2L["40b"] = Instance.new("TextButton", G2L["409"]);
G2L["40b"]["BorderSizePixel"] = 0;
G2L["40b"]["TextTransparency"] = 1;
G2L["40b"]["TextSize"] = 14;
G2L["40b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["40b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["40b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["40b"]["BackgroundTransparency"] = 1;
G2L["40b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["40b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton.LocalScript
G2L["40c"] = Instance.new("LocalScript", G2L["40b"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton.ModuleScript
G2L["40d"] = Instance.new("ModuleScript", G2L["40b"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton.UICorner
G2L["40e"] = Instance.new("UICorner", G2L["40b"]);
G2L["40e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton.UIAspectRatioConstraint
G2L["40f"] = Instance.new("UIAspectRatioConstraint", G2L["40b"]);
G2L["40f"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.Carget
G2L["410"] = Instance.new("Frame", G2L["409"]);
G2L["410"]["BorderSizePixel"] = 0;
G2L["410"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["410"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["410"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["410"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["410"]["Name"] = [[Carget]];
G2L["410"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.Carget.UICorner
G2L["411"] = Instance.new("UICorner", G2L["410"]);
G2L["411"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.Carget.UIAspectRatioConstraint
G2L["412"] = Instance.new("UIAspectRatioConstraint", G2L["410"]);
G2L["412"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.UIAspectRatioConstraint
G2L["413"] = Instance.new("UIAspectRatioConstraint", G2L["409"]);
G2L["413"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.Enabled
G2L["414"] = Instance.new("BoolValue", G2L["409"]);
G2L["414"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.SpeedTextBox
G2L["415"] = Instance.new("TextBox", G2L["405"]);
G2L["415"]["Name"] = [[SpeedTextBox]];
G2L["415"]["BorderSizePixel"] = 0;
G2L["415"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["415"]["TextSize"] = 14;
G2L["415"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["415"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["415"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["415"]["PlaceholderText"] = [[Speed (1-100000)]];
G2L["415"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["415"]["Position"] = UDim2.new(-0.00003, 0, 0.844, 0);
G2L["415"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["415"]["Text"] = [[]];
G2L["415"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.RadiusTextBox
G2L["416"] = Instance.new("TextBox", G2L["405"]);
G2L["416"]["Name"] = [[RadiusTextBox]];
G2L["416"]["BorderSizePixel"] = 0;
G2L["416"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["416"]["TextSize"] = 14;
G2L["416"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["416"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["416"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["416"]["PlaceholderText"] = [[Radius (1-10000)]];
G2L["416"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["416"]["Position"] = UDim2.new(-0.00003, 0, 0.69826, 0);
G2L["416"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["416"]["Text"] = [[]];
G2L["416"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.PlayerTextBox
G2L["417"] = Instance.new("TextBox", G2L["405"]);
G2L["417"]["Name"] = [[PlayerTextBox]];
G2L["417"]["BorderSizePixel"] = 0;
G2L["417"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["417"]["TextSize"] = 14;
G2L["417"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["417"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["417"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["417"]["PlaceholderText"] = [[Player]];
G2L["417"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["417"]["Position"] = UDim2.new(-0.00003, 0, 0.54186, 0);
G2L["417"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["417"]["Text"] = [[]];
G2L["417"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.TextLabel
G2L["418"] = Instance.new("TextLabel", G2L["405"]);
G2L["418"]["TextWrapped"] = true;
G2L["418"]["BorderSizePixel"] = 0;
G2L["418"]["TextSize"] = 14;
G2L["418"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["418"]["TextScaled"] = true;
G2L["418"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["418"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["418"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["418"]["BackgroundTransparency"] = 1;
G2L["418"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["418"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["418"]["Text"] = [[Loop]];
G2L["418"]["Position"] = UDim2.new(0.03158, 0, 0.28738, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1
G2L["419"] = Instance.new("Frame", G2L["405"]);
G2L["419"]["BorderSizePixel"] = 0;
G2L["419"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["419"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["419"]["Position"] = UDim2.new(0.75263, 0, 0.29519, 0);
G2L["419"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["419"]["Name"] = [[Enable1]];
G2L["419"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.UICorner
G2L["41a"] = Instance.new("UICorner", G2L["419"]);
G2L["41a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton
G2L["41b"] = Instance.new("TextButton", G2L["419"]);
G2L["41b"]["BorderSizePixel"] = 0;
G2L["41b"]["TextTransparency"] = 1;
G2L["41b"]["TextSize"] = 14;
G2L["41b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["41b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["41b"]["BackgroundTransparency"] = 1;
G2L["41b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["41b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton.LocalScript
G2L["41c"] = Instance.new("LocalScript", G2L["41b"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton.UICorner
G2L["41d"] = Instance.new("UICorner", G2L["41b"]);
G2L["41d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton.UIAspectRatioConstraint
G2L["41e"] = Instance.new("UIAspectRatioConstraint", G2L["41b"]);
G2L["41e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.Carget
G2L["41f"] = Instance.new("Frame", G2L["419"]);
G2L["41f"]["BorderSizePixel"] = 0;
G2L["41f"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["41f"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["41f"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["41f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41f"]["Name"] = [[Carget]];
G2L["41f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.Carget.UICorner
G2L["420"] = Instance.new("UICorner", G2L["41f"]);
G2L["420"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.Carget.UIAspectRatioConstraint
G2L["421"] = Instance.new("UIAspectRatioConstraint", G2L["41f"]);
G2L["421"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.UIAspectRatioConstraint
G2L["422"] = Instance.new("UIAspectRatioConstraint", G2L["419"]);
G2L["422"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.Enabled
G2L["423"] = Instance.new("BoolValue", G2L["419"]);
G2L["423"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.LoopVal
G2L["424"] = Instance.new("BoolValue", G2L["405"]);
G2L["424"]["Name"] = [[LoopVal]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner
G2L["425"] = Instance.new("Frame", G2L["330"]);
G2L["425"]["BorderSizePixel"] = 0;
G2L["425"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["425"]["Size"] = UDim2.new(0.49223, 0, 0.275, 0);
G2L["425"]["Position"] = UDim2.new(0.506, 0, 0.558, 0);
G2L["425"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["425"]["Name"] = [[Spinner]];
G2L["425"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.TextLabel
G2L["426"] = Instance.new("TextLabel", G2L["425"]);
G2L["426"]["TextWrapped"] = true;
G2L["426"]["BorderSizePixel"] = 0;
G2L["426"]["TextSize"] = 14;
G2L["426"]["TextScaled"] = true;
G2L["426"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["426"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["426"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["426"]["BackgroundTransparency"] = 1;
G2L["426"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["426"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["426"]["Text"] = [[Spinner]];
G2L["426"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.TextLabel
G2L["427"] = Instance.new("TextLabel", G2L["425"]);
G2L["427"]["TextWrapped"] = true;
G2L["427"]["BorderSizePixel"] = 0;
G2L["427"]["TextSize"] = 14;
G2L["427"]["TextScaled"] = true;
G2L["427"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["427"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["427"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["427"]["BackgroundTransparency"] = 1;
G2L["427"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["427"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["427"]["Text"] = [[________________________________________]];
G2L["427"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.TextLabel
G2L["428"] = Instance.new("TextLabel", G2L["425"]);
G2L["428"]["TextWrapped"] = true;
G2L["428"]["BorderSizePixel"] = 0;
G2L["428"]["TextSize"] = 14;
G2L["428"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["428"]["TextScaled"] = true;
G2L["428"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["428"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["428"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["428"]["BackgroundTransparency"] = 1;
G2L["428"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["428"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["428"]["Text"] = [[Enable]];
G2L["428"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1
G2L["429"] = Instance.new("Frame", G2L["425"]);
G2L["429"]["BorderSizePixel"] = 0;
G2L["429"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["429"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["429"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["429"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["429"]["Name"] = [[Enable1]];
G2L["429"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.UICorner
G2L["42a"] = Instance.new("UICorner", G2L["429"]);
G2L["42a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.TextButton
G2L["42b"] = Instance.new("TextButton", G2L["429"]);
G2L["42b"]["BorderSizePixel"] = 0;
G2L["42b"]["TextTransparency"] = 1;
G2L["42b"]["TextSize"] = 14;
G2L["42b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["42b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["42b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["42b"]["BackgroundTransparency"] = 1;
G2L["42b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["42b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.TextButton.LocalScript
G2L["42c"] = Instance.new("LocalScript", G2L["42b"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.TextButton.ModuleScript
G2L["42d"] = Instance.new("ModuleScript", G2L["42b"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.TextButton.ModuleScript.power
G2L["42e"] = Instance.new("IntValue", G2L["42d"]);
G2L["42e"]["Name"] = [[power]];
G2L["42e"]["Value"] = 180;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.TextButton.UICorner
G2L["42f"] = Instance.new("UICorner", G2L["42b"]);
G2L["42f"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.TextButton.UIAspectRatioConstraint
G2L["430"] = Instance.new("UIAspectRatioConstraint", G2L["42b"]);
G2L["430"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.Carget
G2L["431"] = Instance.new("Frame", G2L["429"]);
G2L["431"]["BorderSizePixel"] = 0;
G2L["431"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["431"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["431"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["431"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["431"]["Name"] = [[Carget]];
G2L["431"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.Carget.UICorner
G2L["432"] = Instance.new("UICorner", G2L["431"]);
G2L["432"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.Carget.UIAspectRatioConstraint
G2L["433"] = Instance.new("UIAspectRatioConstraint", G2L["431"]);
G2L["433"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.UIAspectRatioConstraint
G2L["434"] = Instance.new("UIAspectRatioConstraint", G2L["429"]);
G2L["434"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.Enabled
G2L["435"] = Instance.new("BoolValue", G2L["429"]);
G2L["435"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.SpeedTextBox
G2L["436"] = Instance.new("TextBox", G2L["425"]);
G2L["436"]["Name"] = [[SpeedTextBox]];
G2L["436"]["BorderSizePixel"] = 0;
G2L["436"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["436"]["TextSize"] = 14;
G2L["436"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["436"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["436"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["436"]["PlaceholderText"] = [[Speed (25)]];
G2L["436"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["436"]["Position"] = UDim2.new(-0.00996, 0, 0.36413, 0);
G2L["436"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["436"]["Text"] = [[]];
G2L["436"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.SpeedTextBox.LocalScript
G2L["437"] = Instance.new("LocalScript", G2L["436"]);



-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Value
G2L["438"] = Instance.new("NumberValue", G2L["425"]);
G2L["438"]["Value"] = 25;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.TextBox
G2L["439"] = Instance.new("TextBox", G2L["425"]);
G2L["439"]["PlaceholderColor3"] = Color3.fromRGB(180, 180, 180);
G2L["439"]["BorderSizePixel"] = 0;
G2L["439"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["439"]["TextSize"] = 14;
G2L["439"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["439"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["439"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["439"]["PlaceholderText"] = [[BIND (NONE)]];
G2L["439"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["439"]["Position"] = UDim2.new(-0.005, 0, 0.52318, 0);
G2L["439"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["439"]["Text"] = [[Bind (None)]];
G2L["439"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.TextBox.TextButton
G2L["43a"] = Instance.new("TextButton", G2L["439"]);
G2L["43a"]["BorderSizePixel"] = 0;
G2L["43a"]["TextTransparency"] = 1;
G2L["43a"]["TextSize"] = 14;
G2L["43a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["43a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["43a"]["BackgroundTransparency"] = 1;
G2L["43a"]["Size"] = UDim2.new(0.99281, 0, 1.02118, 0);
G2L["43a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43a"]["Position"] = UDim2.new(0.00003, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.TextBox.TextButton.LocalScript
G2L["43b"] = Instance.new("LocalScript", G2L["43a"]);



-- StarterGui.xescriptsXD.Frame.Settings
G2L["43c"] = Instance.new("Frame", G2L["11b"]);
G2L["43c"]["Visible"] = false;
G2L["43c"]["BorderSizePixel"] = 0;
G2L["43c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43c"]["Size"] = UDim2.new(0.68078, 0, 0.81384, 0);
G2L["43c"]["Position"] = UDim2.new(0.29277, 0, 0.14558, 0);
G2L["43c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43c"]["Name"] = [[Settings]];
G2L["43c"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Settings.LocalScript
G2L["43d"] = Instance.new("LocalScript", G2L["43c"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame
G2L["43e"] = Instance.new("ScrollingFrame", G2L["43c"]);
G2L["43e"]["Active"] = true;
G2L["43e"]["BorderSizePixel"] = 0;
G2L["43e"]["CanvasSize"] = UDim2.new(0, 0, 3, 0);
G2L["43e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["43e"]["ScrollBarImageTransparency"] = 1;
G2L["43e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["43e"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43e"]["ScrollBarThickness"] = 3;
G2L["43e"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects
G2L["43f"] = Instance.new("Frame", G2L["43e"]);
G2L["43f"]["BorderSizePixel"] = 0;
G2L["43f"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["43f"]["Size"] = UDim2.new(0.49223, 0, 0.275, 0);
G2L["43f"]["Position"] = UDim2.new(0.50572, 0, -0.003, 0);
G2L["43f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["43f"]["Name"] = [[Effects]];
G2L["43f"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.TextLabel
G2L["440"] = Instance.new("TextLabel", G2L["43f"]);
G2L["440"]["TextWrapped"] = true;
G2L["440"]["BorderSizePixel"] = 0;
G2L["440"]["TextSize"] = 14;
G2L["440"]["TextScaled"] = true;
G2L["440"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["440"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["440"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["440"]["BackgroundTransparency"] = 1;
G2L["440"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["440"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["440"]["Text"] = [[Effects]];
G2L["440"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.TextLabel
G2L["441"] = Instance.new("TextLabel", G2L["43f"]);
G2L["441"]["TextWrapped"] = true;
G2L["441"]["BorderSizePixel"] = 0;
G2L["441"]["TextSize"] = 14;
G2L["441"]["TextScaled"] = true;
G2L["441"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["441"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["441"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["441"]["BackgroundTransparency"] = 1;
G2L["441"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["441"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["441"]["Text"] = [[________________________________________]];
G2L["441"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.TextLabel
G2L["442"] = Instance.new("TextLabel", G2L["43f"]);
G2L["442"]["TextWrapped"] = true;
G2L["442"]["BorderSizePixel"] = 0;
G2L["442"]["TextSize"] = 14;
G2L["442"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["442"]["TextScaled"] = true;
G2L["442"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["442"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["442"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["442"]["BackgroundTransparency"] = 1;
G2L["442"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["442"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["442"]["Text"] = [[Particles]];
G2L["442"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1
G2L["443"] = Instance.new("Frame", G2L["43f"]);
G2L["443"]["BorderSizePixel"] = 0;
G2L["443"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["443"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["443"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["443"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["443"]["Name"] = [[Enable1]];
G2L["443"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.UICorner
G2L["444"] = Instance.new("UICorner", G2L["443"]);
G2L["444"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.TextButton
G2L["445"] = Instance.new("TextButton", G2L["443"]);
G2L["445"]["BorderSizePixel"] = 0;
G2L["445"]["TextTransparency"] = 1;
G2L["445"]["TextSize"] = 14;
G2L["445"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["445"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["445"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["445"]["BackgroundTransparency"] = 1;
G2L["445"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["445"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.TextButton.LocalScript
G2L["446"] = Instance.new("LocalScript", G2L["445"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.TextButton.UICorner
G2L["447"] = Instance.new("UICorner", G2L["445"]);
G2L["447"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.TextButton.UIAspectRatioConstraint
G2L["448"] = Instance.new("UIAspectRatioConstraint", G2L["445"]);
G2L["448"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.Carget
G2L["449"] = Instance.new("Frame", G2L["443"]);
G2L["449"]["BorderSizePixel"] = 0;
G2L["449"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["449"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["449"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["449"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["449"]["Name"] = [[Carget]];
G2L["449"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.Carget.UICorner
G2L["44a"] = Instance.new("UICorner", G2L["449"]);
G2L["44a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.Carget.UIAspectRatioConstraint
G2L["44b"] = Instance.new("UIAspectRatioConstraint", G2L["449"]);
G2L["44b"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.UIAspectRatioConstraint
G2L["44c"] = Instance.new("UIAspectRatioConstraint", G2L["443"]);
G2L["44c"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.Enabled
G2L["44d"] = Instance.new("BoolValue", G2L["443"]);
G2L["44d"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.TextLabel
G2L["44e"] = Instance.new("TextLabel", G2L["43f"]);
G2L["44e"]["TextWrapped"] = true;
G2L["44e"]["BorderSizePixel"] = 0;
G2L["44e"]["TextSize"] = 14;
G2L["44e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["44e"]["TextScaled"] = true;
G2L["44e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["44e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["44e"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["44e"]["BackgroundTransparency"] = 1;
G2L["44e"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["44e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["44e"]["Text"] = [[Vignette]];
G2L["44e"]["Position"] = UDim2.new(0.032, 0, 0.28906, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable
G2L["44f"] = Instance.new("Frame", G2L["43f"]);
G2L["44f"]["BorderSizePixel"] = 0;
G2L["44f"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["44f"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["44f"]["Position"] = UDim2.new(0.753, 0, 0.29687, 0);
G2L["44f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["44f"]["Name"] = [[Enable]];
G2L["44f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.UICorner
G2L["450"] = Instance.new("UICorner", G2L["44f"]);
G2L["450"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton
G2L["451"] = Instance.new("TextButton", G2L["44f"]);
G2L["451"]["BorderSizePixel"] = 0;
G2L["451"]["TextTransparency"] = 1;
G2L["451"]["TextSize"] = 14;
G2L["451"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["451"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["451"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["451"]["BackgroundTransparency"] = 1;
G2L["451"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["451"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.LocalScript
G2L["452"] = Instance.new("LocalScript", G2L["451"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.UICorner
G2L["453"] = Instance.new("UICorner", G2L["451"]);
G2L["453"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.UIAspectRatioConstraint
G2L["454"] = Instance.new("UIAspectRatioConstraint", G2L["451"]);
G2L["454"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Carget
G2L["455"] = Instance.new("Frame", G2L["44f"]);
G2L["455"]["BorderSizePixel"] = 0;
G2L["455"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["455"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["455"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["455"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["455"]["Name"] = [[Carget]];
G2L["455"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Carget.UICorner
G2L["456"] = Instance.new("UICorner", G2L["455"]);
G2L["456"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Carget.UIAspectRatioConstraint
G2L["457"] = Instance.new("UIAspectRatioConstraint", G2L["455"]);
G2L["457"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.UIAspectRatioConstraint
G2L["458"] = Instance.new("UIAspectRatioConstraint", G2L["44f"]);
G2L["458"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Enabled
G2L["459"] = Instance.new("BoolValue", G2L["44f"]);
G2L["459"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable
G2L["45a"] = Instance.new("Frame", G2L["43f"]);
G2L["45a"]["BorderSizePixel"] = 0;
G2L["45a"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["45a"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["45a"]["Position"] = UDim2.new(0.753, 0, 0.3964, 0);
G2L["45a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["45a"]["Name"] = [[Enable]];
G2L["45a"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.UICorner
G2L["45b"] = Instance.new("UICorner", G2L["45a"]);
G2L["45b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton
G2L["45c"] = Instance.new("TextButton", G2L["45a"]);
G2L["45c"]["BorderSizePixel"] = 0;
G2L["45c"]["TextTransparency"] = 1;
G2L["45c"]["TextSize"] = 14;
G2L["45c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["45c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["45c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["45c"]["BackgroundTransparency"] = 1;
G2L["45c"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["45c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.LocalScript
G2L["45d"] = Instance.new("LocalScript", G2L["45c"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.UICorner
G2L["45e"] = Instance.new("UICorner", G2L["45c"]);
G2L["45e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.UIAspectRatioConstraint
G2L["45f"] = Instance.new("UIAspectRatioConstraint", G2L["45c"]);
G2L["45f"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Carget
G2L["460"] = Instance.new("Frame", G2L["45a"]);
G2L["460"]["BorderSizePixel"] = 0;
G2L["460"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["460"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["460"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["460"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["460"]["Name"] = [[Carget]];
G2L["460"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Carget.UICorner
G2L["461"] = Instance.new("UICorner", G2L["460"]);
G2L["461"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Carget.UIAspectRatioConstraint
G2L["462"] = Instance.new("UIAspectRatioConstraint", G2L["460"]);
G2L["462"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.UIAspectRatioConstraint
G2L["463"] = Instance.new("UIAspectRatioConstraint", G2L["45a"]);
G2L["463"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Enabled
G2L["464"] = Instance.new("BoolValue", G2L["45a"]);
G2L["464"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.TextLabel
G2L["465"] = Instance.new("TextLabel", G2L["43f"]);
G2L["465"]["TextWrapped"] = true;
G2L["465"]["BorderSizePixel"] = 0;
G2L["465"]["TextSize"] = 14;
G2L["465"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["465"]["TextScaled"] = true;
G2L["465"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["465"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["465"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["465"]["BackgroundTransparency"] = 1;
G2L["465"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["465"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["465"]["Text"] = [[PelvisParticles]];
G2L["465"]["Position"] = UDim2.new(0.032, 0, 0.38859, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.TextLabel
G2L["466"] = Instance.new("TextLabel", G2L["43f"]);
G2L["466"]["TextWrapped"] = true;
G2L["466"]["BorderSizePixel"] = 0;
G2L["466"]["TextSize"] = 14;
G2L["466"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["466"]["TextScaled"] = true;
G2L["466"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["466"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["466"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["466"]["BackgroundTransparency"] = 1;
G2L["466"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["466"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["466"]["Text"] = [[Clicksfx]];
G2L["466"]["Position"] = UDim2.new(0.032, 0, 0.49167, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable
G2L["467"] = Instance.new("Frame", G2L["43f"]);
G2L["467"]["BorderSizePixel"] = 0;
G2L["467"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["467"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["467"]["Position"] = UDim2.new(0.753, 0, 0.49949, 0);
G2L["467"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["467"]["Name"] = [[Enable]];
G2L["467"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.UICorner
G2L["468"] = Instance.new("UICorner", G2L["467"]);
G2L["468"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton
G2L["469"] = Instance.new("TextButton", G2L["467"]);
G2L["469"]["BorderSizePixel"] = 0;
G2L["469"]["TextTransparency"] = 1;
G2L["469"]["TextSize"] = 14;
G2L["469"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["469"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["469"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["469"]["BackgroundTransparency"] = 1;
G2L["469"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["469"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.LocalScript
G2L["46a"] = Instance.new("LocalScript", G2L["469"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.UICorner
G2L["46b"] = Instance.new("UICorner", G2L["469"]);
G2L["46b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.UIAspectRatioConstraint
G2L["46c"] = Instance.new("UIAspectRatioConstraint", G2L["469"]);
G2L["46c"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Carget
G2L["46d"] = Instance.new("Frame", G2L["467"]);
G2L["46d"]["BorderSizePixel"] = 0;
G2L["46d"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["46d"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["46d"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["46d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["46d"]["Name"] = [[Carget]];
G2L["46d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Carget.UICorner
G2L["46e"] = Instance.new("UICorner", G2L["46d"]);
G2L["46e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Carget.UIAspectRatioConstraint
G2L["46f"] = Instance.new("UIAspectRatioConstraint", G2L["46d"]);
G2L["46f"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.UIAspectRatioConstraint
G2L["470"] = Instance.new("UIAspectRatioConstraint", G2L["467"]);
G2L["470"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.Enabled
G2L["471"] = Instance.new("BoolValue", G2L["467"]);
G2L["471"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui
G2L["472"] = Instance.new("Frame", G2L["43e"]);
G2L["472"]["BorderSizePixel"] = 0;
G2L["472"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["472"]["Size"] = UDim2.new(0.49223, 0, 0.275, 0);
G2L["472"]["Position"] = UDim2.new(-0.00259, 0, -0.00293, 0);
G2L["472"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["472"]["Name"] = [[ClickGui]];
G2L["472"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["473"] = Instance.new("TextLabel", G2L["472"]);
G2L["473"]["TextWrapped"] = true;
G2L["473"]["BorderSizePixel"] = 0;
G2L["473"]["TextSize"] = 14;
G2L["473"]["TextScaled"] = true;
G2L["473"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["473"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["473"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["473"]["BackgroundTransparency"] = 1;
G2L["473"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["473"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["473"]["Text"] = [[ClickGui]];
G2L["473"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["474"] = Instance.new("TextLabel", G2L["472"]);
G2L["474"]["TextWrapped"] = true;
G2L["474"]["BorderSizePixel"] = 0;
G2L["474"]["TextSize"] = 14;
G2L["474"]["TextScaled"] = true;
G2L["474"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["474"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["474"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["474"]["BackgroundTransparency"] = 1;
G2L["474"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["474"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["474"]["Text"] = [[________________________________________]];
G2L["474"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["475"] = Instance.new("TextLabel", G2L["472"]);
G2L["475"]["TextWrapped"] = true;
G2L["475"]["BorderSizePixel"] = 0;
G2L["475"]["TextSize"] = 14;
G2L["475"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["475"]["TextScaled"] = true;
G2L["475"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["475"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["475"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["475"]["BackgroundTransparency"] = 1;
G2L["475"]["Size"] = UDim2.new(0.67498, 0, 0.10248, 0);
G2L["475"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["475"]["Text"] = [[Image]];
G2L["475"]["Position"] = UDim2.new(0.042, 0, 0.97003, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["476"] = Instance.new("TextLabel", G2L["472"]);
G2L["476"]["TextWrapped"] = true;
G2L["476"]["BorderSizePixel"] = 0;
G2L["476"]["TextSize"] = 14;
G2L["476"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["476"]["TextScaled"] = true;
G2L["476"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["476"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["476"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["476"]["BackgroundTransparency"] = 1;
G2L["476"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["476"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["476"]["Text"] = [[Red Background]];
G2L["476"]["Position"] = UDim2.new(0.042, 0, 0.17176, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable
G2L["477"] = Instance.new("Frame", G2L["472"]);
G2L["477"]["BorderSizePixel"] = 0;
G2L["477"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["477"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["477"]["Position"] = UDim2.new(0.763, 0, 0.17957, 0);
G2L["477"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["477"]["Name"] = [[Enable]];
G2L["477"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UICorner
G2L["478"] = Instance.new("UICorner", G2L["477"]);
G2L["478"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton
G2L["479"] = Instance.new("TextButton", G2L["477"]);
G2L["479"]["BorderSizePixel"] = 0;
G2L["479"]["TextTransparency"] = 1;
G2L["479"]["TextSize"] = 14;
G2L["479"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["479"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["479"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["479"]["BackgroundTransparency"] = 1;
G2L["479"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["479"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
G2L["47a"] = Instance.new("LocalScript", G2L["479"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UICorner
G2L["47b"] = Instance.new("UICorner", G2L["479"]);
G2L["47b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UIAspectRatioConstraint
G2L["47c"] = Instance.new("UIAspectRatioConstraint", G2L["479"]);
G2L["47c"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget
G2L["47d"] = Instance.new("Frame", G2L["477"]);
G2L["47d"]["BorderSizePixel"] = 0;
G2L["47d"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["47d"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["47d"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["47d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["47d"]["Name"] = [[Carget]];
G2L["47d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UICorner
G2L["47e"] = Instance.new("UICorner", G2L["47d"]);
G2L["47e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UIAspectRatioConstraint
G2L["47f"] = Instance.new("UIAspectRatioConstraint", G2L["47d"]);
G2L["47f"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UIAspectRatioConstraint
G2L["480"] = Instance.new("UIAspectRatioConstraint", G2L["477"]);
G2L["480"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Enabled
G2L["481"] = Instance.new("BoolValue", G2L["477"]);
G2L["481"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextBox
G2L["482"] = Instance.new("TextBox", G2L["472"]);
G2L["482"]["PlaceholderColor3"] = Color3.fromRGB(180, 180, 180);
G2L["482"]["BorderSizePixel"] = 0;
G2L["482"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["482"]["TextSize"] = 14;
G2L["482"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["482"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["482"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["482"]["PlaceholderText"] = [[BIND (NONE)]];
G2L["482"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["482"]["Position"] = UDim2.new(-0.00003, 0, 1.26965, 0);
G2L["482"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["482"]["Text"] = [[Bind (None)]];
G2L["482"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextBox.TextButton
G2L["483"] = Instance.new("TextButton", G2L["482"]);
G2L["483"]["BorderSizePixel"] = 0;
G2L["483"]["TextTransparency"] = 1;
G2L["483"]["TextSize"] = 14;
G2L["483"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["483"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["483"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["483"]["BackgroundTransparency"] = 1;
G2L["483"]["Size"] = UDim2.new(0.99281, 0, 1.02118, 0);
G2L["483"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["483"]["Position"] = UDim2.new(0.00003, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextBox.TextButton.LocalScript
G2L["484"] = Instance.new("LocalScript", G2L["483"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextBox
G2L["485"] = Instance.new("TextBox", G2L["472"]);
G2L["485"]["PlaceholderColor3"] = Color3.fromRGB(180, 180, 180);
G2L["485"]["BorderSizePixel"] = 0;
G2L["485"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["485"]["TextSize"] = 14;
G2L["485"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["485"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["485"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["485"]["PlaceholderText"] = [[Image Id]];
G2L["485"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["485"]["Position"] = UDim2.new(-0.00003, 0, 1.11024, 0);
G2L["485"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["485"]["Text"] = [[]];
G2L["485"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextBox.LocalScript
G2L["486"] = Instance.new("LocalScript", G2L["485"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable
G2L["487"] = Instance.new("Frame", G2L["472"]);
G2L["487"]["BorderSizePixel"] = 0;
G2L["487"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["487"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["487"]["Position"] = UDim2.new(0.763, 0, 0.97784, 0);
G2L["487"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["487"]["Name"] = [[Enable]];
G2L["487"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UICorner
G2L["488"] = Instance.new("UICorner", G2L["487"]);
G2L["488"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton
G2L["489"] = Instance.new("TextButton", G2L["487"]);
G2L["489"]["BorderSizePixel"] = 0;
G2L["489"]["TextTransparency"] = 1;
G2L["489"]["TextSize"] = 14;
G2L["489"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["489"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["489"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["489"]["BackgroundTransparency"] = 1;
G2L["489"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["489"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
G2L["48a"] = Instance.new("LocalScript", G2L["489"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UICorner
G2L["48b"] = Instance.new("UICorner", G2L["489"]);
G2L["48b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UIAspectRatioConstraint
G2L["48c"] = Instance.new("UIAspectRatioConstraint", G2L["489"]);
G2L["48c"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget
G2L["48d"] = Instance.new("Frame", G2L["487"]);
G2L["48d"]["BorderSizePixel"] = 0;
G2L["48d"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["48d"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["48d"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["48d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["48d"]["Name"] = [[Carget]];
G2L["48d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UICorner
G2L["48e"] = Instance.new("UICorner", G2L["48d"]);
G2L["48e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UIAspectRatioConstraint
G2L["48f"] = Instance.new("UIAspectRatioConstraint", G2L["48d"]);
G2L["48f"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UIAspectRatioConstraint
G2L["490"] = Instance.new("UIAspectRatioConstraint", G2L["487"]);
G2L["490"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Enabled
G2L["491"] = Instance.new("BoolValue", G2L["487"]);
G2L["491"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable
G2L["492"] = Instance.new("Frame", G2L["472"]);
G2L["492"]["BorderSizePixel"] = 0;
G2L["492"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["492"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["492"]["Position"] = UDim2.new(0.763, 0, 0.87475, 0);
G2L["492"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["492"]["Name"] = [[Enable]];
G2L["492"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UICorner
G2L["493"] = Instance.new("UICorner", G2L["492"]);
G2L["493"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton
G2L["494"] = Instance.new("TextButton", G2L["492"]);
G2L["494"]["BorderSizePixel"] = 0;
G2L["494"]["TextTransparency"] = 1;
G2L["494"]["TextSize"] = 14;
G2L["494"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["494"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["494"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["494"]["BackgroundTransparency"] = 1;
G2L["494"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["494"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
G2L["495"] = Instance.new("LocalScript", G2L["494"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UICorner
G2L["496"] = Instance.new("UICorner", G2L["494"]);
G2L["496"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UIAspectRatioConstraint
G2L["497"] = Instance.new("UIAspectRatioConstraint", G2L["494"]);
G2L["497"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget
G2L["498"] = Instance.new("Frame", G2L["492"]);
G2L["498"]["BorderSizePixel"] = 0;
G2L["498"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["498"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["498"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["498"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["498"]["Name"] = [[Carget]];
G2L["498"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UICorner
G2L["499"] = Instance.new("UICorner", G2L["498"]);
G2L["499"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UIAspectRatioConstraint
G2L["49a"] = Instance.new("UIAspectRatioConstraint", G2L["498"]);
G2L["49a"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UIAspectRatioConstraint
G2L["49b"] = Instance.new("UIAspectRatioConstraint", G2L["492"]);
G2L["49b"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Enabled
G2L["49c"] = Instance.new("BoolValue", G2L["492"]);
G2L["49c"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["49d"] = Instance.new("TextLabel", G2L["472"]);
G2L["49d"]["TextWrapped"] = true;
G2L["49d"]["BorderSizePixel"] = 0;
G2L["49d"]["TextSize"] = 14;
G2L["49d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["49d"]["TextScaled"] = true;
G2L["49d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["49d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["49d"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["49d"]["BackgroundTransparency"] = 1;
G2L["49d"]["Size"] = UDim2.new(0.67498, 0, 0.10248, 0);
G2L["49d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["49d"]["Text"] = [[Aqua Background]];
G2L["49d"]["Position"] = UDim2.new(0.042, 0, 0.86694, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["49e"] = Instance.new("TextLabel", G2L["472"]);
G2L["49e"]["TextWrapped"] = true;
G2L["49e"]["BorderSizePixel"] = 0;
G2L["49e"]["TextSize"] = 14;
G2L["49e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["49e"]["TextScaled"] = true;
G2L["49e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["49e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["49e"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["49e"]["BackgroundTransparency"] = 1;
G2L["49e"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["49e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["49e"]["Text"] = [[Blue Background]];
G2L["49e"]["Position"] = UDim2.new(0.042, 0, 0.27332, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable
G2L["49f"] = Instance.new("Frame", G2L["472"]);
G2L["49f"]["BorderSizePixel"] = 0;
G2L["49f"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["49f"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["49f"]["Position"] = UDim2.new(0.763, 0, 0.28114, 0);
G2L["49f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["49f"]["Name"] = [[Enable]];
G2L["49f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UICorner
G2L["4a0"] = Instance.new("UICorner", G2L["49f"]);
G2L["4a0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton
G2L["4a1"] = Instance.new("TextButton", G2L["49f"]);
G2L["4a1"]["BorderSizePixel"] = 0;
G2L["4a1"]["TextTransparency"] = 1;
G2L["4a1"]["TextSize"] = 14;
G2L["4a1"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4a1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4a1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4a1"]["BackgroundTransparency"] = 1;
G2L["4a1"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["4a1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
G2L["4a2"] = Instance.new("LocalScript", G2L["4a1"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UICorner
G2L["4a3"] = Instance.new("UICorner", G2L["4a1"]);
G2L["4a3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UIAspectRatioConstraint
G2L["4a4"] = Instance.new("UIAspectRatioConstraint", G2L["4a1"]);
G2L["4a4"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget
G2L["4a5"] = Instance.new("Frame", G2L["49f"]);
G2L["4a5"]["BorderSizePixel"] = 0;
G2L["4a5"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["4a5"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["4a5"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["4a5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4a5"]["Name"] = [[Carget]];
G2L["4a5"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UICorner
G2L["4a6"] = Instance.new("UICorner", G2L["4a5"]);
G2L["4a6"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UIAspectRatioConstraint
G2L["4a7"] = Instance.new("UIAspectRatioConstraint", G2L["4a5"]);
G2L["4a7"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UIAspectRatioConstraint
G2L["4a8"] = Instance.new("UIAspectRatioConstraint", G2L["49f"]);
G2L["4a8"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Enabled
G2L["4a9"] = Instance.new("BoolValue", G2L["49f"]);
G2L["4a9"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable
G2L["4aa"] = Instance.new("Frame", G2L["472"]);
G2L["4aa"]["BorderSizePixel"] = 0;
G2L["4aa"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["4aa"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["4aa"]["Position"] = UDim2.new(0.763, 0, 0.38066, 0);
G2L["4aa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4aa"]["Name"] = [[Enable]];
G2L["4aa"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UICorner
G2L["4ab"] = Instance.new("UICorner", G2L["4aa"]);
G2L["4ab"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton
G2L["4ac"] = Instance.new("TextButton", G2L["4aa"]);
G2L["4ac"]["BorderSizePixel"] = 0;
G2L["4ac"]["TextTransparency"] = 1;
G2L["4ac"]["TextSize"] = 14;
G2L["4ac"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4ac"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4ac"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4ac"]["BackgroundTransparency"] = 1;
G2L["4ac"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["4ac"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
G2L["4ad"] = Instance.new("LocalScript", G2L["4ac"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UICorner
G2L["4ae"] = Instance.new("UICorner", G2L["4ac"]);
G2L["4ae"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UIAspectRatioConstraint
G2L["4af"] = Instance.new("UIAspectRatioConstraint", G2L["4ac"]);
G2L["4af"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget
G2L["4b0"] = Instance.new("Frame", G2L["4aa"]);
G2L["4b0"]["BorderSizePixel"] = 0;
G2L["4b0"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["4b0"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["4b0"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["4b0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4b0"]["Name"] = [[Carget]];
G2L["4b0"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UICorner
G2L["4b1"] = Instance.new("UICorner", G2L["4b0"]);
G2L["4b1"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UIAspectRatioConstraint
G2L["4b2"] = Instance.new("UIAspectRatioConstraint", G2L["4b0"]);
G2L["4b2"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UIAspectRatioConstraint
G2L["4b3"] = Instance.new("UIAspectRatioConstraint", G2L["4aa"]);
G2L["4b3"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Enabled
G2L["4b4"] = Instance.new("BoolValue", G2L["4aa"]);
G2L["4b4"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["4b5"] = Instance.new("TextLabel", G2L["472"]);
G2L["4b5"]["TextWrapped"] = true;
G2L["4b5"]["BorderSizePixel"] = 0;
G2L["4b5"]["TextSize"] = 14;
G2L["4b5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["4b5"]["TextScaled"] = true;
G2L["4b5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4b5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4b5"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["4b5"]["BackgroundTransparency"] = 1;
G2L["4b5"]["Size"] = UDim2.new(0.67498, 0, 0.10248, 0);
G2L["4b5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4b5"]["Text"] = [[Purple Background]];
G2L["4b5"]["Position"] = UDim2.new(0.042, 0, 0.37285, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["4b6"] = Instance.new("TextLabel", G2L["472"]);
G2L["4b6"]["TextWrapped"] = true;
G2L["4b6"]["BorderSizePixel"] = 0;
G2L["4b6"]["TextSize"] = 14;
G2L["4b6"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["4b6"]["TextScaled"] = true;
G2L["4b6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4b6"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4b6"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["4b6"]["BackgroundTransparency"] = 1;
G2L["4b6"]["Size"] = UDim2.new(0.67498, 0, 0.10248, 0);
G2L["4b6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4b6"]["Text"] = [[Orange Background]];
G2L["4b6"]["Position"] = UDim2.new(0.042, 0, 0.46883, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable
G2L["4b7"] = Instance.new("Frame", G2L["472"]);
G2L["4b7"]["BorderSizePixel"] = 0;
G2L["4b7"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["4b7"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["4b7"]["Position"] = UDim2.new(0.763, 0, 0.47664, 0);
G2L["4b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4b7"]["Name"] = [[Enable]];
G2L["4b7"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UICorner
G2L["4b8"] = Instance.new("UICorner", G2L["4b7"]);
G2L["4b8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton
G2L["4b9"] = Instance.new("TextButton", G2L["4b7"]);
G2L["4b9"]["BorderSizePixel"] = 0;
G2L["4b9"]["TextTransparency"] = 1;
G2L["4b9"]["TextSize"] = 14;
G2L["4b9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4b9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4b9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4b9"]["BackgroundTransparency"] = 1;
G2L["4b9"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["4b9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
G2L["4ba"] = Instance.new("LocalScript", G2L["4b9"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UICorner
G2L["4bb"] = Instance.new("UICorner", G2L["4b9"]);
G2L["4bb"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UIAspectRatioConstraint
G2L["4bc"] = Instance.new("UIAspectRatioConstraint", G2L["4b9"]);
G2L["4bc"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget
G2L["4bd"] = Instance.new("Frame", G2L["4b7"]);
G2L["4bd"]["BorderSizePixel"] = 0;
G2L["4bd"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["4bd"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["4bd"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["4bd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4bd"]["Name"] = [[Carget]];
G2L["4bd"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UICorner
G2L["4be"] = Instance.new("UICorner", G2L["4bd"]);
G2L["4be"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UIAspectRatioConstraint
G2L["4bf"] = Instance.new("UIAspectRatioConstraint", G2L["4bd"]);
G2L["4bf"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UIAspectRatioConstraint
G2L["4c0"] = Instance.new("UIAspectRatioConstraint", G2L["4b7"]);
G2L["4c0"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Enabled
G2L["4c1"] = Instance.new("BoolValue", G2L["4b7"]);
G2L["4c1"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["4c2"] = Instance.new("TextLabel", G2L["472"]);
G2L["4c2"]["TextWrapped"] = true;
G2L["4c2"]["BorderSizePixel"] = 0;
G2L["4c2"]["TextSize"] = 14;
G2L["4c2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["4c2"]["TextScaled"] = true;
G2L["4c2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4c2"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["4c2"]["BackgroundTransparency"] = 1;
G2L["4c2"]["Size"] = UDim2.new(0.67498, 0, 0.10248, 0);
G2L["4c2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4c2"]["Text"] = [[Black Background]];
G2L["4c2"]["Position"] = UDim2.new(0.042, 0, 0.56836, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable
G2L["4c3"] = Instance.new("Frame", G2L["472"]);
G2L["4c3"]["BorderSizePixel"] = 0;
G2L["4c3"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["4c3"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["4c3"]["Position"] = UDim2.new(0.763, 0, 0.57617, 0);
G2L["4c3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4c3"]["Name"] = [[Enable]];
G2L["4c3"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UICorner
G2L["4c4"] = Instance.new("UICorner", G2L["4c3"]);
G2L["4c4"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton
G2L["4c5"] = Instance.new("TextButton", G2L["4c3"]);
G2L["4c5"]["BorderSizePixel"] = 0;
G2L["4c5"]["TextTransparency"] = 1;
G2L["4c5"]["TextSize"] = 14;
G2L["4c5"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4c5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4c5"]["BackgroundTransparency"] = 1;
G2L["4c5"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["4c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
G2L["4c6"] = Instance.new("LocalScript", G2L["4c5"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UICorner
G2L["4c7"] = Instance.new("UICorner", G2L["4c5"]);
G2L["4c7"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UIAspectRatioConstraint
G2L["4c8"] = Instance.new("UIAspectRatioConstraint", G2L["4c5"]);
G2L["4c8"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget
G2L["4c9"] = Instance.new("Frame", G2L["4c3"]);
G2L["4c9"]["BorderSizePixel"] = 0;
G2L["4c9"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["4c9"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["4c9"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["4c9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4c9"]["Name"] = [[Carget]];
G2L["4c9"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UICorner
G2L["4ca"] = Instance.new("UICorner", G2L["4c9"]);
G2L["4ca"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UIAspectRatioConstraint
G2L["4cb"] = Instance.new("UIAspectRatioConstraint", G2L["4c9"]);
G2L["4cb"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UIAspectRatioConstraint
G2L["4cc"] = Instance.new("UIAspectRatioConstraint", G2L["4c3"]);
G2L["4cc"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Enabled
G2L["4cd"] = Instance.new("BoolValue", G2L["4c3"]);
G2L["4cd"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["4ce"] = Instance.new("TextLabel", G2L["472"]);
G2L["4ce"]["TextWrapped"] = true;
G2L["4ce"]["BorderSizePixel"] = 0;
G2L["4ce"]["TextSize"] = 14;
G2L["4ce"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["4ce"]["TextScaled"] = true;
G2L["4ce"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4ce"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4ce"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["4ce"]["BackgroundTransparency"] = 1;
G2L["4ce"]["Size"] = UDim2.new(0.67498, 0, 0.10248, 0);
G2L["4ce"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4ce"]["Text"] = [[Green Background]];
G2L["4ce"]["Position"] = UDim2.new(0.042, 0, 0.66788, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable
G2L["4cf"] = Instance.new("Frame", G2L["472"]);
G2L["4cf"]["BorderSizePixel"] = 0;
G2L["4cf"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["4cf"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["4cf"]["Position"] = UDim2.new(0.763, 0, 0.6757, 0);
G2L["4cf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4cf"]["Name"] = [[Enable]];
G2L["4cf"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UICorner
G2L["4d0"] = Instance.new("UICorner", G2L["4cf"]);
G2L["4d0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton
G2L["4d1"] = Instance.new("TextButton", G2L["4cf"]);
G2L["4d1"]["BorderSizePixel"] = 0;
G2L["4d1"]["TextTransparency"] = 1;
G2L["4d1"]["TextSize"] = 14;
G2L["4d1"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4d1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4d1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4d1"]["BackgroundTransparency"] = 1;
G2L["4d1"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["4d1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
G2L["4d2"] = Instance.new("LocalScript", G2L["4d1"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UICorner
G2L["4d3"] = Instance.new("UICorner", G2L["4d1"]);
G2L["4d3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UIAspectRatioConstraint
G2L["4d4"] = Instance.new("UIAspectRatioConstraint", G2L["4d1"]);
G2L["4d4"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget
G2L["4d5"] = Instance.new("Frame", G2L["4cf"]);
G2L["4d5"]["BorderSizePixel"] = 0;
G2L["4d5"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["4d5"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["4d5"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["4d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4d5"]["Name"] = [[Carget]];
G2L["4d5"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UICorner
G2L["4d6"] = Instance.new("UICorner", G2L["4d5"]);
G2L["4d6"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UIAspectRatioConstraint
G2L["4d7"] = Instance.new("UIAspectRatioConstraint", G2L["4d5"]);
G2L["4d7"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UIAspectRatioConstraint
G2L["4d8"] = Instance.new("UIAspectRatioConstraint", G2L["4cf"]);
G2L["4d8"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Enabled
G2L["4d9"] = Instance.new("BoolValue", G2L["4cf"]);
G2L["4d9"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable
G2L["4da"] = Instance.new("Frame", G2L["472"]);
G2L["4da"]["BorderSizePixel"] = 0;
G2L["4da"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["4da"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["4da"]["Position"] = UDim2.new(0.763, 0, 0.77523, 0);
G2L["4da"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4da"]["Name"] = [[Enable]];
G2L["4da"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UICorner
G2L["4db"] = Instance.new("UICorner", G2L["4da"]);
G2L["4db"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton
G2L["4dc"] = Instance.new("TextButton", G2L["4da"]);
G2L["4dc"]["BorderSizePixel"] = 0;
G2L["4dc"]["TextTransparency"] = 1;
G2L["4dc"]["TextSize"] = 14;
G2L["4dc"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4dc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4dc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4dc"]["BackgroundTransparency"] = 1;
G2L["4dc"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["4dc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
G2L["4dd"] = Instance.new("LocalScript", G2L["4dc"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UICorner
G2L["4de"] = Instance.new("UICorner", G2L["4dc"]);
G2L["4de"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.UIAspectRatioConstraint
G2L["4df"] = Instance.new("UIAspectRatioConstraint", G2L["4dc"]);
G2L["4df"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget
G2L["4e0"] = Instance.new("Frame", G2L["4da"]);
G2L["4e0"]["BorderSizePixel"] = 0;
G2L["4e0"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["4e0"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["4e0"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["4e0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4e0"]["Name"] = [[Carget]];
G2L["4e0"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UICorner
G2L["4e1"] = Instance.new("UICorner", G2L["4e0"]);
G2L["4e1"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Carget.UIAspectRatioConstraint
G2L["4e2"] = Instance.new("UIAspectRatioConstraint", G2L["4e0"]);
G2L["4e2"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.UIAspectRatioConstraint
G2L["4e3"] = Instance.new("UIAspectRatioConstraint", G2L["4da"]);
G2L["4e3"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.Enabled
G2L["4e4"] = Instance.new("BoolValue", G2L["4da"]);
G2L["4e4"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextLabel
G2L["4e5"] = Instance.new("TextLabel", G2L["472"]);
G2L["4e5"]["TextWrapped"] = true;
G2L["4e5"]["BorderSizePixel"] = 0;
G2L["4e5"]["TextSize"] = 14;
G2L["4e5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["4e5"]["TextScaled"] = true;
G2L["4e5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4e5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4e5"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["4e5"]["BackgroundTransparency"] = 1;
G2L["4e5"]["Size"] = UDim2.new(0.67498, 0, 0.10248, 0);
G2L["4e5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4e5"]["Text"] = [[Yellow Background]];
G2L["4e5"]["Position"] = UDim2.new(0.042, 0, 0.76741, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config
G2L["4e6"] = Instance.new("Frame", G2L["43e"]);
G2L["4e6"]["BorderSizePixel"] = 0;
G2L["4e6"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["4e6"]["Size"] = UDim2.new(0.49223, 0, 0.275, 0);
G2L["4e6"]["Position"] = UDim2.new(0.50572, 0, 0.18, 0);
G2L["4e6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4e6"]["Name"] = [[Config]];
G2L["4e6"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.LocalScript
G2L["4e7"] = Instance.new("LocalScript", G2L["4e6"]);
G2L["4e7"]["Enabled"] = false;
G2L["4e7"]["Disabled"] = true;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.TextLabel
G2L["4e8"] = Instance.new("TextLabel", G2L["4e6"]);
G2L["4e8"]["TextWrapped"] = true;
G2L["4e8"]["BorderSizePixel"] = 0;
G2L["4e8"]["TextSize"] = 14;
G2L["4e8"]["TextScaled"] = true;
G2L["4e8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4e8"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4e8"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["4e8"]["BackgroundTransparency"] = 1;
G2L["4e8"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["4e8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4e8"]["Text"] = [[Config]];
G2L["4e8"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.TextLabel
G2L["4e9"] = Instance.new("TextLabel", G2L["4e6"]);
G2L["4e9"]["TextWrapped"] = true;
G2L["4e9"]["BorderSizePixel"] = 0;
G2L["4e9"]["TextSize"] = 14;
G2L["4e9"]["TextScaled"] = true;
G2L["4e9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4e9"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4e9"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["4e9"]["BackgroundTransparency"] = 1;
G2L["4e9"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["4e9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4e9"]["Text"] = [[________________________________________]];
G2L["4e9"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.ScrollingFrame
G2L["4ea"] = Instance.new("ScrollingFrame", G2L["4e6"]);
G2L["4ea"]["Active"] = true;
G2L["4ea"]["BorderSizePixel"] = 0;
G2L["4ea"]["BackgroundColor3"] = Color3.fromRGB(17, 17, 17);
G2L["4ea"]["ScrollBarImageTransparency"] = 1;
G2L["4ea"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["4ea"]["Size"] = UDim2.new(0.87495, 0, 0.49054, 0);
G2L["4ea"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4ea"]["Position"] = UDim2.new(0.0625, 0, 0.18129, 0);
G2L["4ea"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4ea"]["ScrollBarThickness"] = 0;
G2L["4ea"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.ScrollingFrame.UIListLayout
G2L["4eb"] = Instance.new("UIListLayout", G2L["4ea"]);
G2L["4eb"]["Padding"] = UDim.new(0, 2);
G2L["4eb"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.ScrollingFrame.Example
G2L["4ec"] = Instance.new("Frame", G2L["4ea"]);
G2L["4ec"]["Visible"] = false;
G2L["4ec"]["BorderSizePixel"] = 0;
G2L["4ec"]["BackgroundColor3"] = Color3.fromRGB(36, 36, 36);
G2L["4ec"]["Size"] = UDim2.new(1, 0, 0.21739, 0);
G2L["4ec"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4ec"]["Name"] = [[Example]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.ScrollingFrame.Example.configname
G2L["4ed"] = Instance.new("TextLabel", G2L["4ec"]);
G2L["4ed"]["TextWrapped"] = true;
G2L["4ed"]["TextStrokeTransparency"] = 0.7;
G2L["4ed"]["BorderSizePixel"] = 0;
G2L["4ed"]["TextSize"] = 14;
G2L["4ed"]["TextScaled"] = true;
G2L["4ed"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4ed"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["4ed"]["TextColor3"] = Color3.fromRGB(235, 235, 235);
G2L["4ed"]["BackgroundTransparency"] = 1;
G2L["4ed"]["Size"] = UDim2.new(1, 0, 0.70819, 0);
G2L["4ed"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4ed"]["Text"] = [[Config1]];
G2L["4ed"]["Name"] = [[configname]];
G2L["4ed"]["Position"] = UDim2.new(0, 0, 0.12514, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.ScrollingFrame.Example.configname.UITextSizeConstraint
G2L["4ee"] = Instance.new("UITextSizeConstraint", G2L["4ed"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.ScrollingFrame.Example.hitbox
G2L["4ef"] = Instance.new("TextButton", G2L["4ec"]);
G2L["4ef"]["BorderSizePixel"] = 0;
G2L["4ef"]["TextTransparency"] = 1;
G2L["4ef"]["TextSize"] = 14;
G2L["4ef"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4ef"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4ef"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4ef"]["BackgroundTransparency"] = 1;
G2L["4ef"]["Size"] = UDim2.new(0, 168, 0, 30);
G2L["4ef"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4ef"]["Text"] = [[]];
G2L["4ef"]["Name"] = [[hitbox]];


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.TextBox
G2L["4f0"] = Instance.new("TextBox", G2L["4e6"]);
G2L["4f0"]["PlaceholderColor3"] = Color3.fromRGB(180, 180, 180);
G2L["4f0"]["BorderSizePixel"] = 0;
G2L["4f0"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["4f0"]["TextSize"] = 14;
G2L["4f0"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["4f0"]["BackgroundColor3"] = Color3.fromRGB(17, 17, 17);
G2L["4f0"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4f0"]["PlaceholderText"] = [[Name For Config]];
G2L["4f0"]["Size"] = UDim2.new(0.88524, 0, 0.156, 0);
G2L["4f0"]["Position"] = UDim2.new(0.0625, 0, 0.68014, 0);
G2L["4f0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f0"]["Text"] = [[]];
G2L["4f0"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.loadbt
G2L["4f1"] = Instance.new("Frame", G2L["4e6"]);
G2L["4f1"]["BorderSizePixel"] = 0;
G2L["4f1"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["4f1"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4f1"]["Size"] = UDim2.new(0.87665, 0, 0.11822, 0);
G2L["4f1"]["Position"] = UDim2.new(0.49912, 0, 0.90629, 0);
G2L["4f1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f1"]["Name"] = [[loadbt]];
G2L["4f1"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.loadbt.UICorner
G2L["4f2"] = Instance.new("UICorner", G2L["4f1"]);
G2L["4f2"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.loadbt.TextLabel
G2L["4f3"] = Instance.new("TextLabel", G2L["4f1"]);
G2L["4f3"]["TextWrapped"] = true;
G2L["4f3"]["BorderSizePixel"] = 0;
G2L["4f3"]["TextSize"] = 14;
G2L["4f3"]["TextScaled"] = true;
G2L["4f3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f3"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4f3"]["TextColor3"] = Color3.fromRGB(47, 47, 47);
G2L["4f3"]["BackgroundTransparency"] = 1;
G2L["4f3"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["4f3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f3"]["Text"] = [[Load]];
G2L["4f3"]["Position"] = UDim2.new(0.00594, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.loadbt.TextLabel.UITextSizeConstraint
G2L["4f4"] = Instance.new("UITextSizeConstraint", G2L["4f3"]);
G2L["4f4"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.loadbt.TextButton
G2L["4f5"] = Instance.new("TextButton", G2L["4f1"]);
G2L["4f5"]["BorderSizePixel"] = 0;
G2L["4f5"]["TextTransparency"] = 1;
G2L["4f5"]["TextSize"] = 14;
G2L["4f5"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f5"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4f5"]["BackgroundTransparency"] = 1;
G2L["4f5"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["4f5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.loadbt.UIGradient
G2L["4f6"] = Instance.new("UIGradient", G2L["4f1"]);
G2L["4f6"]["Rotation"] = 90;
G2L["4f6"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.loadbt.UIScale
G2L["4f7"] = Instance.new("UIScale", G2L["4f1"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.savebt
G2L["4f8"] = Instance.new("Frame", G2L["4e6"]);
G2L["4f8"]["BorderSizePixel"] = 0;
G2L["4f8"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["4f8"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4f8"]["Size"] = UDim2.new(0.87665, 0, 0.11822, 0);
G2L["4f8"]["Position"] = UDim2.new(0.49912, 0, 1.04137, 0);
G2L["4f8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f8"]["Name"] = [[savebt]];
G2L["4f8"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.savebt.UICorner
G2L["4f9"] = Instance.new("UICorner", G2L["4f8"]);
G2L["4f9"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.savebt.TextLabel
G2L["4fa"] = Instance.new("TextLabel", G2L["4f8"]);
G2L["4fa"]["TextWrapped"] = true;
G2L["4fa"]["BorderSizePixel"] = 0;
G2L["4fa"]["TextSize"] = 14;
G2L["4fa"]["TextScaled"] = true;
G2L["4fa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4fa"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["4fa"]["TextColor3"] = Color3.fromRGB(47, 47, 47);
G2L["4fa"]["BackgroundTransparency"] = 1;
G2L["4fa"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["4fa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4fa"]["Text"] = [[Save]];
G2L["4fa"]["Position"] = UDim2.new(0.00594, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.savebt.TextLabel.UITextSizeConstraint
G2L["4fb"] = Instance.new("UITextSizeConstraint", G2L["4fa"]);
G2L["4fb"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.savebt.TextButton
G2L["4fc"] = Instance.new("TextButton", G2L["4f8"]);
G2L["4fc"]["BorderSizePixel"] = 0;
G2L["4fc"]["TextTransparency"] = 1;
G2L["4fc"]["TextSize"] = 14;
G2L["4fc"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4fc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4fc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4fc"]["BackgroundTransparency"] = 1;
G2L["4fc"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["4fc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.savebt.UIGradient
G2L["4fd"] = Instance.new("UIGradient", G2L["4f8"]);
G2L["4fd"]["Rotation"] = 90;
G2L["4fd"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.savebt.UIScale
G2L["4fe"] = Instance.new("UIScale", G2L["4f8"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.deletebt
G2L["4ff"] = Instance.new("Frame", G2L["4e6"]);
G2L["4ff"]["BorderSizePixel"] = 0;
G2L["4ff"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["4ff"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4ff"]["Size"] = UDim2.new(0.87665, 0, 0.11822, 0);
G2L["4ff"]["Position"] = UDim2.new(0.49912, 0, 1.17289, 0);
G2L["4ff"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4ff"]["Name"] = [[deletebt]];
G2L["4ff"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.deletebt.UICorner
G2L["500"] = Instance.new("UICorner", G2L["4ff"]);
G2L["500"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.deletebt.TextLabel
G2L["501"] = Instance.new("TextLabel", G2L["4ff"]);
G2L["501"]["TextWrapped"] = true;
G2L["501"]["BorderSizePixel"] = 0;
G2L["501"]["TextSize"] = 14;
G2L["501"]["TextScaled"] = true;
G2L["501"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["501"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["501"]["TextColor3"] = Color3.fromRGB(47, 47, 47);
G2L["501"]["BackgroundTransparency"] = 1;
G2L["501"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["501"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["501"]["Text"] = [[Delete]];
G2L["501"]["Position"] = UDim2.new(0.00594, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.deletebt.TextLabel.UITextSizeConstraint
G2L["502"] = Instance.new("UITextSizeConstraint", G2L["501"]);
G2L["502"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.deletebt.TextButton
G2L["503"] = Instance.new("TextButton", G2L["4ff"]);
G2L["503"]["BorderSizePixel"] = 0;
G2L["503"]["TextTransparency"] = 1;
G2L["503"]["TextSize"] = 14;
G2L["503"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["503"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["503"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["503"]["BackgroundTransparency"] = 1;
G2L["503"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["503"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.deletebt.UIGradient
G2L["504"] = Instance.new("UIGradient", G2L["4ff"]);
G2L["504"]["Rotation"] = 90;
G2L["504"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.deletebt.UIScale
G2L["505"] = Instance.new("UIScale", G2L["4ff"]);



-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Config.TextLabel
G2L["506"] = Instance.new("TextLabel", G2L["4e6"]);
G2L["506"]["TextWrapped"] = true;
G2L["506"]["TextStrokeTransparency"] = 0.6;
G2L["506"]["BorderSizePixel"] = 0;
G2L["506"]["TextSize"] = 14;
G2L["506"]["TextScaled"] = true;
G2L["506"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["506"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["506"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["506"]["BackgroundTransparency"] = 1;
G2L["506"]["Size"] = UDim2.new(0.67617, 0, 0.48042, 0);
G2L["506"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["506"]["Text"] = [[at the moment it does not work, auto loading and auto saving works]];
G2L["506"]["Position"] = UDim2.new(0.1622, 0, 0.21936, 0);


-- StarterGui.xescriptsXD.Frame.Particles
G2L["507"] = Instance.new("Folder", G2L["11b"]);
G2L["507"]["Name"] = [[Particles]];


-- StarterGui.xescriptsXD.Frame.Lighting
G2L["508"] = Instance.new("Frame", G2L["11b"]);
G2L["508"]["Visible"] = false;
G2L["508"]["BorderSizePixel"] = 0;
G2L["508"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["508"]["Size"] = UDim2.new(0.68078, 0, 0.81384, 0);
G2L["508"]["Position"] = UDim2.new(0.29277, 0, 0.14558, 0);
G2L["508"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["508"]["Name"] = [[Lighting]];
G2L["508"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.LocalScript
G2L["509"] = Instance.new("LocalScript", G2L["508"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame
G2L["50a"] = Instance.new("ScrollingFrame", G2L["508"]);
G2L["50a"]["Active"] = true;
G2L["50a"]["BorderSizePixel"] = 0;
G2L["50a"]["CanvasSize"] = UDim2.new(0, 0, 4, 800);
G2L["50a"]["CanvasPosition"] = Vector2.new(0, 420);
G2L["50a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50a"]["ScrollBarImageTransparency"] = 1;
G2L["50a"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["50a"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50a"]["ScrollBarThickness"] = 3;
G2L["50a"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other
G2L["50b"] = Instance.new("Frame", G2L["50a"]);
G2L["50b"]["BorderSizePixel"] = 0;
G2L["50b"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["50b"]["Size"] = UDim2.new(0.492, 0, 0.13, 0);
G2L["50b"]["Position"] = UDim2.new(0.506, 0, -0.003, 0);
G2L["50b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50b"]["Name"] = [[Other]];
G2L["50b"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextLabel
G2L["50c"] = Instance.new("TextLabel", G2L["50b"]);
G2L["50c"]["TextWrapped"] = true;
G2L["50c"]["BorderSizePixel"] = 0;
G2L["50c"]["TextSize"] = 14;
G2L["50c"]["TextScaled"] = true;
G2L["50c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["50c"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["50c"]["BackgroundTransparency"] = 1;
G2L["50c"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["50c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50c"]["Text"] = [[Other]];
G2L["50c"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextLabel
G2L["50d"] = Instance.new("TextLabel", G2L["50b"]);
G2L["50d"]["TextWrapped"] = true;
G2L["50d"]["BorderSizePixel"] = 0;
G2L["50d"]["TextSize"] = 14;
G2L["50d"]["TextScaled"] = true;
G2L["50d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["50d"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["50d"]["BackgroundTransparency"] = 1;
G2L["50d"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["50d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50d"]["Text"] = [[________________________________________]];
G2L["50d"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextLabel
G2L["50e"] = Instance.new("TextLabel", G2L["50b"]);
G2L["50e"]["TextWrapped"] = true;
G2L["50e"]["BorderSizePixel"] = 0;
G2L["50e"]["TextSize"] = 14;
G2L["50e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["50e"]["TextScaled"] = true;
G2L["50e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["50e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["50e"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["50e"]["BackgroundTransparency"] = 1;
G2L["50e"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["50e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50e"]["Text"] = [[ThirdPerson]];
G2L["50e"]["Position"] = UDim2.new(0.03655, 0, 0.18993, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2
G2L["50f"] = Instance.new("Frame", G2L["50b"]);
G2L["50f"]["BorderSizePixel"] = 0;
G2L["50f"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["50f"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["50f"]["Position"] = UDim2.new(0.7576, 0, 0.19774, 0);
G2L["50f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50f"]["Name"] = [[Enable2]];
G2L["50f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.UICorner
G2L["510"] = Instance.new("UICorner", G2L["50f"]);
G2L["510"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.TextButton
G2L["511"] = Instance.new("TextButton", G2L["50f"]);
G2L["511"]["BorderSizePixel"] = 0;
G2L["511"]["TextTransparency"] = 1;
G2L["511"]["TextSize"] = 14;
G2L["511"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["511"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["511"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["511"]["BackgroundTransparency"] = 1;
G2L["511"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["511"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.TextButton.LocalScript
G2L["512"] = Instance.new("LocalScript", G2L["511"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.TextButton.ModuleScript
G2L["513"] = Instance.new("ModuleScript", G2L["511"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.TextButton.Settings
G2L["514"] = Instance.new("ModuleScript", G2L["511"]);
G2L["514"]["Name"] = [[Settings]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.TextButton.UICorner
G2L["515"] = Instance.new("UICorner", G2L["511"]);
G2L["515"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.TextButton.UIAspectRatioConstraint
G2L["516"] = Instance.new("UIAspectRatioConstraint", G2L["511"]);
G2L["516"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.Carget
G2L["517"] = Instance.new("Frame", G2L["50f"]);
G2L["517"]["BorderSizePixel"] = 0;
G2L["517"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["517"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["517"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["517"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["517"]["Name"] = [[Carget]];
G2L["517"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.Carget.UICorner
G2L["518"] = Instance.new("UICorner", G2L["517"]);
G2L["518"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.Carget.UIAspectRatioConstraint
G2L["519"] = Instance.new("UIAspectRatioConstraint", G2L["517"]);
G2L["519"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.UIAspectRatioConstraint
G2L["51a"] = Instance.new("UIAspectRatioConstraint", G2L["50f"]);
G2L["51a"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.Enabled
G2L["51b"] = Instance.new("BoolValue", G2L["50f"]);
G2L["51b"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextLabel
G2L["51c"] = Instance.new("TextLabel", G2L["50b"]);
G2L["51c"]["TextWrapped"] = true;
G2L["51c"]["BorderSizePixel"] = 0;
G2L["51c"]["TextSize"] = 14;
G2L["51c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["51c"]["TextScaled"] = true;
G2L["51c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["51c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["51c"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["51c"]["BackgroundTransparency"] = 1;
G2L["51c"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["51c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51c"]["Text"] = [[AntiAfk]];
G2L["51c"]["Position"] = UDim2.new(0.03655, 0, 0.29149, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3
G2L["51d"] = Instance.new("Frame", G2L["50b"]);
G2L["51d"]["BorderSizePixel"] = 0;
G2L["51d"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["51d"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["51d"]["Position"] = UDim2.new(0.7576, 0, 0.29931, 0);
G2L["51d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51d"]["Name"] = [[Enable3]];
G2L["51d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.UICorner
G2L["51e"] = Instance.new("UICorner", G2L["51d"]);
G2L["51e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton
G2L["51f"] = Instance.new("TextButton", G2L["51d"]);
G2L["51f"]["BorderSizePixel"] = 0;
G2L["51f"]["TextTransparency"] = 1;
G2L["51f"]["TextSize"] = 14;
G2L["51f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["51f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["51f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["51f"]["BackgroundTransparency"] = 1;
G2L["51f"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["51f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.LocalScript
G2L["520"] = Instance.new("LocalScript", G2L["51f"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.ModuleScript
G2L["521"] = Instance.new("ModuleScript", G2L["51f"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.UICorner
G2L["522"] = Instance.new("UICorner", G2L["51f"]);
G2L["522"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.UIAspectRatioConstraint
G2L["523"] = Instance.new("UIAspectRatioConstraint", G2L["51f"]);
G2L["523"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget
G2L["524"] = Instance.new("Frame", G2L["51d"]);
G2L["524"]["BorderSizePixel"] = 0;
G2L["524"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["524"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["524"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["524"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["524"]["Name"] = [[Carget]];
G2L["524"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget.UICorner
G2L["525"] = Instance.new("UICorner", G2L["524"]);
G2L["525"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget.UIAspectRatioConstraint
G2L["526"] = Instance.new("UIAspectRatioConstraint", G2L["524"]);
G2L["526"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.UIAspectRatioConstraint
G2L["527"] = Instance.new("UIAspectRatioConstraint", G2L["51d"]);
G2L["527"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Enabled
G2L["528"] = Instance.new("BoolValue", G2L["51d"]);
G2L["528"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextBox
G2L["529"] = Instance.new("TextBox", G2L["50b"]);
G2L["529"]["BorderSizePixel"] = 0;
G2L["529"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["529"]["TextSize"] = 14;
G2L["529"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["529"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["529"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["529"]["PlaceholderText"] = [[Zoom (5)]];
G2L["529"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["529"]["Position"] = UDim2.new(-0.00003, 0, 0.82532, 0);
G2L["529"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["529"]["Text"] = [[]];
G2L["529"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextBox.LocalScript
G2L["52a"] = Instance.new("LocalScript", G2L["529"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextLabel
G2L["52b"] = Instance.new("TextLabel", G2L["50b"]);
G2L["52b"]["TextWrapped"] = true;
G2L["52b"]["BorderSizePixel"] = 0;
G2L["52b"]["TextSize"] = 14;
G2L["52b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["52b"]["TextScaled"] = true;
G2L["52b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["52b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["52b"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["52b"]["BackgroundTransparency"] = 1;
G2L["52b"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["52b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["52b"]["Text"] = [[AntiAim]];
G2L["52b"]["Position"] = UDim2.new(0.03655, 0, 0.39813, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3
G2L["52c"] = Instance.new("Frame", G2L["50b"]);
G2L["52c"]["BorderSizePixel"] = 0;
G2L["52c"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["52c"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["52c"]["Position"] = UDim2.new(0.7576, 0, 0.40594, 0);
G2L["52c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["52c"]["Name"] = [[Enable3]];
G2L["52c"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.UICorner
G2L["52d"] = Instance.new("UICorner", G2L["52c"]);
G2L["52d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton
G2L["52e"] = Instance.new("TextButton", G2L["52c"]);
G2L["52e"]["BorderSizePixel"] = 0;
G2L["52e"]["TextTransparency"] = 1;
G2L["52e"]["TextSize"] = 14;
G2L["52e"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["52e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["52e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["52e"]["BackgroundTransparency"] = 1;
G2L["52e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["52e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.LocalScript
G2L["52f"] = Instance.new("LocalScript", G2L["52e"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.ModuleScript
G2L["530"] = Instance.new("ModuleScript", G2L["52e"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.UICorner
G2L["531"] = Instance.new("UICorner", G2L["52e"]);
G2L["531"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.UIAspectRatioConstraint
G2L["532"] = Instance.new("UIAspectRatioConstraint", G2L["52e"]);
G2L["532"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget
G2L["533"] = Instance.new("Frame", G2L["52c"]);
G2L["533"]["BorderSizePixel"] = 0;
G2L["533"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["533"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["533"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["533"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["533"]["Name"] = [[Carget]];
G2L["533"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget.UICorner
G2L["534"] = Instance.new("UICorner", G2L["533"]);
G2L["534"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget.UIAspectRatioConstraint
G2L["535"] = Instance.new("UIAspectRatioConstraint", G2L["533"]);
G2L["535"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.UIAspectRatioConstraint
G2L["536"] = Instance.new("UIAspectRatioConstraint", G2L["52c"]);
G2L["536"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Enabled
G2L["537"] = Instance.new("BoolValue", G2L["52c"]);
G2L["537"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3
G2L["538"] = Instance.new("Frame", G2L["50b"]);
G2L["538"]["BorderSizePixel"] = 0;
G2L["538"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["538"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["538"]["Position"] = UDim2.new(0.7576, 0, 0.50903, 0);
G2L["538"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["538"]["Name"] = [[Enable3]];
G2L["538"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.UICorner
G2L["539"] = Instance.new("UICorner", G2L["538"]);
G2L["539"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton
G2L["53a"] = Instance.new("TextButton", G2L["538"]);
G2L["53a"]["BorderSizePixel"] = 0;
G2L["53a"]["TextTransparency"] = 1;
G2L["53a"]["TextSize"] = 14;
G2L["53a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["53a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["53a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["53a"]["BackgroundTransparency"] = 1;
G2L["53a"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["53a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.LocalScript
G2L["53b"] = Instance.new("LocalScript", G2L["53a"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.ModuleScript
G2L["53c"] = Instance.new("ModuleScript", G2L["53a"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.UICorner
G2L["53d"] = Instance.new("UICorner", G2L["53a"]);
G2L["53d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.UIAspectRatioConstraint
G2L["53e"] = Instance.new("UIAspectRatioConstraint", G2L["53a"]);
G2L["53e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget
G2L["53f"] = Instance.new("Frame", G2L["538"]);
G2L["53f"]["BorderSizePixel"] = 0;
G2L["53f"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["53f"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["53f"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["53f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["53f"]["Name"] = [[Carget]];
G2L["53f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget.UICorner
G2L["540"] = Instance.new("UICorner", G2L["53f"]);
G2L["540"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget.UIAspectRatioConstraint
G2L["541"] = Instance.new("UIAspectRatioConstraint", G2L["53f"]);
G2L["541"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.UIAspectRatioConstraint
G2L["542"] = Instance.new("UIAspectRatioConstraint", G2L["538"]);
G2L["542"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Enabled
G2L["543"] = Instance.new("BoolValue", G2L["538"]);
G2L["543"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextLabel
G2L["544"] = Instance.new("TextLabel", G2L["50b"]);
G2L["544"]["TextWrapped"] = true;
G2L["544"]["BorderSizePixel"] = 0;
G2L["544"]["TextSize"] = 14;
G2L["544"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["544"]["TextScaled"] = true;
G2L["544"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["544"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["544"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["544"]["BackgroundTransparency"] = 1;
G2L["544"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["544"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["544"]["Text"] = [[FlingAura]];
G2L["544"]["Position"] = UDim2.new(0.03655, 0, 0.50122, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextLabel
G2L["545"] = Instance.new("TextLabel", G2L["50b"]);
G2L["545"]["TextWrapped"] = true;
G2L["545"]["BorderSizePixel"] = 0;
G2L["545"]["TextSize"] = 14;
G2L["545"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["545"]["TextScaled"] = true;
G2L["545"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["545"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["545"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["545"]["BackgroundTransparency"] = 1;
G2L["545"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["545"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["545"]["Text"] = [[Jerk]];
G2L["545"]["Position"] = UDim2.new(0.03655, 0, 0.60246, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3
G2L["546"] = Instance.new("Frame", G2L["50b"]);
G2L["546"]["BorderSizePixel"] = 0;
G2L["546"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["546"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["546"]["Position"] = UDim2.new(0.7576, 0, 0.61027, 0);
G2L["546"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["546"]["Name"] = [[Enable3]];
G2L["546"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.UICorner
G2L["547"] = Instance.new("UICorner", G2L["546"]);
G2L["547"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton
G2L["548"] = Instance.new("TextButton", G2L["546"]);
G2L["548"]["BorderSizePixel"] = 0;
G2L["548"]["TextTransparency"] = 1;
G2L["548"]["TextSize"] = 14;
G2L["548"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["548"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["548"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["548"]["BackgroundTransparency"] = 1;
G2L["548"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["548"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.LocalScript
G2L["549"] = Instance.new("LocalScript", G2L["548"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.UICorner
G2L["54a"] = Instance.new("UICorner", G2L["548"]);
G2L["54a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.UIAspectRatioConstraint
G2L["54b"] = Instance.new("UIAspectRatioConstraint", G2L["548"]);
G2L["54b"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget
G2L["54c"] = Instance.new("Frame", G2L["546"]);
G2L["54c"]["BorderSizePixel"] = 0;
G2L["54c"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["54c"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["54c"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["54c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["54c"]["Name"] = [[Carget]];
G2L["54c"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget.UICorner
G2L["54d"] = Instance.new("UICorner", G2L["54c"]);
G2L["54d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Carget.UIAspectRatioConstraint
G2L["54e"] = Instance.new("UIAspectRatioConstraint", G2L["54c"]);
G2L["54e"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.UIAspectRatioConstraint
G2L["54f"] = Instance.new("UIAspectRatioConstraint", G2L["546"]);
G2L["54f"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.Enabled
G2L["550"] = Instance.new("BoolValue", G2L["546"]);
G2L["550"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX
G2L["551"] = Instance.new("Frame", G2L["50a"]);
G2L["551"]["BorderSizePixel"] = 0;
G2L["551"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["551"]["Size"] = UDim2.new(0.492, 0, 0.13, 0);
G2L["551"]["Position"] = UDim2.new(-0.00259, 0, 0.064, 0);
G2L["551"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["551"]["Name"] = [[HITSFX]];
G2L["551"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["552"] = Instance.new("TextLabel", G2L["551"]);
G2L["552"]["TextWrapped"] = true;
G2L["552"]["BorderSizePixel"] = 0;
G2L["552"]["TextSize"] = 14;
G2L["552"]["TextScaled"] = true;
G2L["552"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["552"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["552"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["552"]["BackgroundTransparency"] = 1;
G2L["552"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["552"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["552"]["Text"] = [[HitSFX]];
G2L["552"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["553"] = Instance.new("TextLabel", G2L["551"]);
G2L["553"]["TextWrapped"] = true;
G2L["553"]["BorderSizePixel"] = 0;
G2L["553"]["TextSize"] = 14;
G2L["553"]["TextScaled"] = true;
G2L["553"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["553"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["553"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["553"]["BackgroundTransparency"] = 1;
G2L["553"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["553"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["553"]["Text"] = [[________________________________________]];
G2L["553"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["554"] = Instance.new("TextLabel", G2L["551"]);
G2L["554"]["TextWrapped"] = true;
G2L["554"]["BorderSizePixel"] = 0;
G2L["554"]["TextSize"] = 14;
G2L["554"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["554"]["TextScaled"] = true;
G2L["554"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["554"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["554"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["554"]["BackgroundTransparency"] = 1;
G2L["554"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["554"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["554"]["Text"] = [[Enable]];
G2L["554"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1
G2L["555"] = Instance.new("Frame", G2L["551"]);
G2L["555"]["BorderSizePixel"] = 0;
G2L["555"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["555"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["555"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["555"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["555"]["Name"] = [[Enable1]];
G2L["555"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.UICorner
G2L["556"] = Instance.new("UICorner", G2L["555"]);
G2L["556"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.TextButton
G2L["557"] = Instance.new("TextButton", G2L["555"]);
G2L["557"]["BorderSizePixel"] = 0;
G2L["557"]["TextTransparency"] = 1;
G2L["557"]["TextSize"] = 14;
G2L["557"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["557"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["557"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["557"]["BackgroundTransparency"] = 1;
G2L["557"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["557"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.TextButton.LocalScript
G2L["558"] = Instance.new("LocalScript", G2L["557"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.TextButton.UICorner
G2L["559"] = Instance.new("UICorner", G2L["557"]);
G2L["559"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.TextButton.UIAspectRatioConstraint
G2L["55a"] = Instance.new("UIAspectRatioConstraint", G2L["557"]);
G2L["55a"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.Carget
G2L["55b"] = Instance.new("Frame", G2L["555"]);
G2L["55b"]["BorderSizePixel"] = 0;
G2L["55b"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["55b"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["55b"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["55b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["55b"]["Name"] = [[Carget]];
G2L["55b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.Carget.UICorner
G2L["55c"] = Instance.new("UICorner", G2L["55b"]);
G2L["55c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.Carget.UIAspectRatioConstraint
G2L["55d"] = Instance.new("UIAspectRatioConstraint", G2L["55b"]);
G2L["55d"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.UIAspectRatioConstraint
G2L["55e"] = Instance.new("UIAspectRatioConstraint", G2L["555"]);
G2L["55e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.Enabled
G2L["55f"] = Instance.new("BoolValue", G2L["555"]);
G2L["55f"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["560"] = Instance.new("TextLabel", G2L["551"]);
G2L["560"]["TextWrapped"] = true;
G2L["560"]["BorderSizePixel"] = 0;
G2L["560"]["TextSize"] = 14;
G2L["560"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["560"]["TextScaled"] = true;
G2L["560"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["560"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["560"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["560"]["BackgroundTransparency"] = 1;
G2L["560"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["560"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["560"]["Text"] = [[Rust]];
G2L["560"]["Position"] = UDim2.new(0.032, 0, 0.28906, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable
G2L["561"] = Instance.new("Frame", G2L["551"]);
G2L["561"]["BorderSizePixel"] = 0;
G2L["561"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["561"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["561"]["Position"] = UDim2.new(0.753, 0, 0.29687, 0);
G2L["561"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["561"]["Name"] = [[Enable]];
G2L["561"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UICorner
G2L["562"] = Instance.new("UICorner", G2L["561"]);
G2L["562"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton
G2L["563"] = Instance.new("TextButton", G2L["561"]);
G2L["563"]["BorderSizePixel"] = 0;
G2L["563"]["TextTransparency"] = 1;
G2L["563"]["TextSize"] = 14;
G2L["563"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["563"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["563"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["563"]["BackgroundTransparency"] = 1;
G2L["563"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["563"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
G2L["564"] = Instance.new("LocalScript", G2L["563"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UICorner
G2L["565"] = Instance.new("UICorner", G2L["563"]);
G2L["565"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UIAspectRatioConstraint
G2L["566"] = Instance.new("UIAspectRatioConstraint", G2L["563"]);
G2L["566"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget
G2L["567"] = Instance.new("Frame", G2L["561"]);
G2L["567"]["BorderSizePixel"] = 0;
G2L["567"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["567"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["567"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["567"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["567"]["Name"] = [[Carget]];
G2L["567"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UICorner
G2L["568"] = Instance.new("UICorner", G2L["567"]);
G2L["568"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UIAspectRatioConstraint
G2L["569"] = Instance.new("UIAspectRatioConstraint", G2L["567"]);
G2L["569"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UIAspectRatioConstraint
G2L["56a"] = Instance.new("UIAspectRatioConstraint", G2L["561"]);
G2L["56a"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Enabled
G2L["56b"] = Instance.new("BoolValue", G2L["561"]);
G2L["56b"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Bypass1
G2L["56c"] = Instance.new("BoolValue", G2L["551"]);
G2L["56c"]["Name"] = [[Bypass1]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Value
G2L["56d"] = Instance.new("StringValue", G2L["551"]);
G2L["56d"]["Value"] = [[Rust]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["56e"] = Instance.new("TextLabel", G2L["551"]);
G2L["56e"]["TextWrapped"] = true;
G2L["56e"]["BorderSizePixel"] = 0;
G2L["56e"]["TextSize"] = 14;
G2L["56e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["56e"]["TextScaled"] = true;
G2L["56e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["56e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["56e"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["56e"]["BackgroundTransparency"] = 1;
G2L["56e"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["56e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["56e"]["Text"] = [[Beep1]];
G2L["56e"]["Position"] = UDim2.new(0.032, 0, 0.39215, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable
G2L["56f"] = Instance.new("Frame", G2L["551"]);
G2L["56f"]["BorderSizePixel"] = 0;
G2L["56f"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["56f"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["56f"]["Position"] = UDim2.new(0.753, 0, 0.39996, 0);
G2L["56f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["56f"]["Name"] = [[Enable]];
G2L["56f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UICorner
G2L["570"] = Instance.new("UICorner", G2L["56f"]);
G2L["570"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton
G2L["571"] = Instance.new("TextButton", G2L["56f"]);
G2L["571"]["BorderSizePixel"] = 0;
G2L["571"]["TextTransparency"] = 1;
G2L["571"]["TextSize"] = 14;
G2L["571"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["571"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["571"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["571"]["BackgroundTransparency"] = 1;
G2L["571"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["571"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
G2L["572"] = Instance.new("LocalScript", G2L["571"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UICorner
G2L["573"] = Instance.new("UICorner", G2L["571"]);
G2L["573"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UIAspectRatioConstraint
G2L["574"] = Instance.new("UIAspectRatioConstraint", G2L["571"]);
G2L["574"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget
G2L["575"] = Instance.new("Frame", G2L["56f"]);
G2L["575"]["BorderSizePixel"] = 0;
G2L["575"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["575"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["575"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["575"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["575"]["Name"] = [[Carget]];
G2L["575"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UICorner
G2L["576"] = Instance.new("UICorner", G2L["575"]);
G2L["576"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UIAspectRatioConstraint
G2L["577"] = Instance.new("UIAspectRatioConstraint", G2L["575"]);
G2L["577"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UIAspectRatioConstraint
G2L["578"] = Instance.new("UIAspectRatioConstraint", G2L["56f"]);
G2L["578"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Enabled
G2L["579"] = Instance.new("BoolValue", G2L["56f"]);
G2L["579"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["57a"] = Instance.new("TextLabel", G2L["551"]);
G2L["57a"]["TextWrapped"] = true;
G2L["57a"]["BorderSizePixel"] = 0;
G2L["57a"]["TextSize"] = 14;
G2L["57a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["57a"]["TextScaled"] = true;
G2L["57a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["57a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["57a"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["57a"]["BackgroundTransparency"] = 1;
G2L["57a"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["57a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57a"]["Text"] = [[Bass1]];
G2L["57a"]["Position"] = UDim2.new(0.032, 0, 0.49167, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable
G2L["57b"] = Instance.new("Frame", G2L["551"]);
G2L["57b"]["BorderSizePixel"] = 0;
G2L["57b"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["57b"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["57b"]["Position"] = UDim2.new(0.753, 0, 0.49949, 0);
G2L["57b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57b"]["Name"] = [[Enable]];
G2L["57b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UICorner
G2L["57c"] = Instance.new("UICorner", G2L["57b"]);
G2L["57c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton
G2L["57d"] = Instance.new("TextButton", G2L["57b"]);
G2L["57d"]["BorderSizePixel"] = 0;
G2L["57d"]["TextTransparency"] = 1;
G2L["57d"]["TextSize"] = 14;
G2L["57d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["57d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["57d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["57d"]["BackgroundTransparency"] = 1;
G2L["57d"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["57d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
G2L["57e"] = Instance.new("LocalScript", G2L["57d"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UICorner
G2L["57f"] = Instance.new("UICorner", G2L["57d"]);
G2L["57f"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UIAspectRatioConstraint
G2L["580"] = Instance.new("UIAspectRatioConstraint", G2L["57d"]);
G2L["580"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget
G2L["581"] = Instance.new("Frame", G2L["57b"]);
G2L["581"]["BorderSizePixel"] = 0;
G2L["581"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["581"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["581"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["581"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["581"]["Name"] = [[Carget]];
G2L["581"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UICorner
G2L["582"] = Instance.new("UICorner", G2L["581"]);
G2L["582"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UIAspectRatioConstraint
G2L["583"] = Instance.new("UIAspectRatioConstraint", G2L["581"]);
G2L["583"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UIAspectRatioConstraint
G2L["584"] = Instance.new("UIAspectRatioConstraint", G2L["57b"]);
G2L["584"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Enabled
G2L["585"] = Instance.new("BoolValue", G2L["57b"]);
G2L["585"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable
G2L["586"] = Instance.new("Frame", G2L["551"]);
G2L["586"]["BorderSizePixel"] = 0;
G2L["586"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["586"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["586"]["Position"] = UDim2.new(0.753, 0, 0.59902, 0);
G2L["586"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["586"]["Name"] = [[Enable]];
G2L["586"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UICorner
G2L["587"] = Instance.new("UICorner", G2L["586"]);
G2L["587"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton
G2L["588"] = Instance.new("TextButton", G2L["586"]);
G2L["588"]["BorderSizePixel"] = 0;
G2L["588"]["TextTransparency"] = 1;
G2L["588"]["TextSize"] = 14;
G2L["588"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["588"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["588"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["588"]["BackgroundTransparency"] = 1;
G2L["588"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["588"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
G2L["589"] = Instance.new("LocalScript", G2L["588"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UICorner
G2L["58a"] = Instance.new("UICorner", G2L["588"]);
G2L["58a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UIAspectRatioConstraint
G2L["58b"] = Instance.new("UIAspectRatioConstraint", G2L["588"]);
G2L["58b"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget
G2L["58c"] = Instance.new("Frame", G2L["586"]);
G2L["58c"]["BorderSizePixel"] = 0;
G2L["58c"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["58c"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["58c"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["58c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["58c"]["Name"] = [[Carget]];
G2L["58c"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UICorner
G2L["58d"] = Instance.new("UICorner", G2L["58c"]);
G2L["58d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UIAspectRatioConstraint
G2L["58e"] = Instance.new("UIAspectRatioConstraint", G2L["58c"]);
G2L["58e"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UIAspectRatioConstraint
G2L["58f"] = Instance.new("UIAspectRatioConstraint", G2L["586"]);
G2L["58f"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Enabled
G2L["590"] = Instance.new("BoolValue", G2L["586"]);
G2L["590"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["591"] = Instance.new("TextLabel", G2L["551"]);
G2L["591"]["TextWrapped"] = true;
G2L["591"]["BorderSizePixel"] = 0;
G2L["591"]["TextSize"] = 14;
G2L["591"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["591"]["TextScaled"] = true;
G2L["591"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["591"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["591"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["591"]["BackgroundTransparency"] = 1;
G2L["591"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["591"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["591"]["Text"] = [[Classic]];
G2L["591"]["Position"] = UDim2.new(0.032, 0, 0.5912, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["592"] = Instance.new("TextLabel", G2L["551"]);
G2L["592"]["TextWrapped"] = true;
G2L["592"]["BorderSizePixel"] = 0;
G2L["592"]["TextSize"] = 14;
G2L["592"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["592"]["TextScaled"] = true;
G2L["592"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["592"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["592"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["592"]["BackgroundTransparency"] = 1;
G2L["592"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["592"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["592"]["Text"] = [[Hit1]];
G2L["592"]["Position"] = UDim2.new(0.032, 0, 0.69073, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable
G2L["593"] = Instance.new("Frame", G2L["551"]);
G2L["593"]["BorderSizePixel"] = 0;
G2L["593"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["593"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["593"]["Position"] = UDim2.new(0.753, 0, 0.69855, 0);
G2L["593"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["593"]["Name"] = [[Enable]];
G2L["593"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UICorner
G2L["594"] = Instance.new("UICorner", G2L["593"]);
G2L["594"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton
G2L["595"] = Instance.new("TextButton", G2L["593"]);
G2L["595"]["BorderSizePixel"] = 0;
G2L["595"]["TextTransparency"] = 1;
G2L["595"]["TextSize"] = 14;
G2L["595"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["595"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["595"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["595"]["BackgroundTransparency"] = 1;
G2L["595"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["595"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
G2L["596"] = Instance.new("LocalScript", G2L["595"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UICorner
G2L["597"] = Instance.new("UICorner", G2L["595"]);
G2L["597"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UIAspectRatioConstraint
G2L["598"] = Instance.new("UIAspectRatioConstraint", G2L["595"]);
G2L["598"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget
G2L["599"] = Instance.new("Frame", G2L["593"]);
G2L["599"]["BorderSizePixel"] = 0;
G2L["599"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["599"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["599"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["599"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["599"]["Name"] = [[Carget]];
G2L["599"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UICorner
G2L["59a"] = Instance.new("UICorner", G2L["599"]);
G2L["59a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UIAspectRatioConstraint
G2L["59b"] = Instance.new("UIAspectRatioConstraint", G2L["599"]);
G2L["59b"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UIAspectRatioConstraint
G2L["59c"] = Instance.new("UIAspectRatioConstraint", G2L["593"]);
G2L["59c"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Enabled
G2L["59d"] = Instance.new("BoolValue", G2L["593"]);
G2L["59d"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["59e"] = Instance.new("TextLabel", G2L["551"]);
G2L["59e"]["TextWrapped"] = true;
G2L["59e"]["BorderSizePixel"] = 0;
G2L["59e"]["TextSize"] = 14;
G2L["59e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["59e"]["TextScaled"] = true;
G2L["59e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["59e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["59e"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["59e"]["BackgroundTransparency"] = 1;
G2L["59e"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["59e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["59e"]["Text"] = [[Hit2]];
G2L["59e"]["Position"] = UDim2.new(0.032, 0, 0.79026, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable
G2L["59f"] = Instance.new("Frame", G2L["551"]);
G2L["59f"]["BorderSizePixel"] = 0;
G2L["59f"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["59f"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["59f"]["Position"] = UDim2.new(0.753, 0, 0.79807, 0);
G2L["59f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["59f"]["Name"] = [[Enable]];
G2L["59f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UICorner
G2L["5a0"] = Instance.new("UICorner", G2L["59f"]);
G2L["5a0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton
G2L["5a1"] = Instance.new("TextButton", G2L["59f"]);
G2L["5a1"]["BorderSizePixel"] = 0;
G2L["5a1"]["TextTransparency"] = 1;
G2L["5a1"]["TextSize"] = 14;
G2L["5a1"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5a1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5a1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5a1"]["BackgroundTransparency"] = 1;
G2L["5a1"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["5a1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
G2L["5a2"] = Instance.new("LocalScript", G2L["5a1"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UICorner
G2L["5a3"] = Instance.new("UICorner", G2L["5a1"]);
G2L["5a3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UIAspectRatioConstraint
G2L["5a4"] = Instance.new("UIAspectRatioConstraint", G2L["5a1"]);
G2L["5a4"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget
G2L["5a5"] = Instance.new("Frame", G2L["59f"]);
G2L["5a5"]["BorderSizePixel"] = 0;
G2L["5a5"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["5a5"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["5a5"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["5a5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5a5"]["Name"] = [[Carget]];
G2L["5a5"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UICorner
G2L["5a6"] = Instance.new("UICorner", G2L["5a5"]);
G2L["5a6"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UIAspectRatioConstraint
G2L["5a7"] = Instance.new("UIAspectRatioConstraint", G2L["5a5"]);
G2L["5a7"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UIAspectRatioConstraint
G2L["5a8"] = Instance.new("UIAspectRatioConstraint", G2L["59f"]);
G2L["5a8"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Enabled
G2L["5a9"] = Instance.new("BoolValue", G2L["59f"]);
G2L["5a9"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.TextLabel
G2L["5aa"] = Instance.new("TextLabel", G2L["551"]);
G2L["5aa"]["TextWrapped"] = true;
G2L["5aa"]["BorderSizePixel"] = 0;
G2L["5aa"]["TextSize"] = 14;
G2L["5aa"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5aa"]["TextScaled"] = true;
G2L["5aa"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5aa"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5aa"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["5aa"]["BackgroundTransparency"] = 1;
G2L["5aa"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["5aa"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5aa"]["Text"] = [[Hit3]];
G2L["5aa"]["Position"] = UDim2.new(0.032, 0, 0.88979, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable
G2L["5ab"] = Instance.new("Frame", G2L["551"]);
G2L["5ab"]["BorderSizePixel"] = 0;
G2L["5ab"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["5ab"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["5ab"]["Position"] = UDim2.new(0.753, 0, 0.8976, 0);
G2L["5ab"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5ab"]["Name"] = [[Enable]];
G2L["5ab"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UICorner
G2L["5ac"] = Instance.new("UICorner", G2L["5ab"]);
G2L["5ac"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton
G2L["5ad"] = Instance.new("TextButton", G2L["5ab"]);
G2L["5ad"]["BorderSizePixel"] = 0;
G2L["5ad"]["TextTransparency"] = 1;
G2L["5ad"]["TextSize"] = 14;
G2L["5ad"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5ad"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5ad"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5ad"]["BackgroundTransparency"] = 1;
G2L["5ad"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["5ad"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
G2L["5ae"] = Instance.new("LocalScript", G2L["5ad"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UICorner
G2L["5af"] = Instance.new("UICorner", G2L["5ad"]);
G2L["5af"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.UIAspectRatioConstraint
G2L["5b0"] = Instance.new("UIAspectRatioConstraint", G2L["5ad"]);
G2L["5b0"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget
G2L["5b1"] = Instance.new("Frame", G2L["5ab"]);
G2L["5b1"]["BorderSizePixel"] = 0;
G2L["5b1"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["5b1"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["5b1"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["5b1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5b1"]["Name"] = [[Carget]];
G2L["5b1"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UICorner
G2L["5b2"] = Instance.new("UICorner", G2L["5b1"]);
G2L["5b2"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Carget.UIAspectRatioConstraint
G2L["5b3"] = Instance.new("UIAspectRatioConstraint", G2L["5b1"]);
G2L["5b3"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.UIAspectRatioConstraint
G2L["5b4"] = Instance.new("UIAspectRatioConstraint", G2L["5ab"]);
G2L["5b4"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.Enabled
G2L["5b5"] = Instance.new("BoolValue", G2L["5ab"]);
G2L["5b5"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Volume
G2L["5b6"] = Instance.new("NumberValue", G2L["551"]);
G2L["5b6"]["Name"] = [[Volume]];
G2L["5b6"]["Value"] = 0.5;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency
G2L["5b7"] = Instance.new("Frame", G2L["551"]);
G2L["5b7"]["BorderSizePixel"] = 0;
G2L["5b7"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["5b7"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["5b7"]["Position"] = UDim2.new(0.02668, 0, 1.00652, 0);
G2L["5b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5b7"]["Name"] = [[Transparency]];
G2L["5b7"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency.UICorner
G2L["5b8"] = Instance.new("UICorner", G2L["5b7"]);
G2L["5b8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency.Enabled
G2L["5b9"] = Instance.new("BoolValue", G2L["5b7"]);
G2L["5b9"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency.TextLabel
G2L["5ba"] = Instance.new("TextLabel", G2L["5b7"]);
G2L["5ba"]["TextWrapped"] = true;
G2L["5ba"]["Interactable"] = false;
G2L["5ba"]["BorderSizePixel"] = 0;
G2L["5ba"]["TextSize"] = 14;
G2L["5ba"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5ba"]["TextScaled"] = true;
G2L["5ba"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5ba"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5ba"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["5ba"]["BackgroundTransparency"] = 1;
G2L["5ba"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["5ba"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5ba"]["Text"] = [[Volume: 0.5]];
G2L["5ba"]["Position"] = UDim2.new(0.02586, 0, 0.01268, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency.Carget
G2L["5bb"] = Instance.new("Frame", G2L["5b7"]);
G2L["5bb"]["ZIndex"] = -333;
G2L["5bb"]["BorderSizePixel"] = 0;
G2L["5bb"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["5bb"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["5bb"]["Position"] = UDim2.new(0.4525, 0, 0, 0);
G2L["5bb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5bb"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency.Carget.UICorner
G2L["5bc"] = Instance.new("UICorner", G2L["5bb"]);
G2L["5bc"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency.Carget.TextButton
G2L["5bd"] = Instance.new("TextButton", G2L["5bb"]);
G2L["5bd"]["BorderSizePixel"] = 0;
G2L["5bd"]["TextTransparency"] = 1;
G2L["5bd"]["TextSize"] = 14;
G2L["5bd"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5bd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5bd"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5bd"]["BackgroundTransparency"] = 1;
G2L["5bd"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["5bd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency.Carget.TextButton.LocalScript
G2L["5be"] = Instance.new("LocalScript", G2L["5bd"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency.Carget.UIAspectRatioConstraint
G2L["5bf"] = Instance.new("UIAspectRatioConstraint", G2L["5bb"]);
G2L["5bf"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam
G2L["5c0"] = Instance.new("Frame", G2L["50a"]);
G2L["5c0"]["BorderSizePixel"] = 0;
G2L["5c0"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["5c0"]["Size"] = UDim2.new(0.492, 0, 0.13, 0);
G2L["5c0"]["Position"] = UDim2.new(-0.00259, 0, 0.34, 0);
G2L["5c0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c0"]["Name"] = [[FreeCam]];
G2L["5c0"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.TextLabel
G2L["5c1"] = Instance.new("TextLabel", G2L["5c0"]);
G2L["5c1"]["TextWrapped"] = true;
G2L["5c1"]["BorderSizePixel"] = 0;
G2L["5c1"]["TextSize"] = 14;
G2L["5c1"]["TextScaled"] = true;
G2L["5c1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5c1"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["5c1"]["BackgroundTransparency"] = 1;
G2L["5c1"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["5c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c1"]["Text"] = [[Freecam]];
G2L["5c1"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.TextLabel
G2L["5c2"] = Instance.new("TextLabel", G2L["5c0"]);
G2L["5c2"]["TextWrapped"] = true;
G2L["5c2"]["BorderSizePixel"] = 0;
G2L["5c2"]["TextSize"] = 14;
G2L["5c2"]["TextScaled"] = true;
G2L["5c2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5c2"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["5c2"]["BackgroundTransparency"] = 1;
G2L["5c2"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["5c2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c2"]["Text"] = [[________________________________________]];
G2L["5c2"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.TextLabel
G2L["5c3"] = Instance.new("TextLabel", G2L["5c0"]);
G2L["5c3"]["TextWrapped"] = true;
G2L["5c3"]["BorderSizePixel"] = 0;
G2L["5c3"]["TextSize"] = 14;
G2L["5c3"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5c3"]["TextScaled"] = true;
G2L["5c3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c3"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5c3"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["5c3"]["BackgroundTransparency"] = 1;
G2L["5c3"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["5c3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c3"]["Text"] = [[Enable]];
G2L["5c3"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1
G2L["5c4"] = Instance.new("Frame", G2L["5c0"]);
G2L["5c4"]["BorderSizePixel"] = 0;
G2L["5c4"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["5c4"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["5c4"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["5c4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c4"]["Name"] = [[Enable1]];
G2L["5c4"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.UICorner
G2L["5c5"] = Instance.new("UICorner", G2L["5c4"]);
G2L["5c5"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.TextButton
G2L["5c6"] = Instance.new("TextButton", G2L["5c4"]);
G2L["5c6"]["BorderSizePixel"] = 0;
G2L["5c6"]["TextTransparency"] = 1;
G2L["5c6"]["TextSize"] = 14;
G2L["5c6"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5c6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5c6"]["BackgroundTransparency"] = 1;
G2L["5c6"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["5c6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.TextButton.LocalScript
G2L["5c7"] = Instance.new("LocalScript", G2L["5c6"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.TextButton.ModuleScript
G2L["5c8"] = Instance.new("ModuleScript", G2L["5c6"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.TextButton.UICorner
G2L["5c9"] = Instance.new("UICorner", G2L["5c6"]);
G2L["5c9"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.TextButton.UIAspectRatioConstraint
G2L["5ca"] = Instance.new("UIAspectRatioConstraint", G2L["5c6"]);
G2L["5ca"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.Carget
G2L["5cb"] = Instance.new("Frame", G2L["5c4"]);
G2L["5cb"]["BorderSizePixel"] = 0;
G2L["5cb"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["5cb"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["5cb"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["5cb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5cb"]["Name"] = [[Carget]];
G2L["5cb"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.Carget.UICorner
G2L["5cc"] = Instance.new("UICorner", G2L["5cb"]);
G2L["5cc"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.Carget.UIAspectRatioConstraint
G2L["5cd"] = Instance.new("UIAspectRatioConstraint", G2L["5cb"]);
G2L["5cd"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.UIAspectRatioConstraint
G2L["5ce"] = Instance.new("UIAspectRatioConstraint", G2L["5c4"]);
G2L["5ce"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.Enabled
G2L["5cf"] = Instance.new("BoolValue", G2L["5c4"]);
G2L["5cf"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency
G2L["5d0"] = Instance.new("Frame", G2L["5c0"]);
G2L["5d0"]["BorderSizePixel"] = 0;
G2L["5d0"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["5d0"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["5d0"]["Position"] = UDim2.new(0.03665, 0, 0.32069, 0);
G2L["5d0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d0"]["Name"] = [[Transparency]];
G2L["5d0"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency.UICorner
G2L["5d1"] = Instance.new("UICorner", G2L["5d0"]);
G2L["5d1"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency.Enabled
G2L["5d2"] = Instance.new("BoolValue", G2L["5d0"]);
G2L["5d2"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency.TextLabel
G2L["5d3"] = Instance.new("TextLabel", G2L["5d0"]);
G2L["5d3"]["TextWrapped"] = true;
G2L["5d3"]["Interactable"] = false;
G2L["5d3"]["BorderSizePixel"] = 0;
G2L["5d3"]["TextSize"] = 14;
G2L["5d3"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5d3"]["TextScaled"] = true;
G2L["5d3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5d3"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5d3"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["5d3"]["BackgroundTransparency"] = 1;
G2L["5d3"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["5d3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d3"]["Text"] = [[Speed: 0]];
G2L["5d3"]["Position"] = UDim2.new(0.02586, 0, -0.07775, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency.Carget
G2L["5d4"] = Instance.new("Frame", G2L["5d0"]);
G2L["5d4"]["ZIndex"] = -333;
G2L["5d4"]["BorderSizePixel"] = 0;
G2L["5d4"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["5d4"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["5d4"]["Position"] = UDim2.new(0.44793, 0, 0, 0);
G2L["5d4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d4"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency.Carget.UICorner
G2L["5d5"] = Instance.new("UICorner", G2L["5d4"]);
G2L["5d5"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency.Carget.TextButton
G2L["5d6"] = Instance.new("TextButton", G2L["5d4"]);
G2L["5d6"]["BorderSizePixel"] = 0;
G2L["5d6"]["TextTransparency"] = 1;
G2L["5d6"]["TextSize"] = 14;
G2L["5d6"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5d6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5d6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5d6"]["BackgroundTransparency"] = 1;
G2L["5d6"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["5d6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency.Carget.TextButton.LocalScript
G2L["5d7"] = Instance.new("LocalScript", G2L["5d6"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency.Carget.UIAspectRatioConstraint
G2L["5d8"] = Instance.new("UIAspectRatioConstraint", G2L["5d4"]);
G2L["5d8"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Value
G2L["5d9"] = Instance.new("StringValue", G2L["5c0"]);
G2L["5d9"]["Value"] = [[Rust]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.power
G2L["5da"] = Instance.new("NumberValue", G2L["5c0"]);
G2L["5da"]["Name"] = [[power]];
G2L["5da"]["Value"] = 5000;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.TextBox
G2L["5db"] = Instance.new("TextBox", G2L["5c0"]);
G2L["5db"]["PlaceholderColor3"] = Color3.fromRGB(180, 180, 180);
G2L["5db"]["BorderSizePixel"] = 0;
G2L["5db"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["5db"]["TextSize"] = 14;
G2L["5db"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["5db"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5db"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5db"]["PlaceholderText"] = [[BIND (NONE)]];
G2L["5db"]["Size"] = UDim2.new(1, 0, 0.14742, 0);
G2L["5db"]["Position"] = UDim2.new(0.00496, 0, 0.42104, 0);
G2L["5db"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5db"]["Text"] = [[Bind (None)]];
G2L["5db"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.TextBox.TextButton
G2L["5dc"] = Instance.new("TextButton", G2L["5db"]);
G2L["5dc"]["BorderSizePixel"] = 0;
G2L["5dc"]["TextTransparency"] = 1;
G2L["5dc"]["TextSize"] = 14;
G2L["5dc"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5dc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5dc"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5dc"]["BackgroundTransparency"] = 1;
G2L["5dc"]["Size"] = UDim2.new(0.99281, 0, 1.02118, 0);
G2L["5dc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5dc"]["Position"] = UDim2.new(0.00003, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.TextBox.TextButton.LocalScript
G2L["5dd"] = Instance.new("LocalScript", G2L["5dc"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling
G2L["5de"] = Instance.new("Frame", G2L["50a"]);
G2L["5de"]["BorderSizePixel"] = 0;
G2L["5de"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["5de"]["Size"] = UDim2.new(0.492, 0, 0.13, 0);
G2L["5de"]["Position"] = UDim2.new(-0.00259, 0, -0.00293, 0);
G2L["5de"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5de"]["Name"] = [[AntiFling]];
G2L["5de"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.TextLabel
G2L["5df"] = Instance.new("TextLabel", G2L["5de"]);
G2L["5df"]["TextWrapped"] = true;
G2L["5df"]["BorderSizePixel"] = 0;
G2L["5df"]["TextSize"] = 14;
G2L["5df"]["TextScaled"] = true;
G2L["5df"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5df"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5df"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["5df"]["BackgroundTransparency"] = 1;
G2L["5df"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["5df"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5df"]["Text"] = [[Antifling]];
G2L["5df"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.TextLabel
G2L["5e0"] = Instance.new("TextLabel", G2L["5de"]);
G2L["5e0"]["TextWrapped"] = true;
G2L["5e0"]["BorderSizePixel"] = 0;
G2L["5e0"]["TextSize"] = 14;
G2L["5e0"]["TextScaled"] = true;
G2L["5e0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5e0"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5e0"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["5e0"]["BackgroundTransparency"] = 1;
G2L["5e0"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["5e0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5e0"]["Text"] = [[________________________________________]];
G2L["5e0"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.TextLabel
G2L["5e1"] = Instance.new("TextLabel", G2L["5de"]);
G2L["5e1"]["TextWrapped"] = true;
G2L["5e1"]["BorderSizePixel"] = 0;
G2L["5e1"]["TextSize"] = 14;
G2L["5e1"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5e1"]["TextScaled"] = true;
G2L["5e1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5e1"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5e1"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["5e1"]["BackgroundTransparency"] = 1;
G2L["5e1"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["5e1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5e1"]["Text"] = [[Enable]];
G2L["5e1"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1
G2L["5e2"] = Instance.new("Frame", G2L["5de"]);
G2L["5e2"]["BorderSizePixel"] = 0;
G2L["5e2"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["5e2"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["5e2"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["5e2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5e2"]["Name"] = [[Enable1]];
G2L["5e2"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.UICorner
G2L["5e3"] = Instance.new("UICorner", G2L["5e2"]);
G2L["5e3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.TextButton
G2L["5e4"] = Instance.new("TextButton", G2L["5e2"]);
G2L["5e4"]["BorderSizePixel"] = 0;
G2L["5e4"]["TextTransparency"] = 1;
G2L["5e4"]["TextSize"] = 14;
G2L["5e4"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5e4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5e4"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5e4"]["BackgroundTransparency"] = 1;
G2L["5e4"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["5e4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.TextButton.LocalScript
G2L["5e5"] = Instance.new("LocalScript", G2L["5e4"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.TextButton.ModuleScript
G2L["5e6"] = Instance.new("ModuleScript", G2L["5e4"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.TextButton.UICorner
G2L["5e7"] = Instance.new("UICorner", G2L["5e4"]);
G2L["5e7"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.TextButton.UIAspectRatioConstraint
G2L["5e8"] = Instance.new("UIAspectRatioConstraint", G2L["5e4"]);
G2L["5e8"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.Carget
G2L["5e9"] = Instance.new("Frame", G2L["5e2"]);
G2L["5e9"]["BorderSizePixel"] = 0;
G2L["5e9"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["5e9"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["5e9"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["5e9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5e9"]["Name"] = [[Carget]];
G2L["5e9"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.Carget.UICorner
G2L["5ea"] = Instance.new("UICorner", G2L["5e9"]);
G2L["5ea"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.Carget.UIAspectRatioConstraint
G2L["5eb"] = Instance.new("UIAspectRatioConstraint", G2L["5e9"]);
G2L["5eb"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.UIAspectRatioConstraint
G2L["5ec"] = Instance.new("UIAspectRatioConstraint", G2L["5e2"]);
G2L["5ec"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.Enabled
G2L["5ed"] = Instance.new("BoolValue", G2L["5e2"]);
G2L["5ed"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.TextLabel
G2L["5ee"] = Instance.new("TextLabel", G2L["5de"]);
G2L["5ee"]["TextWrapped"] = true;
G2L["5ee"]["BorderSizePixel"] = 0;
G2L["5ee"]["TextSize"] = 14;
G2L["5ee"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5ee"]["TextScaled"] = true;
G2L["5ee"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5ee"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5ee"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["5ee"]["BackgroundTransparency"] = 1;
G2L["5ee"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["5ee"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5ee"]["Text"] = [[AntiTool]];
G2L["5ee"]["Position"] = UDim2.new(0.032, 0, 0.28906, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable
G2L["5ef"] = Instance.new("Frame", G2L["5de"]);
G2L["5ef"]["BorderSizePixel"] = 0;
G2L["5ef"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["5ef"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["5ef"]["Position"] = UDim2.new(0.753, 0, 0.29687, 0);
G2L["5ef"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5ef"]["Name"] = [[Enable]];
G2L["5ef"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.UICorner
G2L["5f0"] = Instance.new("UICorner", G2L["5ef"]);
G2L["5f0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.TextButton
G2L["5f1"] = Instance.new("TextButton", G2L["5ef"]);
G2L["5f1"]["BorderSizePixel"] = 0;
G2L["5f1"]["TextTransparency"] = 1;
G2L["5f1"]["TextSize"] = 14;
G2L["5f1"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5f1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5f1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5f1"]["BackgroundTransparency"] = 1;
G2L["5f1"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["5f1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.TextButton.LocalScript
G2L["5f2"] = Instance.new("LocalScript", G2L["5f1"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.TextButton.UICorner
G2L["5f3"] = Instance.new("UICorner", G2L["5f1"]);
G2L["5f3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.TextButton.UIAspectRatioConstraint
G2L["5f4"] = Instance.new("UIAspectRatioConstraint", G2L["5f1"]);
G2L["5f4"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.Carget
G2L["5f5"] = Instance.new("Frame", G2L["5ef"]);
G2L["5f5"]["BorderSizePixel"] = 0;
G2L["5f5"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["5f5"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["5f5"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["5f5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5f5"]["Name"] = [[Carget]];
G2L["5f5"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.Carget.UICorner
G2L["5f6"] = Instance.new("UICorner", G2L["5f5"]);
G2L["5f6"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.Carget.UIAspectRatioConstraint
G2L["5f7"] = Instance.new("UIAspectRatioConstraint", G2L["5f5"]);
G2L["5f7"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.UIAspectRatioConstraint
G2L["5f8"] = Instance.new("UIAspectRatioConstraint", G2L["5ef"]);
G2L["5f8"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.Enabled
G2L["5f9"] = Instance.new("BoolValue", G2L["5ef"]);
G2L["5f9"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Bypass1
G2L["5fa"] = Instance.new("BoolValue", G2L["5de"]);
G2L["5fa"]["Name"] = [[Bypass1]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot
G2L["5fb"] = Instance.new("Frame", G2L["50a"]);
G2L["5fb"]["BorderSizePixel"] = 0;
G2L["5fb"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["5fb"]["Size"] = UDim2.new(0.492, 0, 0.13, 0);
G2L["5fb"]["Position"] = UDim2.new(0.506, 0, 0.134, 0);
G2L["5fb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5fb"]["Name"] = [[Aimbot]];
G2L["5fb"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["5fc"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["5fc"]["TextWrapped"] = true;
G2L["5fc"]["BorderSizePixel"] = 0;
G2L["5fc"]["TextSize"] = 14;
G2L["5fc"]["TextScaled"] = true;
G2L["5fc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5fc"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5fc"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["5fc"]["BackgroundTransparency"] = 1;
G2L["5fc"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["5fc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5fc"]["Text"] = [[Aimbot]];
G2L["5fc"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["5fd"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["5fd"]["TextWrapped"] = true;
G2L["5fd"]["BorderSizePixel"] = 0;
G2L["5fd"]["TextSize"] = 14;
G2L["5fd"]["TextScaled"] = true;
G2L["5fd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5fd"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5fd"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["5fd"]["BackgroundTransparency"] = 1;
G2L["5fd"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["5fd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5fd"]["Text"] = [[________________________________________]];
G2L["5fd"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["5fe"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["5fe"]["TextWrapped"] = true;
G2L["5fe"]["BorderSizePixel"] = 0;
G2L["5fe"]["TextSize"] = 14;
G2L["5fe"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["5fe"]["TextScaled"] = true;
G2L["5fe"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["5fe"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["5fe"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["5fe"]["BackgroundTransparency"] = 1;
G2L["5fe"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["5fe"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5fe"]["Text"] = [[Teamcheck]];
G2L["5fe"]["Position"] = UDim2.new(0.04193, 0, 0.18953, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["5ff"] = Instance.new("Frame", G2L["5fb"]);
G2L["5ff"]["BorderSizePixel"] = 0;
G2L["5ff"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["5ff"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["5ff"]["Position"] = UDim2.new(0.76293, 0, 0.19735, 0);
G2L["5ff"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5ff"]["Name"] = [[Enable]];
G2L["5ff"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["600"] = Instance.new("UICorner", G2L["5ff"]);
G2L["600"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["601"] = Instance.new("TextButton", G2L["5ff"]);
G2L["601"]["BorderSizePixel"] = 0;
G2L["601"]["TextTransparency"] = 1;
G2L["601"]["TextSize"] = 14;
G2L["601"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["601"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["601"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["601"]["BackgroundTransparency"] = 1;
G2L["601"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["601"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["602"] = Instance.new("LocalScript", G2L["601"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["603"] = Instance.new("UICorner", G2L["601"]);
G2L["603"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["604"] = Instance.new("UIAspectRatioConstraint", G2L["601"]);
G2L["604"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["605"] = Instance.new("Frame", G2L["5ff"]);
G2L["605"]["BorderSizePixel"] = 0;
G2L["605"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["605"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["605"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["605"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["605"]["Name"] = [[Carget]];
G2L["605"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["606"] = Instance.new("UICorner", G2L["605"]);
G2L["606"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["607"] = Instance.new("UIAspectRatioConstraint", G2L["605"]);
G2L["607"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["608"] = Instance.new("UIAspectRatioConstraint", G2L["5ff"]);
G2L["608"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["609"] = Instance.new("BoolValue", G2L["5ff"]);
G2L["609"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["60a"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["60a"]["TextWrapped"] = true;
G2L["60a"]["BorderSizePixel"] = 0;
G2L["60a"]["TextSize"] = 14;
G2L["60a"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["60a"]["TextScaled"] = true;
G2L["60a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["60a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["60a"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["60a"]["BackgroundTransparency"] = 1;
G2L["60a"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["60a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["60a"]["Text"] = [[Fovcheck]];
G2L["60a"]["Position"] = UDim2.new(0.04193, 0, 0.29262, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["60b"] = Instance.new("Frame", G2L["5fb"]);
G2L["60b"]["BorderSizePixel"] = 0;
G2L["60b"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["60b"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["60b"]["Position"] = UDim2.new(0.76293, 0, 0.30043, 0);
G2L["60b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["60b"]["Name"] = [[Enable]];
G2L["60b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["60c"] = Instance.new("UICorner", G2L["60b"]);
G2L["60c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["60d"] = Instance.new("TextButton", G2L["60b"]);
G2L["60d"]["BorderSizePixel"] = 0;
G2L["60d"]["TextTransparency"] = 1;
G2L["60d"]["TextSize"] = 14;
G2L["60d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["60d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["60d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["60d"]["BackgroundTransparency"] = 1;
G2L["60d"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["60d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["60e"] = Instance.new("LocalScript", G2L["60d"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["60f"] = Instance.new("UICorner", G2L["60d"]);
G2L["60f"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["610"] = Instance.new("UIAspectRatioConstraint", G2L["60d"]);
G2L["610"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["611"] = Instance.new("Frame", G2L["60b"]);
G2L["611"]["BorderSizePixel"] = 0;
G2L["611"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["611"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["611"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["611"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["611"]["Name"] = [[Carget]];
G2L["611"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["612"] = Instance.new("UICorner", G2L["611"]);
G2L["612"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["613"] = Instance.new("UIAspectRatioConstraint", G2L["611"]);
G2L["613"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["614"] = Instance.new("UIAspectRatioConstraint", G2L["60b"]);
G2L["614"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["615"] = Instance.new("BoolValue", G2L["60b"]);
G2L["615"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["616"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["616"]["TextWrapped"] = true;
G2L["616"]["BorderSizePixel"] = 0;
G2L["616"]["TextSize"] = 14;
G2L["616"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["616"]["TextScaled"] = true;
G2L["616"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["616"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["616"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["616"]["BackgroundTransparency"] = 1;
G2L["616"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["616"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["616"]["Text"] = [[Fov]];
G2L["616"]["Position"] = UDim2.new(0.04193, 0, 0.39926, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["617"] = Instance.new("Frame", G2L["5fb"]);
G2L["617"]["BorderSizePixel"] = 0;
G2L["617"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["617"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["617"]["Position"] = UDim2.new(0.76293, 0, 0.40707, 0);
G2L["617"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["617"]["Name"] = [[Enable]];
G2L["617"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["618"] = Instance.new("UICorner", G2L["617"]);
G2L["618"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["619"] = Instance.new("TextButton", G2L["617"]);
G2L["619"]["BorderSizePixel"] = 0;
G2L["619"]["TextTransparency"] = 1;
G2L["619"]["TextSize"] = 14;
G2L["619"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["619"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["619"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["619"]["BackgroundTransparency"] = 1;
G2L["619"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["619"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["61a"] = Instance.new("LocalScript", G2L["619"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["61b"] = Instance.new("UICorner", G2L["619"]);
G2L["61b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["61c"] = Instance.new("UIAspectRatioConstraint", G2L["619"]);
G2L["61c"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["61d"] = Instance.new("Frame", G2L["617"]);
G2L["61d"]["BorderSizePixel"] = 0;
G2L["61d"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["61d"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["61d"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["61d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["61d"]["Name"] = [[Carget]];
G2L["61d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["61e"] = Instance.new("UICorner", G2L["61d"]);
G2L["61e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["61f"] = Instance.new("UIAspectRatioConstraint", G2L["61d"]);
G2L["61f"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["620"] = Instance.new("UIAspectRatioConstraint", G2L["617"]);
G2L["620"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["621"] = Instance.new("BoolValue", G2L["617"]);
G2L["621"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["622"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["622"]["TextWrapped"] = true;
G2L["622"]["BorderSizePixel"] = 0;
G2L["622"]["TextSize"] = 14;
G2L["622"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["622"]["TextScaled"] = true;
G2L["622"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["622"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["622"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["622"]["BackgroundTransparency"] = 1;
G2L["622"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["622"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["622"]["Text"] = [[Prediction]];
G2L["622"]["Position"] = UDim2.new(0.04193, 0, 0.50589, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["623"] = Instance.new("Frame", G2L["5fb"]);
G2L["623"]["BorderSizePixel"] = 0;
G2L["623"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["623"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["623"]["Position"] = UDim2.new(0.76293, 0, 0.51371, 0);
G2L["623"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["623"]["Name"] = [[Enable]];
G2L["623"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["624"] = Instance.new("UICorner", G2L["623"]);
G2L["624"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["625"] = Instance.new("TextButton", G2L["623"]);
G2L["625"]["BorderSizePixel"] = 0;
G2L["625"]["TextTransparency"] = 1;
G2L["625"]["TextSize"] = 14;
G2L["625"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["625"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["625"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["625"]["BackgroundTransparency"] = 1;
G2L["625"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["625"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["626"] = Instance.new("LocalScript", G2L["625"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["627"] = Instance.new("UICorner", G2L["625"]);
G2L["627"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["628"] = Instance.new("UIAspectRatioConstraint", G2L["625"]);
G2L["628"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["629"] = Instance.new("Frame", G2L["623"]);
G2L["629"]["BorderSizePixel"] = 0;
G2L["629"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["629"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["629"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["629"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["629"]["Name"] = [[Carget]];
G2L["629"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["62a"] = Instance.new("UICorner", G2L["629"]);
G2L["62a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["62b"] = Instance.new("UIAspectRatioConstraint", G2L["629"]);
G2L["62b"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["62c"] = Instance.new("UIAspectRatioConstraint", G2L["623"]);
G2L["62c"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["62d"] = Instance.new("BoolValue", G2L["623"]);
G2L["62d"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["62e"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["62e"]["TextWrapped"] = true;
G2L["62e"]["BorderSizePixel"] = 0;
G2L["62e"]["TextSize"] = 14;
G2L["62e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["62e"]["TextScaled"] = true;
G2L["62e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["62e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["62e"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["62e"]["BackgroundTransparency"] = 1;
G2L["62e"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["62e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["62e"]["Text"] = [[AvoidBehind]];
G2L["62e"]["Position"] = UDim2.new(0.04193, 0, 0.61253, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["62f"] = Instance.new("Frame", G2L["5fb"]);
G2L["62f"]["BorderSizePixel"] = 0;
G2L["62f"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["62f"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["62f"]["Position"] = UDim2.new(0.76293, 0, 0.61679, 0);
G2L["62f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["62f"]["Name"] = [[Enable]];
G2L["62f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["630"] = Instance.new("UICorner", G2L["62f"]);
G2L["630"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["631"] = Instance.new("TextButton", G2L["62f"]);
G2L["631"]["BorderSizePixel"] = 0;
G2L["631"]["TextTransparency"] = 1;
G2L["631"]["TextSize"] = 14;
G2L["631"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["631"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["631"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["631"]["BackgroundTransparency"] = 1;
G2L["631"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["631"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["632"] = Instance.new("LocalScript", G2L["631"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["633"] = Instance.new("UICorner", G2L["631"]);
G2L["633"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["634"] = Instance.new("UIAspectRatioConstraint", G2L["631"]);
G2L["634"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["635"] = Instance.new("Frame", G2L["62f"]);
G2L["635"]["BorderSizePixel"] = 0;
G2L["635"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["635"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["635"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["635"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["635"]["Name"] = [[Carget]];
G2L["635"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["636"] = Instance.new("UICorner", G2L["635"]);
G2L["636"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["637"] = Instance.new("UIAspectRatioConstraint", G2L["635"]);
G2L["637"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["638"] = Instance.new("UIAspectRatioConstraint", G2L["62f"]);
G2L["638"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["639"] = Instance.new("BoolValue", G2L["62f"]);
G2L["639"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox
G2L["63a"] = Instance.new("TextBox", G2L["5fb"]);
G2L["63a"]["BorderSizePixel"] = 0;
G2L["63a"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["63a"]["TextSize"] = 14;
G2L["63a"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["63a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["63a"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["63a"]["ClearTextOnFocus"] = false;
G2L["63a"]["PlaceholderText"] = [[Predict (0.1)]];
G2L["63a"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["63a"]["Position"] = UDim2.new(0.00021, 0, 3.1324, 0);
G2L["63a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63a"]["Text"] = [[]];
G2L["63a"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
G2L["63b"] = Instance.new("LocalScript", G2L["63a"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["63c"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["63c"]["TextWrapped"] = true;
G2L["63c"]["BorderSizePixel"] = 0;
G2L["63c"]["TextSize"] = 14;
G2L["63c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["63c"]["TextScaled"] = true;
G2L["63c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["63c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["63c"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["63c"]["BackgroundTransparency"] = 1;
G2L["63c"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["63c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63c"]["Text"] = [[TargetHUD]];
G2L["63c"]["Position"] = UDim2.new(0.03696, 0, 0.70851, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["63d"] = Instance.new("Frame", G2L["5fb"]);
G2L["63d"]["BorderSizePixel"] = 0;
G2L["63d"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["63d"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["63d"]["Position"] = UDim2.new(0.75796, 0, 0.71632, 0);
G2L["63d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63d"]["Name"] = [[Enable]];
G2L["63d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["63e"] = Instance.new("UICorner", G2L["63d"]);
G2L["63e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["63f"] = Instance.new("TextButton", G2L["63d"]);
G2L["63f"]["BorderSizePixel"] = 0;
G2L["63f"]["TextTransparency"] = 1;
G2L["63f"]["TextSize"] = 14;
G2L["63f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["63f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["63f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["63f"]["BackgroundTransparency"] = 1;
G2L["63f"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["63f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["640"] = Instance.new("LocalScript", G2L["63f"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["641"] = Instance.new("UICorner", G2L["63f"]);
G2L["641"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["642"] = Instance.new("UIAspectRatioConstraint", G2L["63f"]);
G2L["642"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["643"] = Instance.new("Frame", G2L["63d"]);
G2L["643"]["BorderSizePixel"] = 0;
G2L["643"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["643"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["643"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["643"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["643"]["Name"] = [[Carget]];
G2L["643"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["644"] = Instance.new("UICorner", G2L["643"]);
G2L["644"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["645"] = Instance.new("UIAspectRatioConstraint", G2L["643"]);
G2L["645"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["646"] = Instance.new("UIAspectRatioConstraint", G2L["63d"]);
G2L["646"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["647"] = Instance.new("BoolValue", G2L["63d"]);
G2L["647"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["648"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["648"]["TextWrapped"] = true;
G2L["648"]["BorderSizePixel"] = 0;
G2L["648"]["TextSize"] = 14;
G2L["648"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["648"]["TextScaled"] = true;
G2L["648"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["648"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["648"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["648"]["BackgroundTransparency"] = 1;
G2L["648"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["648"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["648"]["Text"] = [[TargetESP]];
G2L["648"]["Position"] = UDim2.new(0.03696, 0, 0.80804, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["649"] = Instance.new("Frame", G2L["5fb"]);
G2L["649"]["BorderSizePixel"] = 0;
G2L["649"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["649"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["649"]["Position"] = UDim2.new(0.75796, 0, 0.81585, 0);
G2L["649"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["649"]["Name"] = [[Enable]];
G2L["649"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["64a"] = Instance.new("UICorner", G2L["649"]);
G2L["64a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["64b"] = Instance.new("TextButton", G2L["649"]);
G2L["64b"]["BorderSizePixel"] = 0;
G2L["64b"]["TextTransparency"] = 1;
G2L["64b"]["TextSize"] = 14;
G2L["64b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["64b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["64b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["64b"]["BackgroundTransparency"] = 1;
G2L["64b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["64b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["64c"] = Instance.new("LocalScript", G2L["64b"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["64d"] = Instance.new("UICorner", G2L["64b"]);
G2L["64d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["64e"] = Instance.new("UIAspectRatioConstraint", G2L["64b"]);
G2L["64e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["64f"] = Instance.new("Frame", G2L["649"]);
G2L["64f"]["BorderSizePixel"] = 0;
G2L["64f"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["64f"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["64f"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["64f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["64f"]["Name"] = [[Carget]];
G2L["64f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["650"] = Instance.new("UICorner", G2L["64f"]);
G2L["650"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["651"] = Instance.new("UIAspectRatioConstraint", G2L["64f"]);
G2L["651"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["652"] = Instance.new("UIAspectRatioConstraint", G2L["649"]);
G2L["652"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["653"] = Instance.new("BoolValue", G2L["649"]);
G2L["653"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["654"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["654"]["TextWrapped"] = true;
G2L["654"]["BorderSizePixel"] = 0;
G2L["654"]["TextSize"] = 14;
G2L["654"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["654"]["TextScaled"] = true;
G2L["654"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["654"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["654"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["654"]["BackgroundTransparency"] = 1;
G2L["654"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["654"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["654"]["Text"] = [[TargetHUD1]];
G2L["654"]["Position"] = UDim2.new(0.04689, 0, 1.44583, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["655"] = Instance.new("Frame", G2L["5fb"]);
G2L["655"]["BorderSizePixel"] = 0;
G2L["655"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["655"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["655"]["Position"] = UDim2.new(0.76789, 0, 1.45364, 0);
G2L["655"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["655"]["Name"] = [[Enable]];
G2L["655"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["656"] = Instance.new("UICorner", G2L["655"]);
G2L["656"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["657"] = Instance.new("TextButton", G2L["655"]);
G2L["657"]["BorderSizePixel"] = 0;
G2L["657"]["TextTransparency"] = 1;
G2L["657"]["TextSize"] = 14;
G2L["657"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["657"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["657"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["657"]["BackgroundTransparency"] = 1;
G2L["657"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["657"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["658"] = Instance.new("LocalScript", G2L["657"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["659"] = Instance.new("UICorner", G2L["657"]);
G2L["659"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["65a"] = Instance.new("UIAspectRatioConstraint", G2L["657"]);
G2L["65a"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["65b"] = Instance.new("Frame", G2L["655"]);
G2L["65b"]["BorderSizePixel"] = 0;
G2L["65b"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["65b"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["65b"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["65b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["65b"]["Name"] = [[Carget]];
G2L["65b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["65c"] = Instance.new("UICorner", G2L["65b"]);
G2L["65c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["65d"] = Instance.new("UIAspectRatioConstraint", G2L["65b"]);
G2L["65d"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["65e"] = Instance.new("UIAspectRatioConstraint", G2L["655"]);
G2L["65e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["65f"] = Instance.new("BoolValue", G2L["655"]);
G2L["65f"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["660"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["660"]["TextWrapped"] = true;
G2L["660"]["BorderSizePixel"] = 0;
G2L["660"]["TextSize"] = 14;
G2L["660"]["TextScaled"] = true;
G2L["660"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["660"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["660"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["660"]["BackgroundTransparency"] = 1;
G2L["660"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["660"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["660"]["Text"] = [[________________________________________]];
G2L["660"]["Position"] = UDim2.new(-0.00496, 0, 1.34864, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["661"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["661"]["TextWrapped"] = true;
G2L["661"]["BorderSizePixel"] = 0;
G2L["661"]["TextSize"] = 14;
G2L["661"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["661"]["TextScaled"] = true;
G2L["661"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["661"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["661"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["661"]["BackgroundTransparency"] = 1;
G2L["661"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["661"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["661"]["Text"] = [[TargetHUD2]];
G2L["661"]["Position"] = UDim2.new(0.04689, 0, 1.5418, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["662"] = Instance.new("Frame", G2L["5fb"]);
G2L["662"]["BorderSizePixel"] = 0;
G2L["662"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["662"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["662"]["Position"] = UDim2.new(0.76789, 0, 1.54962, 0);
G2L["662"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["662"]["Name"] = [[Enable]];
G2L["662"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["663"] = Instance.new("UICorner", G2L["662"]);
G2L["663"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["664"] = Instance.new("TextButton", G2L["662"]);
G2L["664"]["BorderSizePixel"] = 0;
G2L["664"]["TextTransparency"] = 1;
G2L["664"]["TextSize"] = 14;
G2L["664"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["664"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["664"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["664"]["BackgroundTransparency"] = 1;
G2L["664"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["664"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["665"] = Instance.new("LocalScript", G2L["664"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["666"] = Instance.new("UICorner", G2L["664"]);
G2L["666"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["667"] = Instance.new("UIAspectRatioConstraint", G2L["664"]);
G2L["667"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["668"] = Instance.new("Frame", G2L["662"]);
G2L["668"]["BorderSizePixel"] = 0;
G2L["668"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["668"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["668"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["668"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["668"]["Name"] = [[Carget]];
G2L["668"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["669"] = Instance.new("UICorner", G2L["668"]);
G2L["669"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["66a"] = Instance.new("UIAspectRatioConstraint", G2L["668"]);
G2L["66a"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["66b"] = Instance.new("UIAspectRatioConstraint", G2L["662"]);
G2L["66b"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["66c"] = Instance.new("BoolValue", G2L["662"]);
G2L["66c"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["66d"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["66d"]["TextWrapped"] = true;
G2L["66d"]["BorderSizePixel"] = 0;
G2L["66d"]["TextSize"] = 14;
G2L["66d"]["TextScaled"] = true;
G2L["66d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["66d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["66d"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["66d"]["BackgroundTransparency"] = 1;
G2L["66d"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["66d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["66d"]["Text"] = [[________________________________________]];
G2L["66d"]["Position"] = UDim2.new(0, 0, 1.59035, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["66e"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["66e"]["TextWrapped"] = true;
G2L["66e"]["BorderSizePixel"] = 0;
G2L["66e"]["TextSize"] = 14;
G2L["66e"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["66e"]["TextScaled"] = true;
G2L["66e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["66e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["66e"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["66e"]["BackgroundTransparency"] = 1;
G2L["66e"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["66e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["66e"]["Text"] = [[TargetESP1]];
G2L["66e"]["Position"] = UDim2.new(0.04689, 0, 1.67332, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["66f"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["66f"]["TextWrapped"] = true;
G2L["66f"]["BorderSizePixel"] = 0;
G2L["66f"]["TextSize"] = 14;
G2L["66f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["66f"]["TextScaled"] = true;
G2L["66f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["66f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["66f"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["66f"]["BackgroundTransparency"] = 1;
G2L["66f"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["66f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["66f"]["Text"] = [[TargetESP2]];
G2L["66f"]["Position"] = UDim2.new(0.04689, 0, 1.7693, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["670"] = Instance.new("Frame", G2L["5fb"]);
G2L["670"]["BorderSizePixel"] = 0;
G2L["670"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["670"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["670"]["Position"] = UDim2.new(0.76789, 0, 1.68114, 0);
G2L["670"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["670"]["Name"] = [[Enable]];
G2L["670"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["671"] = Instance.new("UICorner", G2L["670"]);
G2L["671"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["672"] = Instance.new("TextButton", G2L["670"]);
G2L["672"]["BorderSizePixel"] = 0;
G2L["672"]["TextTransparency"] = 1;
G2L["672"]["TextSize"] = 14;
G2L["672"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["672"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["672"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["672"]["BackgroundTransparency"] = 1;
G2L["672"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["672"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["673"] = Instance.new("LocalScript", G2L["672"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["674"] = Instance.new("UICorner", G2L["672"]);
G2L["674"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["675"] = Instance.new("UIAspectRatioConstraint", G2L["672"]);
G2L["675"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["676"] = Instance.new("Frame", G2L["670"]);
G2L["676"]["BorderSizePixel"] = 0;
G2L["676"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["676"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["676"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["676"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["676"]["Name"] = [[Carget]];
G2L["676"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["677"] = Instance.new("UICorner", G2L["676"]);
G2L["677"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["678"] = Instance.new("UIAspectRatioConstraint", G2L["676"]);
G2L["678"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["679"] = Instance.new("UIAspectRatioConstraint", G2L["670"]);
G2L["679"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["67a"] = Instance.new("BoolValue", G2L["670"]);
G2L["67a"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["67b"] = Instance.new("Frame", G2L["5fb"]);
G2L["67b"]["BorderSizePixel"] = 0;
G2L["67b"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["67b"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["67b"]["Position"] = UDim2.new(0.76789, 0, 1.77711, 0);
G2L["67b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["67b"]["Name"] = [[Enable]];
G2L["67b"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["67c"] = Instance.new("UICorner", G2L["67b"]);
G2L["67c"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["67d"] = Instance.new("TextButton", G2L["67b"]);
G2L["67d"]["BorderSizePixel"] = 0;
G2L["67d"]["TextTransparency"] = 1;
G2L["67d"]["TextSize"] = 14;
G2L["67d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["67d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["67d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["67d"]["BackgroundTransparency"] = 1;
G2L["67d"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["67d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["67e"] = Instance.new("LocalScript", G2L["67d"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["67f"] = Instance.new("UICorner", G2L["67d"]);
G2L["67f"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["680"] = Instance.new("UIAspectRatioConstraint", G2L["67d"]);
G2L["680"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["681"] = Instance.new("Frame", G2L["67b"]);
G2L["681"]["BorderSizePixel"] = 0;
G2L["681"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["681"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["681"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["681"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["681"]["Name"] = [[Carget]];
G2L["681"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["682"] = Instance.new("UICorner", G2L["681"]);
G2L["682"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["683"] = Instance.new("UIAspectRatioConstraint", G2L["681"]);
G2L["683"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["684"] = Instance.new("UIAspectRatioConstraint", G2L["67b"]);
G2L["684"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["685"] = Instance.new("BoolValue", G2L["67b"]);
G2L["685"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox
G2L["686"] = Instance.new("TextBox", G2L["5fb"]);
G2L["686"]["BorderSizePixel"] = 0;
G2L["686"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["686"]["TextSize"] = 14;
G2L["686"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["686"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["686"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["686"]["ClearTextOnFocus"] = false;
G2L["686"]["PlaceholderText"] = [[Whitelist (Player1, Player2)]];
G2L["686"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["686"]["Position"] = UDim2.new(-0.00475, 0, 3.43809, 0);
G2L["686"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["686"]["Text"] = [[]];
G2L["686"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
G2L["687"] = Instance.new("LocalScript", G2L["686"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["688"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["688"]["TextWrapped"] = true;
G2L["688"]["BorderSizePixel"] = 0;
G2L["688"]["TextSize"] = 14;
G2L["688"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["688"]["TextScaled"] = true;
G2L["688"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["688"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["688"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["688"]["BackgroundTransparency"] = 1;
G2L["688"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["688"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["688"]["Text"] = [[CheckAlive]];
G2L["688"]["Position"] = UDim2.new(0.03696, 0, 0.90401, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["689"] = Instance.new("Frame", G2L["5fb"]);
G2L["689"]["BorderSizePixel"] = 0;
G2L["689"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["689"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["689"]["Position"] = UDim2.new(0.75796, 0, 0.91182, 0);
G2L["689"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["689"]["Name"] = [[Enable]];
G2L["689"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["68a"] = Instance.new("UICorner", G2L["689"]);
G2L["68a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["68b"] = Instance.new("TextButton", G2L["689"]);
G2L["68b"]["BorderSizePixel"] = 0;
G2L["68b"]["TextTransparency"] = 1;
G2L["68b"]["TextSize"] = 14;
G2L["68b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["68b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["68b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["68b"]["BackgroundTransparency"] = 1;
G2L["68b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["68b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["68c"] = Instance.new("LocalScript", G2L["68b"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["68d"] = Instance.new("UICorner", G2L["68b"]);
G2L["68d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["68e"] = Instance.new("UIAspectRatioConstraint", G2L["68b"]);
G2L["68e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["68f"] = Instance.new("Frame", G2L["689"]);
G2L["68f"]["BorderSizePixel"] = 0;
G2L["68f"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["68f"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["68f"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["68f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["68f"]["Name"] = [[Carget]];
G2L["68f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["690"] = Instance.new("UICorner", G2L["68f"]);
G2L["690"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["691"] = Instance.new("UIAspectRatioConstraint", G2L["68f"]);
G2L["691"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["692"] = Instance.new("UIAspectRatioConstraint", G2L["689"]);
G2L["692"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["693"] = Instance.new("BoolValue", G2L["689"]);
G2L["693"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["694"] = Instance.new("Frame", G2L["5fb"]);
G2L["694"]["BorderSizePixel"] = 0;
G2L["694"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["694"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["694"]["Position"] = UDim2.new(0.75796, 0, 1.21562, 0);
G2L["694"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["694"]["Name"] = [[Enable]];
G2L["694"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["695"] = Instance.new("UICorner", G2L["694"]);
G2L["695"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["696"] = Instance.new("TextButton", G2L["694"]);
G2L["696"]["BorderSizePixel"] = 0;
G2L["696"]["TextTransparency"] = 1;
G2L["696"]["TextSize"] = 14;
G2L["696"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["696"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["696"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["696"]["BackgroundTransparency"] = 1;
G2L["696"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["696"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["697"] = Instance.new("LocalScript", G2L["696"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["698"] = Instance.new("UICorner", G2L["696"]);
G2L["698"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["699"] = Instance.new("UIAspectRatioConstraint", G2L["696"]);
G2L["699"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["69a"] = Instance.new("Frame", G2L["694"]);
G2L["69a"]["BorderSizePixel"] = 0;
G2L["69a"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["69a"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["69a"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["69a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["69a"]["Name"] = [[Carget]];
G2L["69a"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["69b"] = Instance.new("UICorner", G2L["69a"]);
G2L["69b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["69c"] = Instance.new("UIAspectRatioConstraint", G2L["69a"]);
G2L["69c"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["69d"] = Instance.new("UIAspectRatioConstraint", G2L["694"]);
G2L["69d"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["69e"] = Instance.new("BoolValue", G2L["694"]);
G2L["69e"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["69f"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["69f"]["TextWrapped"] = true;
G2L["69f"]["BorderSizePixel"] = 0;
G2L["69f"]["TextSize"] = 14;
G2L["69f"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["69f"]["TextScaled"] = true;
G2L["69f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["69f"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["69f"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["69f"]["BackgroundTransparency"] = 1;
G2L["69f"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["69f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["69f"]["Text"] = [[Distance]];
G2L["69f"]["Position"] = UDim2.new(0.04689, 0, 2.02168, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["6a0"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["6a0"]["TextWrapped"] = true;
G2L["6a0"]["BorderSizePixel"] = 0;
G2L["6a0"]["TextSize"] = 14;
G2L["6a0"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["6a0"]["TextScaled"] = true;
G2L["6a0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a0"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6a0"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["6a0"]["BackgroundTransparency"] = 1;
G2L["6a0"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["6a0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a0"]["Text"] = [[Health]];
G2L["6a0"]["Position"] = UDim2.new(0.04689, 0, 1.9257, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["6a1"] = Instance.new("Frame", G2L["5fb"]);
G2L["6a1"]["BorderSizePixel"] = 0;
G2L["6a1"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["6a1"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["6a1"]["Position"] = UDim2.new(0.76789, 0, 1.93351, 0);
G2L["6a1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a1"]["Name"] = [[Enable]];
G2L["6a1"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["6a2"] = Instance.new("UICorner", G2L["6a1"]);
G2L["6a2"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["6a3"] = Instance.new("TextButton", G2L["6a1"]);
G2L["6a3"]["BorderSizePixel"] = 0;
G2L["6a3"]["TextTransparency"] = 1;
G2L["6a3"]["TextSize"] = 14;
G2L["6a3"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6a3"]["BackgroundTransparency"] = 1;
G2L["6a3"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6a3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["6a4"] = Instance.new("LocalScript", G2L["6a3"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["6a5"] = Instance.new("UICorner", G2L["6a3"]);
G2L["6a5"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["6a6"] = Instance.new("UIAspectRatioConstraint", G2L["6a3"]);
G2L["6a6"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["6a7"] = Instance.new("Frame", G2L["6a1"]);
G2L["6a7"]["BorderSizePixel"] = 0;
G2L["6a7"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["6a7"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["6a7"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["6a7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a7"]["Name"] = [[Carget]];
G2L["6a7"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["6a8"] = Instance.new("UICorner", G2L["6a7"]);
G2L["6a8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["6a9"] = Instance.new("UIAspectRatioConstraint", G2L["6a7"]);
G2L["6a9"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["6aa"] = Instance.new("UIAspectRatioConstraint", G2L["6a1"]);
G2L["6aa"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["6ab"] = Instance.new("BoolValue", G2L["6a1"]);
G2L["6ab"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["6ac"] = Instance.new("Frame", G2L["5fb"]);
G2L["6ac"]["BorderSizePixel"] = 0;
G2L["6ac"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["6ac"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["6ac"]["Position"] = UDim2.new(0.76789, 0, 2.02949, 0);
G2L["6ac"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6ac"]["Name"] = [[Enable]];
G2L["6ac"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["6ad"] = Instance.new("UICorner", G2L["6ac"]);
G2L["6ad"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["6ae"] = Instance.new("TextButton", G2L["6ac"]);
G2L["6ae"]["BorderSizePixel"] = 0;
G2L["6ae"]["TextTransparency"] = 1;
G2L["6ae"]["TextSize"] = 14;
G2L["6ae"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6ae"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6ae"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6ae"]["BackgroundTransparency"] = 1;
G2L["6ae"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6ae"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["6af"] = Instance.new("LocalScript", G2L["6ae"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["6b0"] = Instance.new("UICorner", G2L["6ae"]);
G2L["6b0"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["6b1"] = Instance.new("UIAspectRatioConstraint", G2L["6ae"]);
G2L["6b1"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["6b2"] = Instance.new("Frame", G2L["6ac"]);
G2L["6b2"]["BorderSizePixel"] = 0;
G2L["6b2"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["6b2"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["6b2"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["6b2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6b2"]["Name"] = [[Carget]];
G2L["6b2"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["6b3"] = Instance.new("UICorner", G2L["6b2"]);
G2L["6b3"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["6b4"] = Instance.new("UIAspectRatioConstraint", G2L["6b2"]);
G2L["6b4"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["6b5"] = Instance.new("UIAspectRatioConstraint", G2L["6ac"]);
G2L["6b5"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["6b6"] = Instance.new("BoolValue", G2L["6ac"]);
G2L["6b6"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["6b7"] = Instance.new("Frame", G2L["5fb"]);
G2L["6b7"]["BorderSizePixel"] = 0;
G2L["6b7"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["6b7"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["6b7"]["Position"] = UDim2.new(0.76789, 0, 2.12902, 0);
G2L["6b7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6b7"]["Name"] = [[Enable]];
G2L["6b7"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["6b8"] = Instance.new("UICorner", G2L["6b7"]);
G2L["6b8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["6b9"] = Instance.new("TextButton", G2L["6b7"]);
G2L["6b9"]["BorderSizePixel"] = 0;
G2L["6b9"]["TextTransparency"] = 1;
G2L["6b9"]["TextSize"] = 14;
G2L["6b9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6b9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6b9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6b9"]["BackgroundTransparency"] = 1;
G2L["6b9"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6b9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["6ba"] = Instance.new("LocalScript", G2L["6b9"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["6bb"] = Instance.new("UICorner", G2L["6b9"]);
G2L["6bb"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["6bc"] = Instance.new("UIAspectRatioConstraint", G2L["6b9"]);
G2L["6bc"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["6bd"] = Instance.new("Frame", G2L["6b7"]);
G2L["6bd"]["BorderSizePixel"] = 0;
G2L["6bd"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["6bd"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["6bd"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["6bd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6bd"]["Name"] = [[Carget]];
G2L["6bd"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["6be"] = Instance.new("UICorner", G2L["6bd"]);
G2L["6be"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["6bf"] = Instance.new("UIAspectRatioConstraint", G2L["6bd"]);
G2L["6bf"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["6c0"] = Instance.new("UIAspectRatioConstraint", G2L["6b7"]);
G2L["6c0"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["6c1"] = Instance.new("BoolValue", G2L["6b7"]);
G2L["6c1"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["6c2"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["6c2"]["TextWrapped"] = true;
G2L["6c2"]["BorderSizePixel"] = 0;
G2L["6c2"]["TextSize"] = 14;
G2L["6c2"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["6c2"]["TextScaled"] = true;
G2L["6c2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6c2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6c2"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["6c2"]["BackgroundTransparency"] = 1;
G2L["6c2"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["6c2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6c2"]["Text"] = [[Smart]];
G2L["6c2"]["Position"] = UDim2.new(0.04689, 0, 2.12121, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["6c3"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["6c3"]["TextWrapped"] = true;
G2L["6c3"]["BorderSizePixel"] = 0;
G2L["6c3"]["TextSize"] = 14;
G2L["6c3"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["6c3"]["TextScaled"] = true;
G2L["6c3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6c3"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6c3"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["6c3"]["BackgroundTransparency"] = 1;
G2L["6c3"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["6c3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6c3"]["Text"] = [[WallCheck]];
G2L["6c3"]["Position"] = UDim2.new(0.03696, 0, 1.00354, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["6c4"] = Instance.new("Frame", G2L["5fb"]);
G2L["6c4"]["BorderSizePixel"] = 0;
G2L["6c4"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["6c4"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["6c4"]["Position"] = UDim2.new(0.75796, 0, 1.01135, 0);
G2L["6c4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6c4"]["Name"] = [[Enable]];
G2L["6c4"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["6c5"] = Instance.new("UICorner", G2L["6c4"]);
G2L["6c5"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["6c6"] = Instance.new("TextButton", G2L["6c4"]);
G2L["6c6"]["BorderSizePixel"] = 0;
G2L["6c6"]["TextTransparency"] = 1;
G2L["6c6"]["TextSize"] = 14;
G2L["6c6"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6c6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6c6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6c6"]["BackgroundTransparency"] = 1;
G2L["6c6"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6c6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["6c7"] = Instance.new("LocalScript", G2L["6c6"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["6c8"] = Instance.new("UICorner", G2L["6c6"]);
G2L["6c8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["6c9"] = Instance.new("UIAspectRatioConstraint", G2L["6c6"]);
G2L["6c9"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["6ca"] = Instance.new("Frame", G2L["6c4"]);
G2L["6ca"]["BorderSizePixel"] = 0;
G2L["6ca"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["6ca"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["6ca"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["6ca"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6ca"]["Name"] = [[Carget]];
G2L["6ca"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["6cb"] = Instance.new("UICorner", G2L["6ca"]);
G2L["6cb"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["6cc"] = Instance.new("UIAspectRatioConstraint", G2L["6ca"]);
G2L["6cc"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["6cd"] = Instance.new("UIAspectRatioConstraint", G2L["6c4"]);
G2L["6cd"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["6ce"] = Instance.new("BoolValue", G2L["6c4"]);
G2L["6ce"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["6cf"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["6cf"]["TextWrapped"] = true;
G2L["6cf"]["BorderSizePixel"] = 0;
G2L["6cf"]["TextSize"] = 14;
G2L["6cf"]["TextScaled"] = true;
G2L["6cf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6cf"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6cf"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["6cf"]["BackgroundTransparency"] = 1;
G2L["6cf"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["6cf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6cf"]["Text"] = [[________________________________________]];
G2L["6cf"]["Position"] = UDim2.new(0, 0, 2.18048, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox
G2L["6d0"] = Instance.new("TextBox", G2L["5fb"]);
G2L["6d0"]["BorderSizePixel"] = 0;
G2L["6d0"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["6d0"]["TextSize"] = 14;
G2L["6d0"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["6d0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6d0"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6d0"]["ClearTextOnFocus"] = false;
G2L["6d0"]["PlaceholderText"] = [[Smoothness (1)]];
G2L["6d0"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["6d0"]["Position"] = UDim2.new(0.00021, 0, 3.28524, 0);
G2L["6d0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6d0"]["Text"] = [[]];
G2L["6d0"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
G2L["6d1"] = Instance.new("LocalScript", G2L["6d0"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox
G2L["6d2"] = Instance.new("TextBox", G2L["5fb"]);
G2L["6d2"]["BorderSizePixel"] = 0;
G2L["6d2"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["6d2"]["TextSize"] = 14;
G2L["6d2"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["6d2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6d2"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6d2"]["PlaceholderText"] = [[Key Activate (NONE)]];
G2L["6d2"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["6d2"]["Position"] = UDim2.new(-0.00475, 0, 3.59107, 0);
G2L["6d2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6d2"]["Text"] = [[]];
G2L["6d2"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
G2L["6d3"] = Instance.new("LocalScript", G2L["6d2"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["6d4"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["6d4"]["TextWrapped"] = true;
G2L["6d4"]["BorderSizePixel"] = 0;
G2L["6d4"]["TextSize"] = 14;
G2L["6d4"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["6d4"]["TextScaled"] = true;
G2L["6d4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6d4"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6d4"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["6d4"]["BackgroundTransparency"] = 1;
G2L["6d4"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["6d4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6d4"]["Text"] = [[LMB]];
G2L["6d4"]["Position"] = UDim2.new(0.04689, 0, 2.29925, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["6d5"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["6d5"]["TextWrapped"] = true;
G2L["6d5"]["BorderSizePixel"] = 0;
G2L["6d5"]["TextSize"] = 14;
G2L["6d5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["6d5"]["TextScaled"] = true;
G2L["6d5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6d5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6d5"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["6d5"]["BackgroundTransparency"] = 1;
G2L["6d5"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["6d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6d5"]["Text"] = [[RMB]];
G2L["6d5"]["Position"] = UDim2.new(0.04689, 0, 2.39523, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["6d6"] = Instance.new("Frame", G2L["5fb"]);
G2L["6d6"]["BorderSizePixel"] = 0;
G2L["6d6"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["6d6"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["6d6"]["Position"] = UDim2.new(0.76789, 0, 2.40304, 0);
G2L["6d6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6d6"]["Name"] = [[Enable]];
G2L["6d6"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["6d7"] = Instance.new("UICorner", G2L["6d6"]);
G2L["6d7"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["6d8"] = Instance.new("TextButton", G2L["6d6"]);
G2L["6d8"]["BorderSizePixel"] = 0;
G2L["6d8"]["TextTransparency"] = 1;
G2L["6d8"]["TextSize"] = 14;
G2L["6d8"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6d8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6d8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6d8"]["BackgroundTransparency"] = 1;
G2L["6d8"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6d8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["6d9"] = Instance.new("LocalScript", G2L["6d8"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["6da"] = Instance.new("UICorner", G2L["6d8"]);
G2L["6da"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["6db"] = Instance.new("UIAspectRatioConstraint", G2L["6d8"]);
G2L["6db"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["6dc"] = Instance.new("Frame", G2L["6d6"]);
G2L["6dc"]["BorderSizePixel"] = 0;
G2L["6dc"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["6dc"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["6dc"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["6dc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6dc"]["Name"] = [[Carget]];
G2L["6dc"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["6dd"] = Instance.new("UICorner", G2L["6dc"]);
G2L["6dd"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["6de"] = Instance.new("UIAspectRatioConstraint", G2L["6dc"]);
G2L["6de"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["6df"] = Instance.new("UIAspectRatioConstraint", G2L["6d6"]);
G2L["6df"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["6e0"] = Instance.new("BoolValue", G2L["6d6"]);
G2L["6e0"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["6e1"] = Instance.new("Frame", G2L["5fb"]);
G2L["6e1"]["BorderSizePixel"] = 0;
G2L["6e1"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["6e1"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["6e1"]["Position"] = UDim2.new(0.76789, 0, 2.30707, 0);
G2L["6e1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6e1"]["Name"] = [[Enable]];
G2L["6e1"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["6e2"] = Instance.new("UICorner", G2L["6e1"]);
G2L["6e2"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["6e3"] = Instance.new("TextButton", G2L["6e1"]);
G2L["6e3"]["BorderSizePixel"] = 0;
G2L["6e3"]["TextTransparency"] = 1;
G2L["6e3"]["TextSize"] = 14;
G2L["6e3"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6e3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6e3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6e3"]["BackgroundTransparency"] = 1;
G2L["6e3"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6e3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["6e4"] = Instance.new("LocalScript", G2L["6e3"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["6e5"] = Instance.new("UICorner", G2L["6e3"]);
G2L["6e5"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["6e6"] = Instance.new("UIAspectRatioConstraint", G2L["6e3"]);
G2L["6e6"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["6e7"] = Instance.new("Frame", G2L["6e1"]);
G2L["6e7"]["BorderSizePixel"] = 0;
G2L["6e7"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["6e7"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["6e7"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["6e7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6e7"]["Name"] = [[Carget]];
G2L["6e7"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["6e8"] = Instance.new("UICorner", G2L["6e7"]);
G2L["6e8"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["6e9"] = Instance.new("UIAspectRatioConstraint", G2L["6e7"]);
G2L["6e9"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["6ea"] = Instance.new("UIAspectRatioConstraint", G2L["6e1"]);
G2L["6ea"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["6eb"] = Instance.new("BoolValue", G2L["6e1"]);
G2L["6eb"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["6ec"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["6ec"]["TextWrapped"] = true;
G2L["6ec"]["BorderSizePixel"] = 0;
G2L["6ec"]["TextSize"] = 14;
G2L["6ec"]["TextScaled"] = true;
G2L["6ec"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6ec"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6ec"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["6ec"]["BackgroundTransparency"] = 1;
G2L["6ec"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["6ec"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6ec"]["Text"] = [[________________Sort____________________]];
G2L["6ec"]["Position"] = UDim2.new(0, 0, 1.84235, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox
G2L["6ed"] = Instance.new("TextBox", G2L["5fb"]);
G2L["6ed"]["BorderSizePixel"] = 0;
G2L["6ed"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["6ed"]["TextSize"] = 14;
G2L["6ed"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["6ed"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6ed"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6ed"]["ClearTextOnFocus"] = false;
G2L["6ed"]["PlaceholderText"] = [[Fovradius (100)]];
G2L["6ed"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["6ed"]["Position"] = UDim2.new(-0.00476, 0, 2.98228, 0);
G2L["6ed"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6ed"]["Text"] = [[]];
G2L["6ed"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
G2L["6ee"] = Instance.new("LocalScript", G2L["6ed"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox
G2L["6ef"] = Instance.new("TextBox", G2L["5fb"]);
G2L["6ef"]["BorderSizePixel"] = 0;
G2L["6ef"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["6ef"]["TextSize"] = 14;
G2L["6ef"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["6ef"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6ef"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6ef"]["ClearTextOnFocus"] = false;
G2L["6ef"]["PlaceholderText"] = [[FovTransparency (0)]];
G2L["6ef"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["6ef"]["Position"] = UDim2.new(-0.00476, 0, 2.82518, 0);
G2L["6ef"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6ef"]["Text"] = [[]];
G2L["6ef"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
G2L["6f0"] = Instance.new("LocalScript", G2L["6ef"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox
G2L["6f1"] = Instance.new("TextBox", G2L["5fb"]);
G2L["6f1"]["BorderSizePixel"] = 0;
G2L["6f1"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["6f1"]["TextSize"] = 14;
G2L["6f1"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["6f1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6f1"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6f1"]["ClearTextOnFocus"] = false;
G2L["6f1"]["PlaceholderText"] = [[FovColor (255,255,255)]];
G2L["6f1"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["6f1"]["Position"] = UDim2.new(0.00021, 0, 2.67157, 0);
G2L["6f1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6f1"]["Text"] = [[]];
G2L["6f1"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
G2L["6f2"] = Instance.new("LocalScript", G2L["6f1"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox
G2L["6f3"] = Instance.new("TextBox", G2L["5fb"]);
G2L["6f3"]["BorderSizePixel"] = 0;
G2L["6f3"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["6f3"]["TextSize"] = 14;
G2L["6f3"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["6f3"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6f3"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6f3"]["ClearTextOnFocus"] = false;
G2L["6f3"]["PlaceholderText"] = [[Maxdistance (300)]];
G2L["6f3"]["Size"] = UDim2.new(1, 0, 0.156, 0);
G2L["6f3"]["Position"] = UDim2.new(-0.005, 0, 2.5389, 0);
G2L["6f3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6f3"]["Text"] = [[]];
G2L["6f3"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
G2L["6f4"] = Instance.new("LocalScript", G2L["6f3"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["6f5"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["6f5"]["TextWrapped"] = true;
G2L["6f5"]["BorderSizePixel"] = 0;
G2L["6f5"]["TextSize"] = 14;
G2L["6f5"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["6f5"]["TextScaled"] = true;
G2L["6f5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6f5"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6f5"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["6f5"]["BackgroundTransparency"] = 1;
G2L["6f5"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["6f5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6f5"]["Text"] = [[OneTarget]];
G2L["6f5"]["Position"] = UDim2.new(0.03696, 0, 1.10827, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["6f6"] = Instance.new("Frame", G2L["5fb"]);
G2L["6f6"]["BorderSizePixel"] = 0;
G2L["6f6"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["6f6"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["6f6"]["Position"] = UDim2.new(0.75796, 0, 1.11608, 0);
G2L["6f6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6f6"]["Name"] = [[Enable]];
G2L["6f6"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["6f7"] = Instance.new("UICorner", G2L["6f6"]);
G2L["6f7"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["6f8"] = Instance.new("TextButton", G2L["6f6"]);
G2L["6f8"]["BorderSizePixel"] = 0;
G2L["6f8"]["TextTransparency"] = 1;
G2L["6f8"]["TextSize"] = 14;
G2L["6f8"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6f8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6f8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6f8"]["BackgroundTransparency"] = 1;
G2L["6f8"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6f8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["6f9"] = Instance.new("LocalScript", G2L["6f8"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["6fa"] = Instance.new("UICorner", G2L["6f8"]);
G2L["6fa"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["6fb"] = Instance.new("UIAspectRatioConstraint", G2L["6f8"]);
G2L["6fb"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["6fc"] = Instance.new("Frame", G2L["6f6"]);
G2L["6fc"]["BorderSizePixel"] = 0;
G2L["6fc"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["6fc"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["6fc"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["6fc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6fc"]["Name"] = [[Carget]];
G2L["6fc"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["6fd"] = Instance.new("UICorner", G2L["6fc"]);
G2L["6fd"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["6fe"] = Instance.new("UIAspectRatioConstraint", G2L["6fc"]);
G2L["6fe"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["6ff"] = Instance.new("UIAspectRatioConstraint", G2L["6f6"]);
G2L["6ff"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["700"] = Instance.new("BoolValue", G2L["6f6"]);
G2L["700"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["701"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["701"]["TextWrapped"] = true;
G2L["701"]["BorderSizePixel"] = 0;
G2L["701"]["TextSize"] = 14;
G2L["701"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["701"]["TextScaled"] = true;
G2L["701"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["701"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["701"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["701"]["BackgroundTransparency"] = 1;
G2L["701"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["701"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["701"]["Text"] = [[Mouse Aim]];
G2L["701"]["Position"] = UDim2.new(0.03696, 0, 1.20781, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["702"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["702"]["TextWrapped"] = true;
G2L["702"]["BorderSizePixel"] = 0;
G2L["702"]["TextSize"] = 14;
G2L["702"]["TextScaled"] = true;
G2L["702"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["702"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["702"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["702"]["BackgroundTransparency"] = 1;
G2L["702"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["702"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["702"]["Text"] = [[________________________________________]];
G2L["702"]["Position"] = UDim2.new(0.00499, 0, 2.47197, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextLabel
G2L["703"] = Instance.new("TextLabel", G2L["5fb"]);
G2L["703"]["TextWrapped"] = true;
G2L["703"]["BorderSizePixel"] = 0;
G2L["703"]["TextSize"] = 14;
G2L["703"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["703"]["TextScaled"] = true;
G2L["703"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["703"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["703"]["TextColor3"] = Color3.fromRGB(168, 168, 168);
G2L["703"]["BackgroundTransparency"] = 1;
G2L["703"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["703"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["703"]["Text"] = [[Auto Shoot]];
G2L["703"]["Position"] = UDim2.new(0.03696, 0, 1.30378, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable
G2L["704"] = Instance.new("Frame", G2L["5fb"]);
G2L["704"]["BorderSizePixel"] = 0;
G2L["704"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["704"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["704"]["Position"] = UDim2.new(0.75796, 0, 1.31159, 0);
G2L["704"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["704"]["Name"] = [[Enable]];
G2L["704"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UICorner
G2L["705"] = Instance.new("UICorner", G2L["704"]);
G2L["705"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton
G2L["706"] = Instance.new("TextButton", G2L["704"]);
G2L["706"]["BorderSizePixel"] = 0;
G2L["706"]["TextTransparency"] = 1;
G2L["706"]["TextSize"] = 14;
G2L["706"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["706"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["706"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["706"]["BackgroundTransparency"] = 1;
G2L["706"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["706"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
G2L["707"] = Instance.new("LocalScript", G2L["706"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UICorner
G2L["708"] = Instance.new("UICorner", G2L["706"]);
G2L["708"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.UIAspectRatioConstraint
G2L["709"] = Instance.new("UIAspectRatioConstraint", G2L["706"]);
G2L["709"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget
G2L["70a"] = Instance.new("Frame", G2L["704"]);
G2L["70a"]["BorderSizePixel"] = 0;
G2L["70a"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["70a"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["70a"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["70a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["70a"]["Name"] = [[Carget]];
G2L["70a"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UICorner
G2L["70b"] = Instance.new("UICorner", G2L["70a"]);
G2L["70b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Carget.UIAspectRatioConstraint
G2L["70c"] = Instance.new("UIAspectRatioConstraint", G2L["70a"]);
G2L["70c"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.UIAspectRatioConstraint
G2L["70d"] = Instance.new("UIAspectRatioConstraint", G2L["704"]);
G2L["70d"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.Enabled
G2L["70e"] = Instance.new("BoolValue", G2L["704"]);
G2L["70e"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling
G2L["70f"] = Instance.new("Frame", G2L["50a"]);
G2L["70f"]["BorderSizePixel"] = 0;
G2L["70f"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["70f"]["Size"] = UDim2.new(0.492, 0, 0.13, 0);
G2L["70f"]["Position"] = UDim2.new(-0.00259, 0, 0.208, 0);
G2L["70f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["70f"]["Name"] = [[TouchFling]];
G2L["70f"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextLabel
G2L["710"] = Instance.new("TextLabel", G2L["70f"]);
G2L["710"]["TextWrapped"] = true;
G2L["710"]["BorderSizePixel"] = 0;
G2L["710"]["TextSize"] = 14;
G2L["710"]["TextScaled"] = true;
G2L["710"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["710"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["710"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["710"]["BackgroundTransparency"] = 1;
G2L["710"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["710"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["710"]["Text"] = [[Touchfling]];
G2L["710"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextLabel
G2L["711"] = Instance.new("TextLabel", G2L["70f"]);
G2L["711"]["TextWrapped"] = true;
G2L["711"]["BorderSizePixel"] = 0;
G2L["711"]["TextSize"] = 14;
G2L["711"]["TextScaled"] = true;
G2L["711"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["711"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["711"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["711"]["BackgroundTransparency"] = 1;
G2L["711"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["711"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["711"]["Text"] = [[________________________________________]];
G2L["711"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextLabel
G2L["712"] = Instance.new("TextLabel", G2L["70f"]);
G2L["712"]["TextWrapped"] = true;
G2L["712"]["BorderSizePixel"] = 0;
G2L["712"]["TextSize"] = 14;
G2L["712"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["712"]["TextScaled"] = true;
G2L["712"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["712"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["712"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["712"]["BackgroundTransparency"] = 1;
G2L["712"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["712"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["712"]["Text"] = [[Enable]];
G2L["712"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1
G2L["713"] = Instance.new("Frame", G2L["70f"]);
G2L["713"]["BorderSizePixel"] = 0;
G2L["713"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["713"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["713"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["713"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["713"]["Name"] = [[Enable1]];
G2L["713"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.UICorner
G2L["714"] = Instance.new("UICorner", G2L["713"]);
G2L["714"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton
G2L["715"] = Instance.new("TextButton", G2L["713"]);
G2L["715"]["BorderSizePixel"] = 0;
G2L["715"]["TextTransparency"] = 1;
G2L["715"]["TextSize"] = 14;
G2L["715"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["715"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["715"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["715"]["BackgroundTransparency"] = 1;
G2L["715"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["715"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton.LocalScript
G2L["716"] = Instance.new("LocalScript", G2L["715"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton.ModuleScript
G2L["717"] = Instance.new("ModuleScript", G2L["715"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton.UICorner
G2L["718"] = Instance.new("UICorner", G2L["715"]);
G2L["718"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton.UIAspectRatioConstraint
G2L["719"] = Instance.new("UIAspectRatioConstraint", G2L["715"]);
G2L["719"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.Carget
G2L["71a"] = Instance.new("Frame", G2L["713"]);
G2L["71a"]["BorderSizePixel"] = 0;
G2L["71a"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["71a"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["71a"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["71a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["71a"]["Name"] = [[Carget]];
G2L["71a"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.Carget.UICorner
G2L["71b"] = Instance.new("UICorner", G2L["71a"]);
G2L["71b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.Carget.UIAspectRatioConstraint
G2L["71c"] = Instance.new("UIAspectRatioConstraint", G2L["71a"]);
G2L["71c"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.UIAspectRatioConstraint
G2L["71d"] = Instance.new("UIAspectRatioConstraint", G2L["713"]);
G2L["71d"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.Enabled
G2L["71e"] = Instance.new("BoolValue", G2L["713"]);
G2L["71e"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency
G2L["71f"] = Instance.new("Frame", G2L["70f"]);
G2L["71f"]["BorderSizePixel"] = 0;
G2L["71f"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["71f"]["Size"] = UDim2.new(0.92105, 0, 0.08321, 0);
G2L["71f"]["Position"] = UDim2.new(0.02668, 0, 0.394, 0);
G2L["71f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["71f"]["Name"] = [[Transparency]];
G2L["71f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency.UICorner
G2L["720"] = Instance.new("UICorner", G2L["71f"]);
G2L["720"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency.Enabled
G2L["721"] = Instance.new("BoolValue", G2L["71f"]);
G2L["721"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency.TextLabel
G2L["722"] = Instance.new("TextLabel", G2L["71f"]);
G2L["722"]["TextWrapped"] = true;
G2L["722"]["Interactable"] = false;
G2L["722"]["BorderSizePixel"] = 0;
G2L["722"]["TextSize"] = 14;
G2L["722"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["722"]["TextScaled"] = true;
G2L["722"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["722"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["722"]["TextColor3"] = Color3.fromRGB(111, 111, 111);
G2L["722"]["BackgroundTransparency"] = 1;
G2L["722"]["Size"] = UDim2.new(0.97414, 0, 0.85719, 0);
G2L["722"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["722"]["Text"] = [[Power: 5000]];
G2L["722"]["Position"] = UDim2.new(0.02586, 0, -0.07775, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency.Carget
G2L["723"] = Instance.new("Frame", G2L["71f"]);
G2L["723"]["ZIndex"] = -333;
G2L["723"]["BorderSizePixel"] = 0;
G2L["723"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["723"]["Size"] = UDim2.new(0.09, 0, 0.902, 0);
G2L["723"]["Position"] = UDim2.new(0.44793, 0, 0, 0);
G2L["723"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["723"]["Name"] = [[Carget]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency.Carget.UICorner
G2L["724"] = Instance.new("UICorner", G2L["723"]);
G2L["724"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency.Carget.TextButton
G2L["725"] = Instance.new("TextButton", G2L["723"]);
G2L["725"]["BorderSizePixel"] = 0;
G2L["725"]["TextTransparency"] = 1;
G2L["725"]["TextSize"] = 14;
G2L["725"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["725"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["725"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["725"]["BackgroundTransparency"] = 1;
G2L["725"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["725"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency.Carget.TextButton.LocalScript
G2L["726"] = Instance.new("LocalScript", G2L["725"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency.Carget.UIAspectRatioConstraint
G2L["727"] = Instance.new("UIAspectRatioConstraint", G2L["723"]);
G2L["727"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.debug
G2L["728"] = Instance.new("BoolValue", G2L["70f"]);
G2L["728"]["Name"] = [[debug]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Value
G2L["729"] = Instance.new("StringValue", G2L["70f"]);
G2L["729"]["Value"] = [[Rust]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.power
G2L["72a"] = Instance.new("NumberValue", G2L["70f"]);
G2L["72a"]["Name"] = [[power]];
G2L["72a"]["Value"] = 5000;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextLabel
G2L["72b"] = Instance.new("TextLabel", G2L["70f"]);
G2L["72b"]["TextWrapped"] = true;
G2L["72b"]["BorderSizePixel"] = 0;
G2L["72b"]["TextSize"] = 14;
G2L["72b"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["72b"]["TextScaled"] = true;
G2L["72b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["72b"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["72b"]["BackgroundTransparency"] = 1;
G2L["72b"]["Size"] = UDim2.new(0.68858, 0, 0.10248, 0);
G2L["72b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72b"]["Text"] = [[RobloxegorMode]];
G2L["72b"]["Position"] = UDim2.new(0.03158, 0, 0.76396, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextLabel
G2L["72c"] = Instance.new("TextLabel", G2L["70f"]);
G2L["72c"]["TextWrapped"] = true;
G2L["72c"]["BorderSizePixel"] = 0;
G2L["72c"]["TextSize"] = 14;
G2L["72c"]["TextScaled"] = true;
G2L["72c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["72c"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["72c"]["BackgroundTransparency"] = 1;
G2L["72c"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["72c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72c"]["Text"] = [[Other]];
G2L["72c"]["Position"] = UDim2.new(0, 0, 0.59989, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g
G2L["72d"] = Instance.new("Frame", G2L["70f"]);
G2L["72d"]["BorderSizePixel"] = 0;
G2L["72d"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["72d"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["72d"]["Position"] = UDim2.new(0.75263, 0, 0.77177, 0);
G2L["72d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72d"]["Name"] = [[Enable1g]];
G2L["72d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.UICorner
G2L["72e"] = Instance.new("UICorner", G2L["72d"]);
G2L["72e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton
G2L["72f"] = Instance.new("TextButton", G2L["72d"]);
G2L["72f"]["BorderSizePixel"] = 0;
G2L["72f"]["TextTransparency"] = 1;
G2L["72f"]["TextSize"] = 14;
G2L["72f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["72f"]["BackgroundTransparency"] = 1;
G2L["72f"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["72f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton.LocalScript
G2L["730"] = Instance.new("LocalScript", G2L["72f"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton.UICorner
G2L["731"] = Instance.new("UICorner", G2L["72f"]);
G2L["731"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton.UIAspectRatioConstraint
G2L["732"] = Instance.new("UIAspectRatioConstraint", G2L["72f"]);
G2L["732"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.Carget
G2L["733"] = Instance.new("Frame", G2L["72d"]);
G2L["733"]["BorderSizePixel"] = 0;
G2L["733"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["733"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["733"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["733"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["733"]["Name"] = [[Carget]];
G2L["733"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.Carget.UICorner
G2L["734"] = Instance.new("UICorner", G2L["733"]);
G2L["734"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.Carget.UIAspectRatioConstraint
G2L["735"] = Instance.new("UIAspectRatioConstraint", G2L["733"]);
G2L["735"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.UIAspectRatioConstraint
G2L["736"] = Instance.new("UIAspectRatioConstraint", G2L["72d"]);
G2L["736"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.Enabled
G2L["737"] = Instance.new("BoolValue", G2L["72d"]);
G2L["737"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextLabel
G2L["738"] = Instance.new("TextLabel", G2L["70f"]);
G2L["738"]["TextWrapped"] = true;
G2L["738"]["BorderSizePixel"] = 0;
G2L["738"]["TextSize"] = 14;
G2L["738"]["TextScaled"] = true;
G2L["738"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["738"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["738"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["738"]["BackgroundTransparency"] = 1;
G2L["738"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["738"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["738"]["Text"] = [[________________________________________]];
G2L["738"]["Position"] = UDim2.new(0, 0, 0.65068, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextBox
G2L["739"] = Instance.new("TextBox", G2L["70f"]);
G2L["739"]["PlaceholderColor3"] = Color3.fromRGB(180, 180, 180);
G2L["739"]["BorderSizePixel"] = 0;
G2L["739"]["TextStrokeColor3"] = Color3.fromRGB(209, 209, 209);
G2L["739"]["TextSize"] = 14;
G2L["739"]["TextColor3"] = Color3.fromRGB(228, 228, 228);
G2L["739"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["739"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["739"]["PlaceholderText"] = [[BIND (NONE)]];
G2L["739"]["Size"] = UDim2.new(1, 0, 0.14742, 0);
G2L["739"]["Position"] = UDim2.new(-0.00003, 0, 0.45246, 0);
G2L["739"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["739"]["Text"] = [[Bind (None)]];
G2L["739"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextBox.TextButton
G2L["73a"] = Instance.new("TextButton", G2L["739"]);
G2L["73a"]["BorderSizePixel"] = 0;
G2L["73a"]["TextTransparency"] = 1;
G2L["73a"]["TextSize"] = 14;
G2L["73a"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["73a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["73a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["73a"]["BackgroundTransparency"] = 1;
G2L["73a"]["Size"] = UDim2.new(0.99281, 0, 1.02118, 0);
G2L["73a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["73a"]["Position"] = UDim2.new(0.00003, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextBox.TextButton.LocalScript
G2L["73b"] = Instance.new("LocalScript", G2L["73a"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextLabel
G2L["73c"] = Instance.new("TextLabel", G2L["70f"]);
G2L["73c"]["TextWrapped"] = true;
G2L["73c"]["BorderSizePixel"] = 0;
G2L["73c"]["TextSize"] = 14;
G2L["73c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["73c"]["TextScaled"] = true;
G2L["73c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["73c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["73c"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["73c"]["BackgroundTransparency"] = 1;
G2L["73c"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["73c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["73c"]["Text"] = [[Debug]];
G2L["73c"]["Position"] = UDim2.new(0.03158, 0, 0.28218, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1
G2L["73d"] = Instance.new("Frame", G2L["70f"]);
G2L["73d"]["BorderSizePixel"] = 0;
G2L["73d"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["73d"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["73d"]["Position"] = UDim2.new(0.75263, 0, 0.28999, 0);
G2L["73d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["73d"]["Name"] = [[Enable1]];
G2L["73d"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.UICorner
G2L["73e"] = Instance.new("UICorner", G2L["73d"]);
G2L["73e"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton
G2L["73f"] = Instance.new("TextButton", G2L["73d"]);
G2L["73f"]["BorderSizePixel"] = 0;
G2L["73f"]["TextTransparency"] = 1;
G2L["73f"]["TextSize"] = 14;
G2L["73f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["73f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["73f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["73f"]["BackgroundTransparency"] = 1;
G2L["73f"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["73f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton.LocalScript
G2L["740"] = Instance.new("LocalScript", G2L["73f"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton.UICorner
G2L["741"] = Instance.new("UICorner", G2L["73f"]);
G2L["741"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton.UIAspectRatioConstraint
G2L["742"] = Instance.new("UIAspectRatioConstraint", G2L["73f"]);
G2L["742"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.Carget
G2L["743"] = Instance.new("Frame", G2L["73d"]);
G2L["743"]["BorderSizePixel"] = 0;
G2L["743"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["743"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["743"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["743"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["743"]["Name"] = [[Carget]];
G2L["743"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.Carget.UICorner
G2L["744"] = Instance.new("UICorner", G2L["743"]);
G2L["744"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.Carget.UIAspectRatioConstraint
G2L["745"] = Instance.new("UIAspectRatioConstraint", G2L["743"]);
G2L["745"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.UIAspectRatioConstraint
G2L["746"] = Instance.new("UIAspectRatioConstraint", G2L["73d"]);
G2L["746"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.Enabled
G2L["747"] = Instance.new("BoolValue", G2L["73d"]);
G2L["747"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextLabel
G2L["748"] = Instance.new("TextLabel", G2L["70f"]);
G2L["748"]["TextWrapped"] = true;
G2L["748"]["BorderSizePixel"] = 0;
G2L["748"]["TextSize"] = 14;
G2L["748"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["748"]["TextScaled"] = true;
G2L["748"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["748"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["748"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["748"]["BackgroundTransparency"] = 1;
G2L["748"]["Size"] = UDim2.new(0.68858, 0, 0.10248, 0);
G2L["748"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["748"]["Text"] = [[AntiGameplayPause]];
G2L["748"]["Position"] = UDim2.new(0.03657, 0, 0.85822, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g
G2L["749"] = Instance.new("Frame", G2L["70f"]);
G2L["749"]["BorderSizePixel"] = 0;
G2L["749"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["749"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["749"]["Position"] = UDim2.new(0.75762, 0, 0.86603, 0);
G2L["749"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["749"]["Name"] = [[Enable1g]];
G2L["749"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.UICorner
G2L["74a"] = Instance.new("UICorner", G2L["749"]);
G2L["74a"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton
G2L["74b"] = Instance.new("TextButton", G2L["749"]);
G2L["74b"]["BorderSizePixel"] = 0;
G2L["74b"]["TextTransparency"] = 1;
G2L["74b"]["TextSize"] = 14;
G2L["74b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["74b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["74b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["74b"]["BackgroundTransparency"] = 1;
G2L["74b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["74b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton.LocalScript
G2L["74c"] = Instance.new("LocalScript", G2L["74b"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton.UICorner
G2L["74d"] = Instance.new("UICorner", G2L["74b"]);
G2L["74d"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton.UIAspectRatioConstraint
G2L["74e"] = Instance.new("UIAspectRatioConstraint", G2L["74b"]);
G2L["74e"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.Carget
G2L["74f"] = Instance.new("Frame", G2L["749"]);
G2L["74f"]["BorderSizePixel"] = 0;
G2L["74f"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["74f"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["74f"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["74f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["74f"]["Name"] = [[Carget]];
G2L["74f"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.Carget.UICorner
G2L["750"] = Instance.new("UICorner", G2L["74f"]);
G2L["750"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.Carget.UIAspectRatioConstraint
G2L["751"] = Instance.new("UIAspectRatioConstraint", G2L["74f"]);
G2L["751"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.UIAspectRatioConstraint
G2L["752"] = Instance.new("UIAspectRatioConstraint", G2L["749"]);
G2L["752"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.Enabled
G2L["753"] = Instance.new("BoolValue", G2L["749"]);
G2L["753"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump
G2L["754"] = Instance.new("Frame", G2L["50a"]);
G2L["754"]["BorderSizePixel"] = 0;
G2L["754"]["BackgroundColor3"] = Color3.fromRGB(24, 24, 24);
G2L["754"]["Size"] = UDim2.new(0.492, 0, 0.13, 0);
G2L["754"]["Position"] = UDim2.new(-0.00259, 0, 0.42, 0);
G2L["754"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["754"]["Name"] = [[AutoJump]];
G2L["754"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.TextLabel
G2L["755"] = Instance.new("TextLabel", G2L["754"]);
G2L["755"]["TextWrapped"] = true;
G2L["755"]["BorderSizePixel"] = 0;
G2L["755"]["TextSize"] = 14;
G2L["755"]["TextScaled"] = true;
G2L["755"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["755"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["755"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["755"]["BackgroundTransparency"] = 1;
G2L["755"]["Size"] = UDim2.new(1, 0, 0.10619, 0);
G2L["755"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["755"]["Text"] = [[AutoJump]];
G2L["755"]["Position"] = UDim2.new(0, 0, 0.02734, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.TextLabel
G2L["756"] = Instance.new("TextLabel", G2L["754"]);
G2L["756"]["TextWrapped"] = true;
G2L["756"]["BorderSizePixel"] = 0;
G2L["756"]["TextSize"] = 14;
G2L["756"]["TextScaled"] = true;
G2L["756"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["756"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["756"]["TextColor3"] = Color3.fromRGB(40, 40, 40);
G2L["756"]["BackgroundTransparency"] = 1;
G2L["756"]["Size"] = UDim2.new(1, 0, 0.117, 0);
G2L["756"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["756"]["Text"] = [[________________________________________]];
G2L["756"]["Position"] = UDim2.new(0, 0, 0.07813, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.TextLabel
G2L["757"] = Instance.new("TextLabel", G2L["754"]);
G2L["757"]["TextWrapped"] = true;
G2L["757"]["BorderSizePixel"] = 0;
G2L["757"]["TextSize"] = 14;
G2L["757"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["757"]["TextScaled"] = true;
G2L["757"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["757"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["757"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["757"]["BackgroundTransparency"] = 1;
G2L["757"]["Size"] = UDim2.new(0.6, 0, 0.10248, 0);
G2L["757"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["757"]["Text"] = [[Enable]];
G2L["757"]["Position"] = UDim2.new(0.03158, 0, 0.19141, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Value
G2L["758"] = Instance.new("StringValue", G2L["754"]);
G2L["758"]["Value"] = [[player]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.power
G2L["759"] = Instance.new("NumberValue", G2L["754"]);
G2L["759"]["Name"] = [[power]];
G2L["759"]["Value"] = 5000;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1
G2L["75a"] = Instance.new("Frame", G2L["754"]);
G2L["75a"]["BorderSizePixel"] = 0;
G2L["75a"]["BackgroundColor3"] = Color3.fromRGB(60, 60, 60);
G2L["75a"]["Size"] = UDim2.new(0.19474, 0, 0.09857, 0);
G2L["75a"]["Position"] = UDim2.new(0.75263, 0, 0.19922, 0);
G2L["75a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["75a"]["Name"] = [[Enable1]];
G2L["75a"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.UICorner
G2L["75b"] = Instance.new("UICorner", G2L["75a"]);
G2L["75b"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.TextButton
G2L["75c"] = Instance.new("TextButton", G2L["75a"]);
G2L["75c"]["BorderSizePixel"] = 0;
G2L["75c"]["TextTransparency"] = 1;
G2L["75c"]["TextSize"] = 14;
G2L["75c"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["75c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["75c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["75c"]["BackgroundTransparency"] = 1;
G2L["75c"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["75c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.TextButton.LocalScript
G2L["75d"] = Instance.new("LocalScript", G2L["75c"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.TextButton.ModuleScript
G2L["75e"] = Instance.new("ModuleScript", G2L["75c"]);



-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.TextButton.UICorner
G2L["75f"] = Instance.new("UICorner", G2L["75c"]);
G2L["75f"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.TextButton.UIAspectRatioConstraint
G2L["760"] = Instance.new("UIAspectRatioConstraint", G2L["75c"]);
G2L["760"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.Carget
G2L["761"] = Instance.new("Frame", G2L["75a"]);
G2L["761"]["BorderSizePixel"] = 0;
G2L["761"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["761"]["Size"] = UDim2.new(0.42568, 0, 0.79688, 0);
G2L["761"]["Position"] = UDim2.new(0.065, 0, 0.098, 0);
G2L["761"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["761"]["Name"] = [[Carget]];
G2L["761"]["BackgroundTransparency"] = 0.3;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.Carget.UICorner
G2L["762"] = Instance.new("UICorner", G2L["761"]);
G2L["762"]["CornerRadius"] = UDim.new(99, 8);


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.Carget.UIAspectRatioConstraint
G2L["763"] = Instance.new("UIAspectRatioConstraint", G2L["761"]);
G2L["763"]["AspectRatio"] = 0.9278;


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.Enabled
G2L["764"] = Instance.new("BoolValue", G2L["75a"]);
G2L["764"]["Name"] = [[Enabled]];


-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.UIAspectRatioConstraint
G2L["765"] = Instance.new("UIAspectRatioConstraint", G2L["75a"]);
G2L["765"]["AspectRatio"] = 1.73684;


-- StarterGui.xescriptsXD.Frame.Lighting.Preview
G2L["766"] = Instance.new("Frame", G2L["508"]);
G2L["766"]["BorderSizePixel"] = 0;
G2L["766"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["766"]["Size"] = UDim2.new(0.50291, 0, 1.22581, 0);
G2L["766"]["Position"] = UDim2.new(1.05488, 0, -0.17595, 0);
G2L["766"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["766"]["Name"] = [[Preview]];


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.TextLabel
G2L["767"] = Instance.new("TextLabel", G2L["766"]);
G2L["767"]["TextWrapped"] = true;
G2L["767"]["BorderSizePixel"] = 0;
G2L["767"]["TextSize"] = 14;
G2L["767"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["767"]["TextScaled"] = true;
G2L["767"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["767"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["767"]["TextColor3"] = Color3.fromRGB(237, 237, 237);
G2L["767"]["BackgroundTransparency"] = 1;
G2L["767"]["Size"] = UDim2.new(0.5778, 0, 0.07402, 0);
G2L["767"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["767"]["Text"] = [[Preview]];
G2L["767"]["Position"] = UDim2.new(0.03083, 0, 0.01167, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.TextLabel.UITextSizeConstraint
G2L["768"] = Instance.new("UITextSizeConstraint", G2L["767"]);
G2L["768"]["MaxTextSize"] = 24;


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel
G2L["769"] = Instance.new("ImageLabel", G2L["766"]);
G2L["769"]["BorderSizePixel"] = 0;
G2L["769"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["769"]["Image"] = [[rbxassetid://95723529271493]];
G2L["769"]["Size"] = UDim2.new(1.30732, 0, 0.68421, 0);
G2L["769"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["769"]["BackgroundTransparency"] = 1;
G2L["769"]["Position"] = UDim2.new(-0.1561, 0, 0.15789, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetESP
G2L["76a"] = Instance.new("ImageLabel", G2L["769"]);
G2L["76a"]["BorderSizePixel"] = 0;
G2L["76a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["76a"]["Image"] = [[rbxassetid://81155924887135]];
G2L["76a"]["Size"] = UDim2.new(0, 111, 0, 109);
G2L["76a"]["Visible"] = false;
G2L["76a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["76a"]["BackgroundTransparency"] = 1;
G2L["76a"]["Name"] = [[TargetESP]];
G2L["76a"]["Position"] = UDim2.new(0.29104, 0, 0.02098, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1
G2L["76b"] = Instance.new("Frame", G2L["769"]);
G2L["76b"]["Visible"] = false;
G2L["76b"]["Interactable"] = false;
G2L["76b"]["BorderSizePixel"] = 0;
G2L["76b"]["BackgroundColor3"] = Color3.fromRGB(26, 26, 26);
G2L["76b"]["Size"] = UDim2.new(0, 159, 0, 56);
G2L["76b"]["Position"] = UDim2.new(0.20131, 0, 0.90399, 0);
G2L["76b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["76b"]["Name"] = [[TargetHud1]];
G2L["76b"]["BackgroundTransparency"] = 0.05;


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Nickname
G2L["76c"] = Instance.new("TextLabel", G2L["76b"]);
G2L["76c"]["TextWrapped"] = true;
G2L["76c"]["Interactable"] = false;
G2L["76c"]["BorderSizePixel"] = 0;
G2L["76c"]["TextSize"] = 14;
G2L["76c"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["76c"]["TextScaled"] = true;
G2L["76c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["76c"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["76c"]["TextColor3"] = Color3.fromRGB(205, 205, 205);
G2L["76c"]["BackgroundTransparency"] = 1;
G2L["76c"]["Size"] = UDim2.new(0.63298, 0, 0.30769, 0);
G2L["76c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["76c"]["Text"] = [[XESNPC]];
G2L["76c"]["Name"] = [[Nickname]];
G2L["76c"]["Position"] = UDim2.new(0.32368, 0, 0.08606, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Nickname.UI-Shadow
G2L["76d"] = Instance.new("Frame", G2L["76c"]);
G2L["76d"]["Interactable"] = false;
G2L["76d"]["ZIndex"] = -999999999;
G2L["76d"]["Size"] = UDim2.new(0.83673, 0, 1, 0);
G2L["76d"]["Position"] = UDim2.new(-0.00135, 0, 0, 0);
G2L["76d"]["Name"] = [[UI-Shadow]];
G2L["76d"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Nickname.UI-Shadow.umbraShadow
G2L["76e"] = Instance.new("ImageLabel", G2L["76d"]);
G2L["76e"]["Interactable"] = false;
G2L["76e"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["76e"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["76e"]["ImageTransparency"] = 0.98;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["76e"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["76e"]["Image"] = [[rbxassetid://1316045217]];
G2L["76e"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["76e"]["BackgroundTransparency"] = 1;
G2L["76e"]["Name"] = [[umbraShadow]];
G2L["76e"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Nickname.UI-Shadow.penumbraShadow
G2L["76f"] = Instance.new("ImageLabel", G2L["76d"]);
G2L["76f"]["Interactable"] = false;
G2L["76f"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["76f"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["76f"]["ImageTransparency"] = 0.98;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["76f"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["76f"]["Image"] = [[rbxassetid://1316045217]];
G2L["76f"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["76f"]["BackgroundTransparency"] = 1;
G2L["76f"]["Name"] = [[penumbraShadow]];
G2L["76f"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Nickname.UI-Shadow.ambientShadow
G2L["770"] = Instance.new("ImageLabel", G2L["76d"]);
G2L["770"]["Interactable"] = false;
G2L["770"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["770"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["770"]["ImageTransparency"] = 0.98;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["770"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["770"]["Image"] = [[rbxassetid://1316045217]];
G2L["770"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["770"]["BackgroundTransparency"] = 1;
G2L["770"]["Name"] = [[ambientShadow]];
G2L["770"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Target
G2L["771"] = Instance.new("Frame", G2L["76b"]);
G2L["771"]["Interactable"] = false;
G2L["771"]["BorderSizePixel"] = 0;
G2L["771"]["BackgroundColor3"] = Color3.fromRGB(18, 18, 18);
G2L["771"]["Size"] = UDim2.new(0.25532, 0, 0.78462, 0);
G2L["771"]["Position"] = UDim2.new(0.03137, 0, 0.0682, 0);
G2L["771"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["771"]["Name"] = [[Target]];
G2L["771"]["BackgroundTransparency"] = 0.05;


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Target.ImageLabel
G2L["772"] = Instance.new("ImageLabel", G2L["771"]);
G2L["772"]["Interactable"] = false;
G2L["772"]["BorderSizePixel"] = 0;
G2L["772"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["772"]["ImageColor3"] = Color3.fromRGB(183, 183, 183);
G2L["772"]["Image"] = [[https://www.roblox.com/headshot-thumbnail/image?userId=7163706893&width=420&height=420&format=png]];
G2L["772"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["772"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["772"]["BackgroundTransparency"] = 1;
G2L["772"]["Position"] = UDim2.new(-0.0021, 0, 0.0063, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Target.ImageLabel.UIAspectRatioConstraint
G2L["773"] = Instance.new("UIAspectRatioConstraint", G2L["772"]);
G2L["773"]["AspectRatio"] = 0.94118;


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Target.ImageLabel.UICorner
G2L["774"] = Instance.new("UICorner", G2L["772"]);



-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Target.UICorner
G2L["775"] = Instance.new("UICorner", G2L["771"]);



-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health
G2L["776"] = Instance.new("Frame", G2L["76b"]);
G2L["776"]["Interactable"] = false;
G2L["776"]["BorderSizePixel"] = 0;
G2L["776"]["BackgroundColor3"] = Color3.fromRGB(29, 108, 51);
G2L["776"]["Size"] = UDim2.new(0.64134, 0, 0.369, 0);
G2L["776"]["Position"] = UDim2.new(0.32368, 0, 0.50518, 0);
G2L["776"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["776"]["Name"] = [[Health]];
G2L["776"]["BackgroundTransparency"] = 0.05;


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UI-Shadow
G2L["777"] = Instance.new("Frame", G2L["776"]);
G2L["777"]["Interactable"] = false;
G2L["777"]["ZIndex"] = -999999999;
G2L["777"]["Size"] = UDim2.new(1.10185, 0, 1.64295, 0);
G2L["777"]["Position"] = UDim2.new(-0.0473, 0, -0.30197, 0);
G2L["777"]["Name"] = [[UI-Shadow]];
G2L["777"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UI-Shadow.umbraShadow
G2L["778"] = Instance.new("ImageLabel", G2L["777"]);
G2L["778"]["Interactable"] = false;
G2L["778"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["778"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["778"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["778"]["ImageColor3"] = Color3.fromRGB(111, 255, 21);
G2L["778"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["778"]["Image"] = [[rbxassetid://1316045217]];
G2L["778"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["778"]["BackgroundTransparency"] = 1;
G2L["778"]["Name"] = [[umbraShadow]];
G2L["778"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UI-Shadow.umbraShadow.UIGradient
G2L["779"] = Instance.new("UIGradient", G2L["778"]);
G2L["779"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["779"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UI-Shadow.penumbraShadow
G2L["77a"] = Instance.new("ImageLabel", G2L["777"]);
G2L["77a"]["Interactable"] = false;
G2L["77a"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["77a"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["77a"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["77a"]["ImageColor3"] = Color3.fromRGB(111, 255, 21);
G2L["77a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["77a"]["Image"] = [[rbxassetid://1316045217]];
G2L["77a"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["77a"]["BackgroundTransparency"] = 1;
G2L["77a"]["Name"] = [[penumbraShadow]];
G2L["77a"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UI-Shadow.penumbraShadow.UIGradient
G2L["77b"] = Instance.new("UIGradient", G2L["77a"]);
G2L["77b"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["77b"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UI-Shadow.ambientShadow
G2L["77c"] = Instance.new("ImageLabel", G2L["777"]);
G2L["77c"]["Interactable"] = false;
G2L["77c"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["77c"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["77c"]["ImageTransparency"] = 0.96;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["77c"]["ImageColor3"] = Color3.fromRGB(111, 255, 21);
G2L["77c"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["77c"]["Image"] = [[rbxassetid://1316045217]];
G2L["77c"]["Size"] = UDim2.new(1, 2, 1.02538, 2);
G2L["77c"]["BackgroundTransparency"] = 1;
G2L["77c"]["Name"] = [[ambientShadow]];
G2L["77c"]["Position"] = UDim2.new(0.5, 0, 0.48731, 2);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UI-Shadow.ambientShadow.UIGradient
G2L["77d"] = Instance.new("UIGradient", G2L["77c"]);
G2L["77d"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["77d"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UI-Shadow.UIGradient
G2L["77e"] = Instance.new("UIGradient", G2L["777"]);
G2L["77e"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["77e"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UIGradient
G2L["77f"] = Instance.new("UIGradient", G2L["776"]);
G2L["77f"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(1.000, 0.475)};
G2L["77f"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(223, 223, 223))};


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.Health.UICorner
G2L["780"] = Instance.new("UICorner", G2L["776"]);
G2L["780"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UI-Shadow
G2L["781"] = Instance.new("Frame", G2L["76b"]);
G2L["781"]["ZIndex"] = -999999999;
G2L["781"]["Size"] = UDim2.new(1.07447, 0, 1.12308, 0);
G2L["781"]["Position"] = UDim2.new(-0.03723, 0, -0.07692, 0);
G2L["781"]["Name"] = [[UI-Shadow]];
G2L["781"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UI-Shadow.umbraShadow
G2L["782"] = Instance.new("ImageLabel", G2L["781"]);
G2L["782"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["782"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["782"]["ImageTransparency"] = 0.93;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["782"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["782"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["782"]["Image"] = [[rbxassetid://1316045217]];
G2L["782"]["Size"] = UDim2.new(1.00495, 0, 1.16018, 0);
G2L["782"]["BackgroundTransparency"] = 1;
G2L["782"]["Name"] = [[umbraShadow]];
G2L["782"]["Position"] = UDim2.new(0.50248, 0, 0.5158, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UI-Shadow.umbraShadow.UICorner
G2L["783"] = Instance.new("UICorner", G2L["782"]);



-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UI-Shadow.penumbraShadow
G2L["784"] = Instance.new("ImageLabel", G2L["781"]);
G2L["784"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["784"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["784"]["ImageTransparency"] = 0.93;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["784"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["784"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["784"]["Image"] = [[rbxassetid://1316045217]];
G2L["784"]["Size"] = UDim2.new(1.00495, 0, 1.16018, 0);
G2L["784"]["BackgroundTransparency"] = 1;
G2L["784"]["Name"] = [[penumbraShadow]];
G2L["784"]["Position"] = UDim2.new(0.50248, 0, 0.5158, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UI-Shadow.penumbraShadow.UICorner
G2L["785"] = Instance.new("UICorner", G2L["784"]);



-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UI-Shadow.ambientShadow
G2L["786"] = Instance.new("ImageLabel", G2L["781"]);
G2L["786"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["786"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["786"]["ImageTransparency"] = 0.93;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["786"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["786"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["786"]["Image"] = [[rbxassetid://1316045217]];
G2L["786"]["Size"] = UDim2.new(1.00495, 0, 1.16018, 0);
G2L["786"]["BackgroundTransparency"] = 1;
G2L["786"]["Name"] = [[ambientShadow]];
G2L["786"]["Position"] = UDim2.new(0.50248, 0, 0.5158, 0);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UI-Shadow.ambientShadow.UICorner
G2L["787"] = Instance.new("UICorner", G2L["786"]);



-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UI-Shadow.UICorner
G2L["788"] = Instance.new("UICorner", G2L["781"]);



-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UIStroke
G2L["789"] = Instance.new("UIStroke", G2L["76b"]);
G2L["789"]["Transparency"] = 0.35;
G2L["789"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["789"]["Color"] = Color3.fromRGB(227, 227, 227);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UIStroke.UIGradient
G2L["78a"] = Instance.new("UIGradient", G2L["789"]);
G2L["78a"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.ImageLabel.TargetHud1.UICorner
G2L["78b"] = Instance.new("UICorner", G2L["76b"]);



-- StarterGui.xescriptsXD.Frame.Lighting.Preview.UIStroke
G2L["78c"] = Instance.new("UIStroke", G2L["766"]);
G2L["78c"]["Transparency"] = 0.35;
G2L["78c"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["78c"]["Thickness"] = 1.5;
G2L["78c"]["Color"] = Color3.fromRGB(227, 227, 227);


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.UIStroke.UIGradient
G2L["78d"] = Instance.new("UIGradient", G2L["78c"]);
G2L["78d"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};


-- StarterGui.xescriptsXD.Frame.Lighting.Preview.UIStroke.UIGradient.LocalScript
G2L["78e"] = Instance.new("LocalScript", G2L["78d"]);



-- StarterGui.xescriptsXD.Frame.Lighting.Preview.UICorner
G2L["78f"] = Instance.new("UICorner", G2L["766"]);



-- StarterGui.xescriptsXD.Frame.Lighting.Preview.UIGradient
G2L["790"] = Instance.new("UIGradient", G2L["766"]);
G2L["790"]["Rotation"] = 62;
G2L["790"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(206, 206, 206)),ColorSequenceKeypoint.new(0.145, Color3.fromRGB(243, 243, 243)),ColorSequenceKeypoint.new(0.490, Color3.fromRGB(255, 255, 255)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(192, 192, 192))};


-- StarterGui.xescriptsXD.Frame.Value
G2L["791"] = Instance.new("BoolValue", G2L["11b"]);
G2L["791"]["Value"] = true;


-- StarterGui.xescriptsXD.Frame.Value2
G2L["792"] = Instance.new("BoolValue", G2L["11b"]);
G2L["792"]["Name"] = [[Value2]];


-- StarterGui.xescriptsXD.Frame.Functions
G2L["793"] = Instance.new("Frame", G2L["11b"]);
G2L["793"]["ZIndex"] = 3;
G2L["793"]["BorderSizePixel"] = 0;
G2L["793"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["793"]["Size"] = UDim2.new(0.26083, 0, 0.53667, 0);
G2L["793"]["Position"] = UDim2.new(0.01, 0, 0.109, 0);
G2L["793"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["793"]["Name"] = [[Functions]];
G2L["793"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Functions.UICorner
G2L["794"] = Instance.new("UICorner", G2L["793"]);
G2L["794"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Functions.UIAspectRatioConstraint
G2L["795"] = Instance.new("UIAspectRatioConstraint", G2L["793"]);
G2L["795"]["AspectRatio"] = 0.65769;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame
G2L["796"] = Instance.new("ScrollingFrame", G2L["793"]);
G2L["796"]["Active"] = true;
G2L["796"]["BorderSizePixel"] = 0;
G2L["796"]["CanvasSize"] = UDim2.new(0, 0, 1, 0);
G2L["796"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["796"]["ScrollBarImageTransparency"] = 1;
G2L["796"]["Size"] = UDim2.new(1.00749, 0, 1.30547, 0);
G2L["796"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["796"]["Position"] = UDim2.new(0, 0, 0.08894, 0);
G2L["796"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["796"]["ScrollBarThickness"] = 0;
G2L["796"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General
G2L["797"] = Instance.new("Frame", G2L["796"]);
G2L["797"]["BorderSizePixel"] = 0;
G2L["797"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["797"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["797"]["Size"] = UDim2.new(0.89605, 0, 0.01558, 35);
G2L["797"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["797"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["797"]["Name"] = [[General]];
G2L["797"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.LocalScript
G2L["798"] = Instance.new("LocalScript", G2L["797"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.f
G2L["799"] = Instance.new("LocalScript", G2L["797"]);
G2L["799"]["Name"] = [[f]];


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.UICorner
G2L["79a"] = Instance.new("UICorner", G2L["797"]);
G2L["79a"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.ImageLabel
G2L["79b"] = Instance.new("ImageLabel", G2L["797"]);
G2L["79b"]["BorderSizePixel"] = 0;
G2L["79b"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["79b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["79b"]["ImageColor3"] = Color3.fromRGB(47, 47, 47);
G2L["79b"]["Image"] = [[http://www.roblox.com/asset/?id=118693265217416]];
G2L["79b"]["Size"] = UDim2.new(0.23825, 0, 0.85975, 0);
G2L["79b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["79b"]["BackgroundTransparency"] = 1;
G2L["79b"]["Position"] = UDim2.new(0.01731, 0, 0.05631, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.ImageLabel.UIGradient
G2L["79c"] = Instance.new("UIGradient", G2L["79b"]);
G2L["79c"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.995, 0.6875),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.TextLabel
G2L["79d"] = Instance.new("TextLabel", G2L["797"]);
G2L["79d"]["TextWrapped"] = true;
G2L["79d"]["BorderSizePixel"] = 0;
G2L["79d"]["TextSize"] = 14;
G2L["79d"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["79d"]["TextScaled"] = true;
G2L["79d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["79d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["79d"]["TextColor3"] = Color3.fromRGB(47, 47, 47);
G2L["79d"]["BackgroundTransparency"] = 1;
G2L["79d"]["Size"] = UDim2.new(0.67797, 0, 1, 0);
G2L["79d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["79d"]["Text"] = [[General]];
G2L["79d"]["Position"] = UDim2.new(0.31954, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.TextLabel.UITextSizeConstraint
G2L["79e"] = Instance.new("UITextSizeConstraint", G2L["79d"]);
G2L["79e"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.TextButton
G2L["79f"] = Instance.new("TextButton", G2L["797"]);
G2L["79f"]["BorderSizePixel"] = 0;
G2L["79f"]["TextTransparency"] = 1;
G2L["79f"]["TextSize"] = 14;
G2L["79f"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["79f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["79f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["79f"]["BackgroundTransparency"] = 1;
G2L["79f"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["79f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.TextButton.LocalScript
G2L["7a0"] = Instance.new("LocalScript", G2L["79f"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.UIGradient
G2L["7a1"] = Instance.new("UIGradient", G2L["797"]);
G2L["7a1"]["Rotation"] = 90;
G2L["7a1"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.UIStroke
G2L["7a2"] = Instance.new("UIStroke", G2L["797"]);
G2L["7a2"]["Transparency"] = 0.35;
G2L["7a2"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7a2"]["Thickness"] = 2;
G2L["7a2"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.UIStroke.UIGradient
G2L["7a3"] = Instance.new("UIGradient", G2L["7a2"]);
G2L["7a3"]["Rotation"] = 148.5;
G2L["7a3"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(231, 231, 231))};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.UIStroke.UIGradient.LocalScript
G2L["7a4"] = Instance.new("LocalScript", G2L["7a3"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.UIScale
G2L["7a5"] = Instance.new("UIScale", G2L["797"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.UIAspectRatioConstraint
G2L["7a6"] = Instance.new("UIAspectRatioConstraint", G2L["797"]);
G2L["7a6"]["AspectRatio"] = 3.55748;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual
G2L["7a7"] = Instance.new("Frame", G2L["796"]);
G2L["7a7"]["BorderSizePixel"] = 0;
G2L["7a7"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["7a7"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["7a7"]["Size"] = UDim2.new(0.89605, 0, 0.01558, 35);
G2L["7a7"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["7a7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7a7"]["Name"] = [[Visual]];
G2L["7a7"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.LocalScript
G2L["7a8"] = Instance.new("LocalScript", G2L["7a7"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.f
G2L["7a9"] = Instance.new("LocalScript", G2L["7a7"]);
G2L["7a9"]["Name"] = [[f]];


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.UICorner
G2L["7aa"] = Instance.new("UICorner", G2L["7a7"]);
G2L["7aa"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.ImageLabel
G2L["7ab"] = Instance.new("ImageLabel", G2L["7a7"]);
G2L["7ab"]["BorderSizePixel"] = 0;
G2L["7ab"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["7ab"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["7ab"]["ImageColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7ab"]["Image"] = [[http://www.roblox.com/asset/?id=98687217016836]];
G2L["7ab"]["Size"] = UDim2.new(0.23825, 0, 0.85975, 0);
G2L["7ab"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7ab"]["BackgroundTransparency"] = 1;
G2L["7ab"]["Position"] = UDim2.new(0.01731, 0, 0.05631, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.ImageLabel.UIGradient
G2L["7ac"] = Instance.new("UIGradient", G2L["7ab"]);
G2L["7ac"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.995, 0.6875),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.TextLabel
G2L["7ad"] = Instance.new("TextLabel", G2L["7a7"]);
G2L["7ad"]["TextWrapped"] = true;
G2L["7ad"]["BorderSizePixel"] = 0;
G2L["7ad"]["TextSize"] = 14;
G2L["7ad"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["7ad"]["TextScaled"] = true;
G2L["7ad"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7ad"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["7ad"]["TextColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7ad"]["BackgroundTransparency"] = 1;
G2L["7ad"]["Size"] = UDim2.new(0.67797, 0, 1, 0);
G2L["7ad"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7ad"]["Text"] = [[Visual]];
G2L["7ad"]["Position"] = UDim2.new(0.31954, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.TextLabel.UITextSizeConstraint
G2L["7ae"] = Instance.new("UITextSizeConstraint", G2L["7ad"]);
G2L["7ae"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.TextButton
G2L["7af"] = Instance.new("TextButton", G2L["7a7"]);
G2L["7af"]["BorderSizePixel"] = 0;
G2L["7af"]["TextTransparency"] = 1;
G2L["7af"]["TextSize"] = 14;
G2L["7af"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7af"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7af"]["BackgroundTransparency"] = 1;
G2L["7af"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["7af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.UIGradient
G2L["7b0"] = Instance.new("UIGradient", G2L["7a7"]);
G2L["7b0"]["Rotation"] = 90;
G2L["7b0"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.UIStroke
G2L["7b1"] = Instance.new("UIStroke", G2L["7a7"]);
G2L["7b1"]["Enabled"] = false;
G2L["7b1"]["Transparency"] = 0.35;
G2L["7b1"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7b1"]["Thickness"] = 2;
G2L["7b1"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.UIStroke.UIGradient
G2L["7b2"] = Instance.new("UIGradient", G2L["7b1"]);
G2L["7b2"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(231, 231, 231))};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.UIStroke.UIGradient.LocalScript
G2L["7b3"] = Instance.new("LocalScript", G2L["7b2"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.UIScale
G2L["7b4"] = Instance.new("UIScale", G2L["7a7"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.UIAspectRatioConstraint
G2L["7b5"] = Instance.new("UIAspectRatioConstraint", G2L["7a7"]);
G2L["7b5"]["AspectRatio"] = 3.55748;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement
G2L["7b6"] = Instance.new("Frame", G2L["796"]);
G2L["7b6"]["BorderSizePixel"] = 0;
G2L["7b6"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["7b6"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["7b6"]["Size"] = UDim2.new(0.89605, 0, 0.01558, 35);
G2L["7b6"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["7b6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7b6"]["Name"] = [[Movement]];
G2L["7b6"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.LocalScript
G2L["7b7"] = Instance.new("LocalScript", G2L["7b6"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.f
G2L["7b8"] = Instance.new("LocalScript", G2L["7b6"]);
G2L["7b8"]["Name"] = [[f]];


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.UICorner
G2L["7b9"] = Instance.new("UICorner", G2L["7b6"]);
G2L["7b9"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.ImageLabel
G2L["7ba"] = Instance.new("ImageLabel", G2L["7b6"]);
G2L["7ba"]["BorderSizePixel"] = 0;
G2L["7ba"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["7ba"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["7ba"]["ImageColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7ba"]["Image"] = [[http://www.roblox.com/asset/?id=95974954070423]];
G2L["7ba"]["Size"] = UDim2.new(0.23825, 0, 0.85975, 0);
G2L["7ba"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7ba"]["BackgroundTransparency"] = 1;
G2L["7ba"]["Position"] = UDim2.new(0.01731, 0, 0.05631, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.ImageLabel.UIGradient
G2L["7bb"] = Instance.new("UIGradient", G2L["7ba"]);
G2L["7bb"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.995, 0.6875),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.TextLabel
G2L["7bc"] = Instance.new("TextLabel", G2L["7b6"]);
G2L["7bc"]["TextWrapped"] = true;
G2L["7bc"]["BorderSizePixel"] = 0;
G2L["7bc"]["TextSize"] = 14;
G2L["7bc"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["7bc"]["TextScaled"] = true;
G2L["7bc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7bc"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["7bc"]["TextColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7bc"]["BackgroundTransparency"] = 1;
G2L["7bc"]["Size"] = UDim2.new(0.67797, 0, 1, 0);
G2L["7bc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7bc"]["Text"] = [[Player]];
G2L["7bc"]["Position"] = UDim2.new(0.31954, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.TextLabel.UITextSizeConstraint
G2L["7bd"] = Instance.new("UITextSizeConstraint", G2L["7bc"]);
G2L["7bd"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.TextButton
G2L["7be"] = Instance.new("TextButton", G2L["7b6"]);
G2L["7be"]["BorderSizePixel"] = 0;
G2L["7be"]["TextTransparency"] = 1;
G2L["7be"]["TextSize"] = 14;
G2L["7be"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7be"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7be"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7be"]["BackgroundTransparency"] = 1;
G2L["7be"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["7be"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.UIGradient
G2L["7bf"] = Instance.new("UIGradient", G2L["7b6"]);
G2L["7bf"]["Rotation"] = 90;
G2L["7bf"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.UIStroke
G2L["7c0"] = Instance.new("UIStroke", G2L["7b6"]);
G2L["7c0"]["Enabled"] = false;
G2L["7c0"]["Transparency"] = 0.35;
G2L["7c0"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7c0"]["Thickness"] = 2;
G2L["7c0"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.UIStroke.UIGradient
G2L["7c1"] = Instance.new("UIGradient", G2L["7c0"]);
G2L["7c1"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(231, 231, 231))};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.UIStroke.UIGradient.LocalScript
G2L["7c2"] = Instance.new("LocalScript", G2L["7c1"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.UIScale
G2L["7c3"] = Instance.new("UIScale", G2L["7b6"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.UIAspectRatioConstraint
G2L["7c4"] = Instance.new("UIAspectRatioConstraint", G2L["7b6"]);
G2L["7c4"]["AspectRatio"] = 3.55748;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.UIListLayout
G2L["7c5"] = Instance.new("UIListLayout", G2L["796"]);
G2L["7c5"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["7c5"]["Padding"] = UDim.new(0, 6);
G2L["7c5"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting
G2L["7c6"] = Instance.new("Frame", G2L["796"]);
G2L["7c6"]["BorderSizePixel"] = 0;
G2L["7c6"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["7c6"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["7c6"]["Size"] = UDim2.new(0.89605, 0, 0.01558, 35);
G2L["7c6"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["7c6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7c6"]["Name"] = [[Lighting]];
G2L["7c6"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.LocalScript
G2L["7c7"] = Instance.new("LocalScript", G2L["7c6"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.f
G2L["7c8"] = Instance.new("LocalScript", G2L["7c6"]);
G2L["7c8"]["Name"] = [[f]];


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.UICorner
G2L["7c9"] = Instance.new("UICorner", G2L["7c6"]);
G2L["7c9"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.ImageLabel
G2L["7ca"] = Instance.new("ImageLabel", G2L["7c6"]);
G2L["7ca"]["BorderSizePixel"] = 0;
G2L["7ca"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["7ca"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["7ca"]["ImageColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7ca"]["Image"] = [[http://www.roblox.com/asset/?id=82395879815842]];
G2L["7ca"]["Size"] = UDim2.new(0.23825, 0, 0.85975, 0);
G2L["7ca"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7ca"]["BackgroundTransparency"] = 1;
G2L["7ca"]["Position"] = UDim2.new(0.01731, 0, 0.05631, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.ImageLabel.UIGradient
G2L["7cb"] = Instance.new("UIGradient", G2L["7ca"]);
G2L["7cb"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.995, 0.6875),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.TextLabel
G2L["7cc"] = Instance.new("TextLabel", G2L["7c6"]);
G2L["7cc"]["TextWrapped"] = true;
G2L["7cc"]["BorderSizePixel"] = 0;
G2L["7cc"]["TextSize"] = 14;
G2L["7cc"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["7cc"]["TextScaled"] = true;
G2L["7cc"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7cc"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["7cc"]["TextColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7cc"]["BackgroundTransparency"] = 1;
G2L["7cc"]["Size"] = UDim2.new(0.67797, 0, 1, 0);
G2L["7cc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7cc"]["Text"] = [[Misc]];
G2L["7cc"]["Position"] = UDim2.new(0.31954, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.TextLabel.UITextSizeConstraint
G2L["7cd"] = Instance.new("UITextSizeConstraint", G2L["7cc"]);
G2L["7cd"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.TextButton
G2L["7ce"] = Instance.new("TextButton", G2L["7c6"]);
G2L["7ce"]["BorderSizePixel"] = 0;
G2L["7ce"]["TextTransparency"] = 1;
G2L["7ce"]["TextSize"] = 14;
G2L["7ce"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7ce"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7ce"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7ce"]["BackgroundTransparency"] = 1;
G2L["7ce"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["7ce"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.UIGradient
G2L["7cf"] = Instance.new("UIGradient", G2L["7c6"]);
G2L["7cf"]["Rotation"] = 90;
G2L["7cf"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.UIStroke
G2L["7d0"] = Instance.new("UIStroke", G2L["7c6"]);
G2L["7d0"]["Enabled"] = false;
G2L["7d0"]["Transparency"] = 0.35;
G2L["7d0"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7d0"]["Thickness"] = 2;
G2L["7d0"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.UIStroke.UIGradient
G2L["7d1"] = Instance.new("UIGradient", G2L["7d0"]);
G2L["7d1"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(231, 231, 231))};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.UIStroke.UIGradient.LocalScript
G2L["7d2"] = Instance.new("LocalScript", G2L["7d1"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.UIScale
G2L["7d3"] = Instance.new("UIScale", G2L["7c6"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.UIAspectRatioConstraint
G2L["7d4"] = Instance.new("UIAspectRatioConstraint", G2L["7c6"]);
G2L["7d4"]["AspectRatio"] = 3.55748;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings
G2L["7d5"] = Instance.new("Frame", G2L["796"]);
G2L["7d5"]["BorderSizePixel"] = 0;
G2L["7d5"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["7d5"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["7d5"]["Size"] = UDim2.new(0.89605, 0, 0.01558, 35);
G2L["7d5"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["7d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7d5"]["Name"] = [[Settings]];
G2L["7d5"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.LocalScript
G2L["7d6"] = Instance.new("LocalScript", G2L["7d5"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.f
G2L["7d7"] = Instance.new("LocalScript", G2L["7d5"]);
G2L["7d7"]["Name"] = [[f]];


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.UICorner
G2L["7d8"] = Instance.new("UICorner", G2L["7d5"]);
G2L["7d8"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.ImageLabel
G2L["7d9"] = Instance.new("ImageLabel", G2L["7d5"]);
G2L["7d9"]["BorderSizePixel"] = 0;
G2L["7d9"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["7d9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["7d9"]["ImageColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7d9"]["Image"] = [[http://www.roblox.com/asset/?id=139801169400402]];
G2L["7d9"]["Size"] = UDim2.new(0.23825, 0, 0.85975, 0);
G2L["7d9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7d9"]["BackgroundTransparency"] = 1;
G2L["7d9"]["Position"] = UDim2.new(0.01731, 0, 0.05631, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.ImageLabel.UIGradient
G2L["7da"] = Instance.new("UIGradient", G2L["7d9"]);
G2L["7da"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.995, 0.6875),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.TextLabel
G2L["7db"] = Instance.new("TextLabel", G2L["7d5"]);
G2L["7db"]["TextWrapped"] = true;
G2L["7db"]["BorderSizePixel"] = 0;
G2L["7db"]["TextSize"] = 14;
G2L["7db"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["7db"]["TextScaled"] = true;
G2L["7db"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7db"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["7db"]["TextColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7db"]["BackgroundTransparency"] = 1;
G2L["7db"]["Size"] = UDim2.new(0.67797, 0, 1, 0);
G2L["7db"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7db"]["Text"] = [[Settings]];
G2L["7db"]["Position"] = UDim2.new(0.31954, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.TextLabel.UITextSizeConstraint
G2L["7dc"] = Instance.new("UITextSizeConstraint", G2L["7db"]);
G2L["7dc"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.TextButton
G2L["7dd"] = Instance.new("TextButton", G2L["7d5"]);
G2L["7dd"]["BorderSizePixel"] = 0;
G2L["7dd"]["TextTransparency"] = 1;
G2L["7dd"]["TextSize"] = 14;
G2L["7dd"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7dd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7dd"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7dd"]["BackgroundTransparency"] = 1;
G2L["7dd"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["7dd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.UIGradient
G2L["7de"] = Instance.new("UIGradient", G2L["7d5"]);
G2L["7de"]["Rotation"] = 90;
G2L["7de"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.UIStroke
G2L["7df"] = Instance.new("UIStroke", G2L["7d5"]);
G2L["7df"]["Enabled"] = false;
G2L["7df"]["Transparency"] = 0.35;
G2L["7df"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7df"]["Thickness"] = 2;
G2L["7df"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.UIStroke.UIGradient
G2L["7e0"] = Instance.new("UIGradient", G2L["7df"]);
G2L["7e0"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(231, 231, 231))};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.UIStroke.UIGradient.LocalScript
G2L["7e1"] = Instance.new("LocalScript", G2L["7e0"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.UIScale
G2L["7e2"] = Instance.new("UIScale", G2L["7d5"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.UIAspectRatioConstraint
G2L["7e3"] = Instance.new("UIAspectRatioConstraint", G2L["7d5"]);
G2L["7e3"]["AspectRatio"] = 3.55748;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console
G2L["7e4"] = Instance.new("Frame", G2L["796"]);
G2L["7e4"]["BorderSizePixel"] = 0;
G2L["7e4"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["7e4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["7e4"]["Size"] = UDim2.new(0.89605, 0, 0.01558, 35);
G2L["7e4"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["7e4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7e4"]["Name"] = [[Console]];
G2L["7e4"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.LocalScript
G2L["7e5"] = Instance.new("LocalScript", G2L["7e4"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.f
G2L["7e6"] = Instance.new("LocalScript", G2L["7e4"]);
G2L["7e6"]["Name"] = [[f]];


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.UICorner
G2L["7e7"] = Instance.new("UICorner", G2L["7e4"]);
G2L["7e7"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.ImageLabel
G2L["7e8"] = Instance.new("ImageLabel", G2L["7e4"]);
G2L["7e8"]["BorderSizePixel"] = 0;
G2L["7e8"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["7e8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["7e8"]["ImageColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7e8"]["Image"] = [[rbxassetid://138072726696691]];
G2L["7e8"]["Size"] = UDim2.new(0.23825, 0, 0.85975, 0);
G2L["7e8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7e8"]["BackgroundTransparency"] = 1;
G2L["7e8"]["Position"] = UDim2.new(0.01731, 0, 0.05631, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.ImageLabel.UIGradient
G2L["7e9"] = Instance.new("UIGradient", G2L["7e8"]);
G2L["7e9"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.995, 0.6875),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.TextLabel
G2L["7ea"] = Instance.new("TextLabel", G2L["7e4"]);
G2L["7ea"]["TextWrapped"] = true;
G2L["7ea"]["BorderSizePixel"] = 0;
G2L["7ea"]["TextSize"] = 14;
G2L["7ea"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["7ea"]["TextScaled"] = true;
G2L["7ea"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7ea"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["7ea"]["TextColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7ea"]["BackgroundTransparency"] = 1;
G2L["7ea"]["Size"] = UDim2.new(0.67797, 0, 1, 0);
G2L["7ea"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7ea"]["Text"] = [[Lua]];
G2L["7ea"]["Position"] = UDim2.new(0.31954, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.TextLabel.UITextSizeConstraint
G2L["7eb"] = Instance.new("UITextSizeConstraint", G2L["7ea"]);
G2L["7eb"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.TextButton
G2L["7ec"] = Instance.new("TextButton", G2L["7e4"]);
G2L["7ec"]["BorderSizePixel"] = 0;
G2L["7ec"]["TextTransparency"] = 1;
G2L["7ec"]["TextSize"] = 14;
G2L["7ec"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7ec"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7ec"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7ec"]["BackgroundTransparency"] = 1;
G2L["7ec"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["7ec"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.UIGradient
G2L["7ed"] = Instance.new("UIGradient", G2L["7e4"]);
G2L["7ed"]["Rotation"] = 90;
G2L["7ed"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.UIStroke
G2L["7ee"] = Instance.new("UIStroke", G2L["7e4"]);
G2L["7ee"]["Enabled"] = false;
G2L["7ee"]["Transparency"] = 0.35;
G2L["7ee"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7ee"]["Thickness"] = 2;
G2L["7ee"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.UIStroke.UIGradient
G2L["7ef"] = Instance.new("UIGradient", G2L["7ee"]);
G2L["7ef"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(231, 231, 231))};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.UIStroke.UIGradient.LocalScript
G2L["7f0"] = Instance.new("LocalScript", G2L["7ef"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.UIScale
G2L["7f1"] = Instance.new("UIScale", G2L["7e4"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.UIAspectRatioConstraint
G2L["7f2"] = Instance.new("UIAspectRatioConstraint", G2L["7e4"]);
G2L["7f2"]["AspectRatio"] = 3.55748;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub
G2L["7f3"] = Instance.new("Frame", G2L["796"]);
G2L["7f3"]["Visible"] = false;
G2L["7f3"]["BorderSizePixel"] = 0;
G2L["7f3"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["7f3"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["7f3"]["Size"] = UDim2.new(0.89605, 0, 0.01558, 35);
G2L["7f3"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["7f3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7f3"]["Name"] = [[Hub]];
G2L["7f3"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.LocalScript
G2L["7f4"] = Instance.new("LocalScript", G2L["7f3"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.f
G2L["7f5"] = Instance.new("LocalScript", G2L["7f3"]);
G2L["7f5"]["Name"] = [[f]];


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.UICorner
G2L["7f6"] = Instance.new("UICorner", G2L["7f3"]);
G2L["7f6"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.ImageLabel
G2L["7f7"] = Instance.new("ImageLabel", G2L["7f3"]);
G2L["7f7"]["BorderSizePixel"] = 0;
G2L["7f7"]["ScaleType"] = Enum.ScaleType.Crop;
G2L["7f7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["7f7"]["ImageColor3"] = Color3.fromRGB(222, 222, 222);
G2L["7f7"]["Image"] = [[rbxassetid://78400530972309]];
G2L["7f7"]["Size"] = UDim2.new(0.23825, 0, 0.85975, 0);
G2L["7f7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7f7"]["BackgroundTransparency"] = 1;
G2L["7f7"]["Position"] = UDim2.new(0.01731, 0, 0.05631, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.ImageLabel.UIGradient
G2L["7f8"] = Instance.new("UIGradient", G2L["7f7"]);
G2L["7f8"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0),NumberSequenceKeypoint.new(0.995, 0.6875),NumberSequenceKeypoint.new(1.000, 0)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.TextButton
G2L["7f9"] = Instance.new("TextButton", G2L["7f3"]);
G2L["7f9"]["BorderSizePixel"] = 0;
G2L["7f9"]["TextTransparency"] = 1;
G2L["7f9"]["TextSize"] = 14;
G2L["7f9"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7f9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7f9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7f9"]["BackgroundTransparency"] = 1;
G2L["7f9"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["7f9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.UIGradient
G2L["7fa"] = Instance.new("UIGradient", G2L["7f3"]);
G2L["7fa"]["Rotation"] = 90;
G2L["7fa"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.UIStroke
G2L["7fb"] = Instance.new("UIStroke", G2L["7f3"]);
G2L["7fb"]["Enabled"] = false;
G2L["7fb"]["Transparency"] = 0.35;
G2L["7fb"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["7fb"]["Thickness"] = 2;
G2L["7fb"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.UIStroke.UIGradient
G2L["7fc"] = Instance.new("UIGradient", G2L["7fb"]);
G2L["7fc"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(231, 231, 231))};


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.UIStroke.UIGradient.LocalScript
G2L["7fd"] = Instance.new("LocalScript", G2L["7fc"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.UIScale
G2L["7fe"] = Instance.new("UIScale", G2L["7f3"]);



-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.UIAspectRatioConstraint
G2L["7ff"] = Instance.new("UIAspectRatioConstraint", G2L["7f3"]);
G2L["7ff"]["AspectRatio"] = 3.55748;


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.TextLabel
G2L["800"] = Instance.new("TextLabel", G2L["7f3"]);
G2L["800"]["TextWrapped"] = true;
G2L["800"]["BorderSizePixel"] = 0;
G2L["800"]["TextSize"] = 14;
G2L["800"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["800"]["TextScaled"] = true;
G2L["800"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["800"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["800"]["TextColor3"] = Color3.fromRGB(222, 222, 222);
G2L["800"]["BackgroundTransparency"] = 1;
G2L["800"]["Size"] = UDim2.new(0.67797, 0, 1, 0);
G2L["800"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["800"]["Text"] = [[Script Hub]];
G2L["800"]["Position"] = UDim2.new(0.31954, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.TextLabel.UITextSizeConstraint
G2L["801"] = Instance.new("UITextSizeConstraint", G2L["800"]);
G2L["801"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.UIScale
G2L["802"] = Instance.new("UIScale", G2L["11b"]);



-- StarterGui.xescriptsXD.Frame.ImageLabel
G2L["803"] = Instance.new("ImageLabel", G2L["11b"]);
G2L["803"]["ZIndex"] = -999999999;
G2L["803"]["BorderSizePixel"] = 0;
G2L["803"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["803"]["ImageTransparency"] = 0.82;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["803"]["Image"] = [[rbxassetid://235781675]];
G2L["803"]["Size"] = UDim2.new(1.34696, 0, 1.59905, 0);
G2L["803"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["803"]["BackgroundTransparency"] = 1;
G2L["803"]["LayoutOrder"] = -999999999;
G2L["803"]["Position"] = UDim2.new(-0.1747, 0, -0.31981, 0);


-- StarterGui.xescriptsXD.Frame.Executor
G2L["804"] = Instance.new("Frame", G2L["11b"]);
G2L["804"]["Visible"] = false;
G2L["804"]["BorderSizePixel"] = 0;
G2L["804"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["804"]["Size"] = UDim2.new(0.68078, 0, 0.81384, 0);
G2L["804"]["Position"] = UDim2.new(0.293, 0, 0.146, 0);
G2L["804"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["804"]["Name"] = [[Executor]];
G2L["804"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Executor.LocalScript
G2L["805"] = Instance.new("LocalScript", G2L["804"]);



-- StarterGui.xescriptsXD.Frame.Executor.Handler
G2L["806"] = Instance.new("LocalScript", G2L["804"]);
G2L["806"]["Name"] = [[Handler]];


-- StarterGui.xescriptsXD.Frame.Executor.textbox
G2L["807"] = Instance.new("TextBox", G2L["804"]);
G2L["807"]["CursorPosition"] = -1;
G2L["807"]["Name"] = [[textbox]];
G2L["807"]["TextXAlignment"] = Enum.TextXAlignment.Left;
G2L["807"]["ZIndex"] = 0;
G2L["807"]["BorderSizePixel"] = 0;
G2L["807"]["TextWrapped"] = true;
G2L["807"]["TextTruncate"] = Enum.TextTruncate.SplitWord;
G2L["807"]["TextSize"] = 14;
G2L["807"]["TextColor3"] = Color3.fromRGB(248, 248, 248);
G2L["807"]["TextYAlignment"] = Enum.TextYAlignment.Top;
G2L["807"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["807"]["RichText"] = true;
G2L["807"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Medium, Enum.FontStyle.Normal);
G2L["807"]["ClearTextOnFocus"] = false;
G2L["807"]["Size"] = UDim2.new(1.00747, 0, 0.80585, 0);
G2L["807"]["Position"] = UDim2.new(0, 0, 0, 0);
G2L["807"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["807"]["Text"] = [[print("XEScripts")]];
G2L["807"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.Frame.Executor.textbox.UIStroke
G2L["808"] = Instance.new("UIStroke", G2L["807"]);
G2L["808"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["808"]["Color"] = Color3.fromRGB(255, 255, 255);


-- StarterGui.xescriptsXD.Frame.Executor.Execute
G2L["809"] = Instance.new("Frame", G2L["804"]);
G2L["809"]["BorderSizePixel"] = 0;
G2L["809"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["809"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["809"]["Size"] = UDim2.new(0.35482, 0, 0.11822, 0);
G2L["809"]["Position"] = UDim2.new(0.17571, 0, 0.86364, 0);
G2L["809"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["809"]["Name"] = [[Execute]];
G2L["809"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Frame.Executor.Execute.UICorner
G2L["80a"] = Instance.new("UICorner", G2L["809"]);
G2L["80a"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Executor.Execute.TextLabel
G2L["80b"] = Instance.new("TextLabel", G2L["809"]);
G2L["80b"]["TextWrapped"] = true;
G2L["80b"]["BorderSizePixel"] = 0;
G2L["80b"]["TextSize"] = 14;
G2L["80b"]["TextScaled"] = true;
G2L["80b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["80b"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["80b"]["TextColor3"] = Color3.fromRGB(47, 47, 47);
G2L["80b"]["BackgroundTransparency"] = 1;
G2L["80b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["80b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["80b"]["Text"] = [[Execute]];


-- StarterGui.xescriptsXD.Frame.Executor.Execute.TextLabel.UITextSizeConstraint
G2L["80c"] = Instance.new("UITextSizeConstraint", G2L["80b"]);
G2L["80c"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Executor.Execute.TextButton
G2L["80d"] = Instance.new("TextButton", G2L["809"]);
G2L["80d"]["BorderSizePixel"] = 0;
G2L["80d"]["TextTransparency"] = 1;
G2L["80d"]["TextSize"] = 14;
G2L["80d"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["80d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["80d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["80d"]["BackgroundTransparency"] = 1;
G2L["80d"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["80d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Executor.Execute.UIGradient
G2L["80e"] = Instance.new("UIGradient", G2L["809"]);
G2L["80e"]["Rotation"] = 90;
G2L["80e"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Executor.Execute.UIScale
G2L["80f"] = Instance.new("UIScale", G2L["809"]);



-- StarterGui.xescriptsXD.Frame.Executor.Copy
G2L["810"] = Instance.new("Frame", G2L["804"]);
G2L["810"]["BorderSizePixel"] = 0;
G2L["810"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["810"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["810"]["Size"] = UDim2.new(0.30442, 0, 0.11822, 0);
G2L["810"]["Position"] = UDim2.new(0.52735, 0, 0.86071, 0);
G2L["810"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["810"]["Name"] = [[Copy]];
G2L["810"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Frame.Executor.Copy.UICorner
G2L["811"] = Instance.new("UICorner", G2L["810"]);
G2L["811"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Executor.Copy.TextLabel
G2L["812"] = Instance.new("TextLabel", G2L["810"]);
G2L["812"]["TextWrapped"] = true;
G2L["812"]["BorderSizePixel"] = 0;
G2L["812"]["TextSize"] = 14;
G2L["812"]["TextScaled"] = true;
G2L["812"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["812"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["812"]["TextColor3"] = Color3.fromRGB(47, 47, 47);
G2L["812"]["BackgroundTransparency"] = 1;
G2L["812"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["812"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["812"]["Text"] = [[Copy]];
G2L["812"]["Position"] = UDim2.new(-0.00842, 0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Executor.Copy.TextLabel.UITextSizeConstraint
G2L["813"] = Instance.new("UITextSizeConstraint", G2L["812"]);
G2L["813"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Executor.Copy.TextButton
G2L["814"] = Instance.new("TextButton", G2L["810"]);
G2L["814"]["BorderSizePixel"] = 0;
G2L["814"]["TextTransparency"] = 1;
G2L["814"]["TextSize"] = 14;
G2L["814"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["814"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["814"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["814"]["BackgroundTransparency"] = 1;
G2L["814"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["814"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Executor.Copy.UIGradient
G2L["815"] = Instance.new("UIGradient", G2L["810"]);
G2L["815"]["Rotation"] = 90;
G2L["815"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Executor.Copy.UIScale
G2L["816"] = Instance.new("UIScale", G2L["810"]);



-- StarterGui.xescriptsXD.Frame.Executor.Clear
G2L["817"] = Instance.new("Frame", G2L["804"]);
G2L["817"]["BorderSizePixel"] = 0;
G2L["817"]["BackgroundColor3"] = Color3.fromRGB(231, 231, 231);
G2L["817"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["817"]["Size"] = UDim2.new(0.30442, 0, 0.11822, 0);
G2L["817"]["Position"] = UDim2.new(0.85292, 0, 0.86364, 0);
G2L["817"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["817"]["Name"] = [[Clear]];
G2L["817"]["BackgroundTransparency"] = 0.1;


-- StarterGui.xescriptsXD.Frame.Executor.Clear.UICorner
G2L["818"] = Instance.new("UICorner", G2L["817"]);
G2L["818"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.Frame.Executor.Clear.TextLabel
G2L["819"] = Instance.new("TextLabel", G2L["817"]);
G2L["819"]["TextWrapped"] = true;
G2L["819"]["BorderSizePixel"] = 0;
G2L["819"]["TextSize"] = 14;
G2L["819"]["TextScaled"] = true;
G2L["819"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["819"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["819"]["TextColor3"] = Color3.fromRGB(47, 47, 47);
G2L["819"]["BackgroundTransparency"] = 1;
G2L["819"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["819"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["819"]["Text"] = [[Clear]];


-- StarterGui.xescriptsXD.Frame.Executor.Clear.TextLabel.UITextSizeConstraint
G2L["81a"] = Instance.new("UITextSizeConstraint", G2L["819"]);
G2L["81a"]["MaxTextSize"] = 16;


-- StarterGui.xescriptsXD.Frame.Executor.Clear.TextButton
G2L["81b"] = Instance.new("TextButton", G2L["817"]);
G2L["81b"]["BorderSizePixel"] = 0;
G2L["81b"]["TextTransparency"] = 1;
G2L["81b"]["TextSize"] = 14;
G2L["81b"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["81b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["81b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["81b"]["BackgroundTransparency"] = 1;
G2L["81b"]["Size"] = UDim2.new(0.99153, 0, 1, 0);
G2L["81b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.xescriptsXD.Frame.Executor.Clear.UIGradient
G2L["81c"] = Instance.new("UIGradient", G2L["817"]);
G2L["81c"]["Rotation"] = 90;
G2L["81c"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.03125),NumberSequenceKeypoint.new(1.000, 0.15)};


-- StarterGui.xescriptsXD.Frame.Executor.Clear.UIScale
G2L["81d"] = Instance.new("UIScale", G2L["817"]);



-- StarterGui.xescriptsXD.Frame.TIP
G2L["81e"] = Instance.new("TextLabel", G2L["11b"]);
G2L["81e"]["TextWrapped"] = true;
G2L["81e"]["BorderSizePixel"] = 0;
G2L["81e"]["TextSize"] = 14;
G2L["81e"]["TextScaled"] = true;
G2L["81e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["81e"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.SemiBold, Enum.FontStyle.Normal);
G2L["81e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["81e"]["BackgroundTransparency"] = 1;
G2L["81e"]["Size"] = UDim2.new(0.99871, 0, 0.05012, 0);
G2L["81e"]["Visible"] = false;
G2L["81e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["81e"]["Text"] = [[TIP:]];
G2L["81e"]["Name"] = [[TIP]];
G2L["81e"]["Position"] = UDim2.new(0, 0, -0.06444, 0);


-- StarterGui.xescriptsXD.Frame.tip handler
G2L["81f"] = Instance.new("LocalScript", G2L["11b"]);
G2L["81f"]["Name"] = [[tip handler]];


-- StarterGui.xescriptsXD.KeyLogger
G2L["820"] = Instance.new("Frame", G2L["1"]);
G2L["820"]["Visible"] = false;
G2L["820"]["BorderSizePixel"] = 0;
G2L["820"]["BackgroundColor3"] = Color3.fromRGB(11, 11, 11);
G2L["820"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["820"]["Size"] = UDim2.new(0.442, 0, 0.596, 0);
G2L["820"]["Position"] = UDim2.new(0.499, 0, 0.499, 0);
G2L["820"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["820"]["Name"] = [[KeyLogger]];
G2L["820"]["BackgroundTransparency"] = 0.03;


-- StarterGui.xescriptsXD.KeyLogger.dragscript
G2L["821"] = Instance.new("LocalScript", G2L["820"]);
G2L["821"]["Name"] = [[dragscript]];


-- StarterGui.xescriptsXD.KeyLogger.UICorner
G2L["822"] = Instance.new("UICorner", G2L["820"]);
G2L["822"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.xescriptsXD.KeyLogger.Close
G2L["823"] = Instance.new("TextButton", G2L["820"]);
G2L["823"]["TextWrapped"] = true;
G2L["823"]["BorderSizePixel"] = 0;
G2L["823"]["TextSize"] = 14;
G2L["823"]["TextScaled"] = true;
G2L["823"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["823"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["823"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["823"]["BackgroundTransparency"] = 1;
G2L["823"]["Size"] = UDim2.new(0.05849, 0, 0.081, 0);
G2L["823"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["823"]["Text"] = [[X]];
G2L["823"]["Name"] = [[Close]];
G2L["823"]["Position"] = UDim2.new(0.91887, 0, 0.01869, 0);


-- StarterGui.xescriptsXD.KeyLogger.Close.UICorner
G2L["824"] = Instance.new("UICorner", G2L["823"]);
G2L["824"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.xescriptsXD.KeyLogger.Close.UI-Shadow
G2L["825"] = Instance.new("Frame", G2L["823"]);
G2L["825"]["ZIndex"] = -999999999;
G2L["825"]["Size"] = UDim2.new(1.29032, 0, 1.46154, 0);
G2L["825"]["Position"] = UDim2.new(-0.114, 0, -0.231, 0);
G2L["825"]["Name"] = [[UI-Shadow]];
G2L["825"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.KeyLogger.Close.UI-Shadow.umbraShadow
G2L["826"] = Instance.new("ImageLabel", G2L["825"]);
G2L["826"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["826"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["826"]["ImageTransparency"] = 0.86;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["826"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["826"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["826"]["Image"] = [[rbxassetid://1316045217]];
G2L["826"]["Size"] = UDim2.new(1.025, 0, 1.02632, 0);
G2L["826"]["BackgroundTransparency"] = 1;
G2L["826"]["Name"] = [[umbraShadow]];
G2L["826"]["Position"] = UDim2.new(0.5, 0, 0.52632, 0);


-- StarterGui.xescriptsXD.KeyLogger.Close.UI-Shadow.umbraShadow.UIAspectRatioConstraint
G2L["827"] = Instance.new("UIAspectRatioConstraint", G2L["826"]);
G2L["827"]["AspectRatio"] = 1.05128;


-- StarterGui.xescriptsXD.KeyLogger.Close.UI-Shadow.penumbraShadow
G2L["828"] = Instance.new("ImageLabel", G2L["825"]);
G2L["828"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["828"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["828"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["828"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["828"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["828"]["Image"] = [[rbxassetid://1316045217]];
G2L["828"]["Size"] = UDim2.new(1.025, 0, 1.02632, 0);
G2L["828"]["BackgroundTransparency"] = 1;
G2L["828"]["Name"] = [[penumbraShadow]];
G2L["828"]["Position"] = UDim2.new(0.5, 0, 0.52632, 0);


-- StarterGui.xescriptsXD.KeyLogger.Close.UI-Shadow.penumbraShadow.UIAspectRatioConstraint
G2L["829"] = Instance.new("UIAspectRatioConstraint", G2L["828"]);
G2L["829"]["AspectRatio"] = 1.05128;


-- StarterGui.xescriptsXD.KeyLogger.Close.UI-Shadow.ambientShadow
G2L["82a"] = Instance.new("ImageLabel", G2L["825"]);
G2L["82a"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["82a"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["82a"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["82a"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["82a"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["82a"]["Image"] = [[rbxassetid://1316045217]];
G2L["82a"]["Size"] = UDim2.new(1.025, 0, 1.02632, 0);
G2L["82a"]["BackgroundTransparency"] = 1;
G2L["82a"]["Name"] = [[ambientShadow]];
G2L["82a"]["Position"] = UDim2.new(0.5, 0, 0.52632, 0);


-- StarterGui.xescriptsXD.KeyLogger.Close.UI-Shadow.ambientShadow.UIAspectRatioConstraint
G2L["82b"] = Instance.new("UIAspectRatioConstraint", G2L["82a"]);
G2L["82b"]["AspectRatio"] = 1.05128;


-- StarterGui.xescriptsXD.KeyLogger.Close.UI-Shadow.UIAspectRatioConstraint
G2L["82c"] = Instance.new("UIAspectRatioConstraint", G2L["825"]);
G2L["82c"]["AspectRatio"] = 1.05263;


-- StarterGui.xescriptsXD.KeyLogger.Close.UI-Shadow.UIAspectRatioConstraint
G2L["82d"] = Instance.new("UIAspectRatioConstraint", G2L["825"]);
G2L["82d"]["AspectRatio"] = 1.05263;


-- StarterGui.xescriptsXD.KeyLogger.Close.UIAspectRatioConstraint
G2L["82e"] = Instance.new("UIAspectRatioConstraint", G2L["823"]);
G2L["82e"]["AspectRatio"] = 1.19231;


-- StarterGui.xescriptsXD.KeyLogger.Close.UITextSizeConstraint
G2L["82f"] = Instance.new("UITextSizeConstraint", G2L["823"]);
G2L["82f"]["MaxTextSize"] = 15;


-- StarterGui.xescriptsXD.KeyLogger.Close2
G2L["830"] = Instance.new("TextButton", G2L["820"]);
G2L["830"]["TextWrapped"] = true;
G2L["830"]["BorderSizePixel"] = 0;
G2L["830"]["TextSize"] = 14;
G2L["830"]["TextScaled"] = true;
G2L["830"]["TextColor3"] = Color3.fromRGB(234, 234, 234);
G2L["830"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["830"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["830"]["BackgroundTransparency"] = 1;
G2L["830"]["Size"] = UDim2.new(0.05849, 0, 0.081, 0);
G2L["830"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["830"]["Text"] = [[–]];
G2L["830"]["Name"] = [[Close2]];
G2L["830"]["Position"] = UDim2.new(0.8434, 0, 0.01869, 0);


-- StarterGui.xescriptsXD.KeyLogger.Close2.UICorner
G2L["831"] = Instance.new("UICorner", G2L["830"]);
G2L["831"]["CornerRadius"] = UDim.new(0, 4);


-- StarterGui.xescriptsXD.KeyLogger.Close2.UIAspectRatioConstraint
G2L["832"] = Instance.new("UIAspectRatioConstraint", G2L["830"]);
G2L["832"]["AspectRatio"] = 1.19231;


-- StarterGui.xescriptsXD.KeyLogger.Close2.UITextSizeConstraint
G2L["833"] = Instance.new("UITextSizeConstraint", G2L["830"]);
G2L["833"]["MaxTextSize"] = 15;


-- StarterGui.xescriptsXD.KeyLogger.Close2.UI-Shadow
G2L["834"] = Instance.new("Frame", G2L["830"]);
G2L["834"]["ZIndex"] = -999999999;
G2L["834"]["Size"] = UDim2.new(1.29032, 0, 1.46154, 0);
G2L["834"]["Position"] = UDim2.new(-0.16129, 0, -0.231, 0);
G2L["834"]["Name"] = [[UI-Shadow]];
G2L["834"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.KeyLogger.Close2.UI-Shadow.umbraShadow
G2L["835"] = Instance.new("ImageLabel", G2L["834"]);
G2L["835"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["835"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["835"]["ImageTransparency"] = 0.86;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["835"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["835"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["835"]["Image"] = [[rbxassetid://1316045217]];
G2L["835"]["Size"] = UDim2.new(1.025, 0, 1.02632, 0);
G2L["835"]["BackgroundTransparency"] = 1;
G2L["835"]["Name"] = [[umbraShadow]];
G2L["835"]["Position"] = UDim2.new(0.5, 0, 0.52632, 0);


-- StarterGui.xescriptsXD.KeyLogger.Close2.UI-Shadow.umbraShadow.UIAspectRatioConstraint
G2L["836"] = Instance.new("UIAspectRatioConstraint", G2L["835"]);
G2L["836"]["AspectRatio"] = 1.05128;


-- StarterGui.xescriptsXD.KeyLogger.Close2.UI-Shadow.penumbraShadow
G2L["837"] = Instance.new("ImageLabel", G2L["834"]);
G2L["837"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["837"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["837"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["837"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["837"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["837"]["Image"] = [[rbxassetid://1316045217]];
G2L["837"]["Size"] = UDim2.new(1.025, 0, 1.02632, 0);
G2L["837"]["BackgroundTransparency"] = 1;
G2L["837"]["Name"] = [[penumbraShadow]];
G2L["837"]["Position"] = UDim2.new(0.5, 0, 0.52632, 0);


-- StarterGui.xescriptsXD.KeyLogger.Close2.UI-Shadow.penumbraShadow.UIAspectRatioConstraint
G2L["838"] = Instance.new("UIAspectRatioConstraint", G2L["837"]);
G2L["838"]["AspectRatio"] = 1.05128;


-- StarterGui.xescriptsXD.KeyLogger.Close2.UI-Shadow.ambientShadow
G2L["839"] = Instance.new("ImageLabel", G2L["834"]);
G2L["839"]["SliceCenter"] = Rect.new(10, 10, 118, 118);
G2L["839"]["ScaleType"] = Enum.ScaleType.Slice;
G2L["839"]["ImageTransparency"] = 0.88;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["839"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["839"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["839"]["Image"] = [[rbxassetid://1316045217]];
G2L["839"]["Size"] = UDim2.new(1.025, 0, 1.02632, 0);
G2L["839"]["BackgroundTransparency"] = 1;
G2L["839"]["Name"] = [[ambientShadow]];
G2L["839"]["Position"] = UDim2.new(0.5, 0, 0.52632, 0);


-- StarterGui.xescriptsXD.KeyLogger.Close2.UI-Shadow.ambientShadow.UIAspectRatioConstraint
G2L["83a"] = Instance.new("UIAspectRatioConstraint", G2L["839"]);
G2L["83a"]["AspectRatio"] = 1.05128;


-- StarterGui.xescriptsXD.KeyLogger.Close2.UI-Shadow.UIAspectRatioConstraint
G2L["83b"] = Instance.new("UIAspectRatioConstraint", G2L["834"]);
G2L["83b"]["AspectRatio"] = 1.05263;


-- StarterGui.xescriptsXD.KeyLogger.Close2.UI-Shadow.UIAspectRatioConstraint
G2L["83c"] = Instance.new("UIAspectRatioConstraint", G2L["834"]);
G2L["83c"]["AspectRatio"] = 1.05263;


-- StarterGui.xescriptsXD.KeyLogger.KeyBox
G2L["83d"] = Instance.new("TextBox", G2L["820"]);
G2L["83d"]["Name"] = [[KeyBox]];
G2L["83d"]["PlaceholderColor3"] = Color3.fromRGB(148, 148, 148);
G2L["83d"]["BorderSizePixel"] = 0;
G2L["83d"]["TextWrapped"] = true;
G2L["83d"]["TextSize"] = 14;
G2L["83d"]["TextColor3"] = Color3.fromRGB(205, 205, 205);
G2L["83d"]["TextScaled"] = true;
G2L["83d"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["83d"]["RichText"] = true;
G2L["83d"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["83d"]["ClearTextOnFocus"] = false;
G2L["83d"]["PlaceholderText"] = [[Key...]];
G2L["83d"]["Size"] = UDim2.new(0.8, 0, 0.21807, 0);
G2L["83d"]["Position"] = UDim2.new(0.1, 0, 0.282, 0);
G2L["83d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["83d"]["Text"] = [[]];
G2L["83d"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.KeyLogger.KeyBox.UITextSizeConstraint
G2L["83e"] = Instance.new("UITextSizeConstraint", G2L["83d"]);
G2L["83e"]["MaxTextSize"] = 25;


-- StarterGui.xescriptsXD.KeyLogger.KeyBox.UICorner
G2L["83f"] = Instance.new("UICorner", G2L["83d"]);
G2L["83f"]["CornerRadius"] = UDim.new(0, 6);


-- StarterGui.xescriptsXD.KeyLogger.KeyBox.UIAspectRatioConstraint
G2L["840"] = Instance.new("UIAspectRatioConstraint", G2L["83d"]);
G2L["840"]["AspectRatio"] = 6.05714;


-- StarterGui.xescriptsXD.KeyLogger.TextLabel
G2L["841"] = Instance.new("TextLabel", G2L["820"]);
G2L["841"]["TextWrapped"] = true;
G2L["841"]["BorderSizePixel"] = 0;
G2L["841"]["TextSize"] = 14;
G2L["841"]["TextScaled"] = true;
G2L["841"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["841"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["841"]["TextColor3"] = Color3.fromRGB(179, 179, 179);
G2L["841"]["BackgroundTransparency"] = 1;
G2L["841"]["Size"] = UDim2.new(0.56604, 0, 0.10903, 0);
G2L["841"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["841"]["Text"] = [[Key Checker]];
G2L["841"]["Position"] = UDim2.new(0.21132, 0, 0.12303, 0);


-- StarterGui.xescriptsXD.KeyLogger.TextLabel.UIAspectRatioConstraint
G2L["842"] = Instance.new("UIAspectRatioConstraint", G2L["841"]);
G2L["842"]["AspectRatio"] = 8.57143;


-- StarterGui.xescriptsXD.KeyLogger.TextLabel.UITextSizeConstraint
G2L["843"] = Instance.new("UITextSizeConstraint", G2L["841"]);



-- StarterGui.xescriptsXD.KeyLogger.Activated
G2L["844"] = Instance.new("BoolValue", G2L["820"]);
G2L["844"]["Name"] = [[Activated]];


-- StarterGui.xescriptsXD.KeyLogger.Activate
G2L["845"] = Instance.new("TextButton", G2L["820"]);
G2L["845"]["TextWrapped"] = true;
G2L["845"]["BorderSizePixel"] = 0;
G2L["845"]["TextSize"] = 14;
G2L["845"]["TextScaled"] = true;
G2L["845"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["845"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["845"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["845"]["BackgroundTransparency"] = 1;
G2L["845"]["Size"] = UDim2.new(0.51111, 0, 0.15576, 0);
G2L["845"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["845"]["Text"] = [[Activate]];
G2L["845"]["Name"] = [[Activate]];
G2L["845"]["Position"] = UDim2.new(0.0272, 0, 0.78114, 0);


-- StarterGui.xescriptsXD.KeyLogger.Activate.LocalScript
G2L["846"] = Instance.new("LocalScript", G2L["845"]);



-- StarterGui.xescriptsXD.KeyLogger.Activate.UITextSizeConstraint
G2L["847"] = Instance.new("UITextSizeConstraint", G2L["845"]);
G2L["847"]["MaxTextSize"] = 21;


-- StarterGui.xescriptsXD.KeyLogger.Activate.UICorner
G2L["848"] = Instance.new("UICorner", G2L["845"]);
G2L["848"]["CornerRadius"] = UDim.new(0, 5);


-- StarterGui.xescriptsXD.KeyLogger.TextLabel
G2L["849"] = Instance.new("TextLabel", G2L["820"]);
G2L["849"]["TextWrapped"] = true;
G2L["849"]["BorderSizePixel"] = 0;
G2L["849"]["TextSize"] = 14;
G2L["849"]["TextScaled"] = true;
G2L["849"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["849"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["849"]["TextColor3"] = Color3.fromRGB(179, 179, 179);
G2L["849"]["BackgroundTransparency"] = 1;
G2L["849"]["RichText"] = true;
G2L["849"]["Size"] = UDim2.new(0.60755, 0, 0.09657, 0);
G2L["849"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["849"]["Text"] = [[https://discord.gg/z4F6wEQkyQ]];
G2L["849"]["Position"] = UDim2.new(0.19584, 0, 0.5204, 0);


-- StarterGui.xescriptsXD.KeyLogger.TextLabel.UITextSizeConstraint
G2L["84a"] = Instance.new("UITextSizeConstraint", G2L["849"]);
G2L["84a"]["MaxTextSize"] = 19;


-- StarterGui.xescriptsXD.KeyLogger.Frame
G2L["84b"] = Instance.new("Frame", G2L["820"]);
G2L["84b"]["BorderSizePixel"] = 0;
G2L["84b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["84b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["84b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["84b"]["BackgroundTransparency"] = 1;


-- StarterGui.xescriptsXD.KeyLogger.Frame.UIGradient
G2L["84c"] = Instance.new("UIGradient", G2L["84b"]);
G2L["84c"]["Rotation"] = -90;
G2L["84c"]["Transparency"] = NumberSequence.new{NumberSequenceKeypoint.new(0.000, 0.61875),NumberSequenceKeypoint.new(0.167, 0.84375),NumberSequenceKeypoint.new(0.444, 0.95625),NumberSequenceKeypoint.new(0.999, 0.9875),NumberSequenceKeypoint.new(1.000, 0)};
G2L["84c"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(42, 42, 42)),ColorSequenceKeypoint.new(0.040, Color3.fromRGB(23, 23, 23)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(0, 0, 0))};


-- StarterGui.xescriptsXD.KeyLogger.UIAspectRatioConstraint
G2L["84d"] = Instance.new("UIAspectRatioConstraint", G2L["820"]);
G2L["84d"]["AspectRatio"] = 1.65109;


-- StarterGui.xescriptsXD.KeyLogger.UIStroke
G2L["84e"] = Instance.new("UIStroke", G2L["820"]);
G2L["84e"]["Transparency"] = 0.35;
G2L["84e"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["84e"]["Thickness"] = 1.5;
G2L["84e"]["Color"] = Color3.fromRGB(227, 227, 227);


-- StarterGui.xescriptsXD.KeyLogger.UIStroke.UIGradient
G2L["84f"] = Instance.new("UIGradient", G2L["84e"]);
G2L["84f"]["Color"] = ColorSequence.new{ColorSequenceKeypoint.new(0.000, Color3.fromRGB(72, 72, 72)),ColorSequenceKeypoint.new(1.000, Color3.fromRGB(255, 255, 255))};


-- StarterGui.xescriptsXD.KeyLogger.UIStroke.UIGradient.LocalScript
G2L["850"] = Instance.new("LocalScript", G2L["84f"]);



-- StarterGui.xescriptsXD.KeyLogger.TextLabel
G2L["851"] = Instance.new("TextLabel", G2L["820"]);
G2L["851"]["TextWrapped"] = true;
G2L["851"]["BorderSizePixel"] = 0;
G2L["851"]["TextSize"] = 14;
G2L["851"]["TextScaled"] = true;
G2L["851"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["851"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["851"]["TextColor3"] = Color3.fromRGB(179, 179, 179);
G2L["851"]["BackgroundTransparency"] = 1;
G2L["851"]["RichText"] = true;
G2L["851"]["Size"] = UDim2.new(0.60755, 0, 0.09657, 0);
G2L["851"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["851"]["Text"] = [[https://t.me/xescriptsoff]];
G2L["851"]["Position"] = UDim2.new(0.196, 0, 0.62, 0);


-- StarterGui.xescriptsXD.KeyLogger.TextLabel.UITextSizeConstraint
G2L["852"] = Instance.new("UITextSizeConstraint", G2L["851"]);
G2L["852"]["MaxTextSize"] = 19;


-- StarterGui.xescriptsXD.KeyLogger.ImageLabel
G2L["853"] = Instance.new("ImageLabel", G2L["820"]);
G2L["853"]["ZIndex"] = -999999999;
G2L["853"]["BorderSizePixel"] = 0;
G2L["853"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["853"]["ImageTransparency"] = 0.76;
-- [ERROR] cannot convert ImageContent, please report to "https://github.com/uniquadev/GuiToLuaConverter/issues"
G2L["853"]["Image"] = [[rbxassetid://235781675]];
G2L["853"]["Size"] = UDim2.new(1.34696, 0, 1.59905, 0);
G2L["853"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["853"]["BackgroundTransparency"] = 1;
G2L["853"]["LayoutOrder"] = -999999999;
G2L["853"]["Position"] = UDim2.new(-0.1747, 0, -0.31981, 0);


-- StarterGui.xescriptsXD.KeyLogger.Copy Link
G2L["854"] = Instance.new("TextButton", G2L["820"]);
G2L["854"]["TextWrapped"] = true;
G2L["854"]["BorderSizePixel"] = 0;
G2L["854"]["TextSize"] = 14;
G2L["854"]["TextScaled"] = true;
G2L["854"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["854"]["BackgroundColor3"] = Color3.fromRGB(14, 14, 14);
G2L["854"]["FontFace"] = Font.new([[rbxasset://fonts/families/GothamSSm.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["854"]["BackgroundTransparency"] = 1;
G2L["854"]["Size"] = UDim2.new(0.37035, 0, 0.15576, 0);
G2L["854"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["854"]["Text"] = [[Copy Link]];
G2L["854"]["Name"] = [[Copy Link]];
G2L["854"]["Position"] = UDim2.new(0.57862, 0, 0.78114, 0);


-- StarterGui.xescriptsXD.KeyLogger.Copy Link.LocalScript
G2L["855"] = Instance.new("LocalScript", G2L["854"]);



-- StarterGui.xescriptsXD.KeyLogger.Copy Link.UITextSizeConstraint
G2L["856"] = Instance.new("UITextSizeConstraint", G2L["854"]);
G2L["856"]["MaxTextSize"] = 21;


-- StarterGui.xescriptsXD.KeyLogger.Copy Link.UICorner
G2L["857"] = Instance.new("UICorner", G2L["854"]);
G2L["857"]["CornerRadius"] = UDim.new(0, 5);


-- Require G2L wrapper
local G2L_REQUIRE = require;
local G2L_MODULES = {};
local function require(Module, ModuleScript)
	local ModuleState = G2L_MODULES[Module];
	if ModuleState then
		if not ModuleState.Required then
			ModuleState.Required = true;
			ModuleState.Value = ModuleState.Closure();
		end
		return ModuleState.Value;
	end;
	return G2L_REQUIRE(Module);
end

G2L_MODULES[G2L["13"]] = {
	Closure = function()
		local script = G2L["13"];local module = {}
		module.enabledd = false
		return module
	end;
};
G2L_MODULES[G2L["14"]] = {
	Closure = function()
		local script = G2L["14"];local module = {}

		module.Settings = {
			ChamsColor = Color3.fromRGB(255, 255, 255),
			EspColor = Color3.fromRGB(255, 255, 255),
			EspBoxColor = Color3.fromRGB(255, 255, 255),
			Nametag2Color = Color3.fromRGB(255, 255, 255),
			NametagColor = Color3.fromRGB(255, 255, 255),
			TracerColor = Color3.fromRGB(255, 255, 255),

			--Тонкость
			EspBoxThickness = 2,
			TracerThickness = 0.15,

			--прозрачность
			EspBoxTransparency = 0.9,
			EspTransparency = 0.7,
			TracerTransparency = 0.5,
		}


		return module
	end;
};
G2L_MODULES[G2L["15"]] = {
	Closure = function()
		local script = G2L["15"];local HttpService = game:GetService("HttpService")
		local module = {}

		local FOLDER_NAME = "xescripts"
		local FILE_EXTENSION = ".json"

		-- Создаем папку, если нет
		--pcall(function()
		--if not isFile(FOLDER_NAME) then
		--	makeFolder(FOLDER_NAME)
		--end
		--end)

		-- Текущая конфигурация
		--local currentConfig = {
		--	Visual = {},
		--	Player = {},
		--	Misc = {},
		--	Settings = {}
		--}

		---- 🔹 Вспомогательная функция для валидации категорий
		local function ensureCategory(category)
			--	if not currentConfig[category] then
			--		currentConfig[category] = {}
			--	end
			--	return currentConfig[category]
		end

		-- Установка значения
		function module.Set(category, key, value)
			--if not category or not key then return end
			--ensureCategory(category)[key] = value
		end

		-- Получение значения
		function module.Get(category, key)
			--if not category or not key then return nil end
			--local cat = currentConfig[category]
			--return cat and cat[key] or nil
		end

		-- Булево значение (вкл/выкл)
		function module.IsEnabled(category, key)
			--return module.Get(category, key) == true
		end

		-- Установка булева значения
		function module.SetEnabled(category, key, state)
			--module.Set(category, key, state == true)
		end

		-- Получение всей категории
		function module.GetCategory(category)
			--return ensureCategory(category)
		end

		-- Получение всех конфигов
		function module.GetAll()
			--return currentConfig
		end

		-- Очистка (сброс)
		function module.Clear()
			--for cat in pairs(currentConfig) do
			--	currentConfig[cat] = {}
			--end
		end

		-- Сохранение в файл
		function module.SaveConfig(fileName)
			--if not fileName or fileName == "" then return false end
			--local success, json = pcall(function()
			--	return HttpService:JSONEncode(currentConfig)
			--end)
			--if not success then return false end
			--writeFile(FOLDER_NAME .. "/" .. fileName .. FILE_EXTENSION, json)
			--return true
		end

		-- Загрузка из файла
		function module.LoadConfig(fileName)
			--if not fileName or fileName == "" then return false end
			--local path = FOLDER_NAME .. "/" .. fileName .. FILE_EXTENSION
			--if not isFile(path) then return false end

			--local data = readFile(path)
			--if not data or data == "" then return false end
			--
			--local success, result = pcall(function()
			--	return HttpService:JSONDecode(data)
			--end)
			--if not success or type(result) ~= "table" then
			--	return false
			--end

			-- перезаполняем только известные категории
			--for _, cat in ipairs({ "Visual", "Player", "Misc", "Settings" }) do
			--	currentConfig[cat] = result[cat] or {}
			--end
			--return true
		end

		-- Удаление файла конфига
		function module.DeleteConfig(fileName)
			--if not fileName or fileName == "" then return false end
			--local path = FOLDER_NAME .. "/" .. fileName .. FILE_EXTENSION
			--if isFile(path) then
			--	delFile(path)
			--	return true
			--end
			--return false
		end

		-- Список всех конфигов
		function module.ListConfigs()
			--local files = {}
			--for _, path in pairs(listFiles(FOLDER_NAME)) do
			--	local name = string.match(path, "([^\\/]-)" .. FILE_EXTENSION .. "$")
			--	if name then
			--		table.insert(files, name)
			--	end
			--end
			--return files
		end

		return module

	end;
};
G2L_MODULES[G2L["17"]] = {
	Closure = function()
		local script = G2L["17"];local TweenService = game:GetService("TweenService")
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")

		local player = Players.LocalPlayer
		local playerGui = player:WaitForChild("PlayerGui")

		local module = {}
		local notifications = {}
		local maxNotifications = 5
		local container

		-- Адаптивные настройки для разных устройств с расширенной поддержкой
		local deviceSettings = {
			mobile = {
				containerWidth = 220,
				containerMargin = 10,
				notificationHeight = 55,
				notificationSpacing = 60,
				fontSize = {
					title = 12,
					description = 10,
					icon = 14
				},
				padding = {
					horizontal = 12,
					vertical = 6,
					iconOffset = 26
				}
			},
			tablet = {
				containerWidth = 250,
				containerMargin = 12,
				notificationHeight = 60,
				notificationSpacing = 65,
				fontSize = {
					title = 13,
					description = 11,
					icon = 15
				},
				padding = {
					horizontal = 14,
					vertical = 7,
					iconOffset = 28
				}
			},
			desktop = {
				containerWidth = 280,
				containerMargin = 15,
				notificationHeight = 65,
				notificationSpacing = 70,
				fontSize = {
					title = 14,
					description = 12,
					icon = 16
				},
				padding = {
					horizontal = 16,
					vertical = 8,
					iconOffset = 30
				}
			}
		}

		-- Определение типа устройства с расширенной поддержкой
		local function getDeviceType()
			local viewport = workspace.CurrentCamera.ViewportSize
			local screenWidth = viewport.X
			local screenHeight = viewport.Y
			local aspectRatio = screenWidth / screenHeight
			local guiService = game:GetService("GuiService")

			-- Проверяем тип устройства через GuiService
			local isTouchDevice = guiService:IsTenFootInterface() == false and 
				(game:GetService("UserInputService").TouchEnabled and 
					not game:GetService("UserInputService").KeyboardEnabled)

			-- Очень маленькие мобильные устройства (старые телефоны)
			if screenWidth < 480 or (screenWidth < 600 and aspectRatio < 1.0) then
				return "mobile"
				-- Обычные мобильные устройства и маленькие планшеты
			elseif screenWidth < 768 or (screenWidth < 900 and aspectRatio < 1.4) or isTouchDevice then
				return "mobile"
				-- Планшеты и небольшие ноутбуки
			elseif screenWidth < 1200 or (screenWidth < 1400 and aspectRatio < 1.6) then
				return "tablet"
				-- Десктоп и большие экраны
			else
				return "desktop"
			end
		end

		-- Создаем GUI контейнер с поддержкой всех устройств
		local function createMainGui()
			local newContainer = Instance.new("Frame")
			newContainer.Name = "NotificationContainer"
			newContainer.BackgroundTransparency = 1
			newContainer.Parent = script.Parent

			-- Функция обновления размеров контейнера с поддержкой поворота экрана
			local function updateContainerPosition()
				local deviceType = getDeviceType()
				local settings = deviceSettings[deviceType]

				-- Дополнительные проверки для лучшей адаптивности
				local viewport = workspace.CurrentCamera.ViewportSize
				local actualMargin = math.max(settings.containerMargin, viewport.X * 0.02) -- Минимум 2% от ширины экрана

				newContainer.Size = UDim2.new(0, settings.containerWidth, 1, 0)
				newContainer.Position = UDim2.new(1, -(settings.containerWidth + actualMargin), 0, 0)
			end

			updateContainerPosition()
			workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(updateContainerPosition)

			return newContainer
		end

		container = createMainGui()

		-- Темная цветовая схема
		local colors = {
			enabled = {
				primary = Color3.fromRGB(0, 255, 136),
				bg = Color3.fromRGB(18, 18, 18),
				border = Color3.fromRGB(0, 200, 108),
				text = Color3.fromRGB(255, 255, 255),
				desc = Color3.fromRGB(180, 180, 180)
			},
			disabled = {
				primary = Color3.fromRGB(255, 85, 85),
				bg = Color3.fromRGB(18, 18, 18),
				border = Color3.fromRGB(200, 68, 68),
				text = Color3.fromRGB(255, 255, 255),
				desc = Color3.fromRGB(180, 180, 180)
			},
			error = {
				primary = Color3.fromRGB(255, 68, 68),
				bg = Color3.fromRGB(18, 18, 18),
				border = Color3.fromRGB(220, 38, 38),
				text = Color3.fromRGB(255, 255, 255),
				desc = Color3.fromRGB(180, 180, 180)
			},
			info = {
				primary = Color3.fromRGB(59, 130, 246),
				bg = Color3.fromRGB(18, 18, 18),
				border = Color3.fromRGB(37, 99, 235),
				text = Color3.fromRGB(255, 255, 255),
				desc = Color3.fromRGB(180, 180, 180)
			}
		}

		-- Иконки Unicode
		local icons = {
			enabled = "●",
			disabled = "●", 
			error = "●",
			info = "●"
		}

		-- Обновление позиций (снизу вверх)
		local function updatePositions()
			local deviceType = getDeviceType()
			local settings = deviceSettings[deviceType]

			for i, notif in ipairs(notifications) do
				if notif and notif.frame and notif.frame.Parent then
					local targetY = -(i * settings.notificationSpacing + 20)
					local tween = TweenService:Create(notif.frame,
						TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
						{Position = UDim2.new(0, 0, 1, targetY)}
					)
					tween:Play()
				end
			end
		end

		-- Создание уведомления
		local function createNotification(title, description, notifType, duration)
			if not container or not container.Parent then
				container = createMainGui()
			end

			duration = duration or 5
			title = title or "Notification"
			description = description or ""
			notifType = notifType or "info"

			local deviceType = getDeviceType()
			local settings = deviceSettings[deviceType]
			local colorScheme = colors[notifType] or colors.info
			local hasDesc = description ~= ""
			local height = hasDesc and settings.notificationHeight or (settings.notificationHeight - 12)

			-- Основной фрейм
			local frame = Instance.new("Frame")
			frame.Name = "Notification"
			frame.Size = UDim2.new(1, 0, 0, height)
			frame.BackgroundColor3 = colorScheme.bg
			frame.BorderSizePixel = 0
			frame.ZIndex = 10

			-- Скругление
			local corner = Instance.new("UICorner")
			corner.CornerRadius = UDim.new(0, 8)
			corner.Parent = frame

			-- Граница
			local stroke = Instance.new("UIStroke")
			stroke.Color = Color3.fromRGB(40, 40, 40)
			stroke.Thickness = 1
			stroke.Parent = frame

			-- Иконка точка
			local iconLabel = Instance.new("TextLabel")
			iconLabel.Name = "Icon"
			iconLabel.Size = UDim2.new(0, 10, 0, 10)
			iconLabel.Position = UDim2.new(0, settings.padding.horizontal, 0, hasDesc and (settings.padding.vertical + 4) or (height - 10) / 2)
			iconLabel.BackgroundTransparency = 1
			iconLabel.Text = icons[notifType]
			iconLabel.TextColor3 = colorScheme.primary
			iconLabel.TextSize = settings.fontSize.icon
			iconLabel.Font = Enum.Font.GothamBold
			iconLabel.TextXAlignment = Enum.TextXAlignment.Center
			iconLabel.TextYAlignment = Enum.TextYAlignment.Center
			iconLabel.ZIndex = 12
			iconLabel.Parent = frame

			-- Заголовок
			local titleLabel = Instance.new("TextLabel")
			titleLabel.Name = "Title"
			titleLabel.Size = UDim2.new(1, -(settings.padding.iconOffset + settings.padding.horizontal), 0, hasDesc and 18 or height)
			titleLabel.Position = UDim2.new(0, settings.padding.iconOffset, 0, hasDesc and settings.padding.vertical or 0)
			titleLabel.BackgroundTransparency = 1
			titleLabel.Text = title
			titleLabel.TextColor3 = colorScheme.text
			titleLabel.TextSize = settings.fontSize.title
			titleLabel.Font = Enum.Font.GothamBold
			titleLabel.TextXAlignment = Enum.TextXAlignment.Left
			titleLabel.TextYAlignment = Enum.TextYAlignment.Center
			titleLabel.TextTruncate = Enum.TextTruncate.AtEnd
			titleLabel.ZIndex = 12
			titleLabel.Parent = frame

			-- Описание
			if hasDesc then
				local descLabel = Instance.new("TextLabel")
				descLabel.Name = "Description"
				descLabel.Size = UDim2.new(1, -(settings.padding.iconOffset + settings.padding.horizontal), 0, 18)
				descLabel.Position = UDim2.new(0, settings.padding.iconOffset, 0, settings.padding.vertical + 20)
				descLabel.BackgroundTransparency = 1
				descLabel.Text = description
				descLabel.TextColor3 = colorScheme.desc
				descLabel.TextSize = settings.fontSize.description
				descLabel.Font = Enum.Font.Gotham
				descLabel.TextXAlignment = Enum.TextXAlignment.Left
				descLabel.TextYAlignment = Enum.TextYAlignment.Center
				descLabel.TextTruncate = Enum.TextTruncate.AtEnd
				descLabel.TextWrapped = true
				descLabel.ZIndex = 12
				descLabel.Parent = frame
			end

			-- Прогресс-бар
			local progressBg = Instance.new("Frame")
			progressBg.Name = "ProgressBg"
			progressBg.Size = UDim2.new(1, -(settings.padding.horizontal * 0.8), 0, 3)
			progressBg.Position = UDim2.new(0, settings.padding.horizontal * 0.4, 1, -6)
			progressBg.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			progressBg.BorderSizePixel = 0
			progressBg.ZIndex = 11
			progressBg.Parent = frame

			local progressCorner = Instance.new("UICorner")
			progressCorner.CornerRadius = UDim.new(0, 1.5)
			progressCorner.Parent = progressBg

			local progress = Instance.new("Frame")
			progress.Name = "Progress"
			progress.Size = UDim2.new(1, 0, 1, 0)
			progress.Position = UDim2.new(0, 0, 0, 0)
			progress.BackgroundColor3 = colorScheme.primary
			progress.BorderSizePixel = 0
			progress.ZIndex = 12
			progress.Parent = progressBg

			local progressBarCorner = Instance.new("UICorner")
			progressBarCorner.CornerRadius = UDim.new(0, 1.5)
			progressBarCorner.Parent = progress

			-- Данные уведомления
			local notifData = {
				frame = frame,
				startTime = tick(),
				duration = duration,
				progress = progress,
				isActive = true
			}

			table.insert(notifications, notifData)

			-- Быстрое удаление старых уведомлений с анимацией
			while #notifications > maxNotifications do
				local oldest = notifications[1]
				if oldest and oldest.frame and oldest.frame.Parent then
					oldest.isActive = false

					-- Быстрая анимация исчезновения
					local quickSlideOut = TweenService:Create(oldest.frame,
						TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
						{
							Position = UDim2.new(1, 50, oldest.frame.Position.Y.Scale, oldest.frame.Position.Y.Offset),
							BackgroundTransparency = 1
						}
					)

					-- Быстрое исчезновение элементов
					spawn(function()
						local elements = oldest.frame:GetChildren()
						for _, element in ipairs(elements) do
							if element:IsA("TextLabel") then
								TweenService:Create(element, TweenInfo.new(0.2), {TextTransparency = 1}):Play()
							elseif element:IsA("UIStroke") then
								TweenService:Create(element, TweenInfo.new(0.2), {Transparency = 1}):Play()
							elseif element:IsA("Frame") and element.Name ~= "Shadow" then
								TweenService:Create(element, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
							end
						end
					end)

					quickSlideOut:Play()
					quickSlideOut.Completed:Connect(function()
						if oldest.frame and oldest.frame.Parent then
							oldest.frame:Destroy()
						end
					end)
				end
				table.remove(notifications, 1)
			end

			frame.Parent = container

			-- Функция удаления
			local function removeNotification()
				notifData.isActive = false

				for i = #notifications, 1, -1 do
					if notifications[i] == notifData then
						table.remove(notifications, i)
						break
					end
				end

				-- Плавное исчезновение
				local slideOut = TweenService:Create(frame,
					TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
					{
						Position = UDim2.new(1, 50, frame.Position.Y.Scale, frame.Position.Y.Offset),
						BackgroundTransparency = 1
					}
				)

				-- Исчезновение текста и элементов
				TweenService:Create(titleLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
				TweenService:Create(iconLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
				TweenService:Create(stroke, TweenInfo.new(0.3), {Transparency = 1}):Play()
				TweenService:Create(progressBg, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
				TweenService:Create(progress, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()

				if hasDesc then
					local descLabel = frame:FindFirstChild("Description")
					if descLabel then
						TweenService:Create(descLabel, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
					end
				end

				slideOut:Play()

				slideOut.Completed:Connect(function()
					if frame and frame.Parent then
						frame:Destroy()
					end
					updatePositions()
				end)
			end

			-- Анимация появления (снизу справа)
			local targetPos = UDim2.new(0, 0, 1, -(#notifications * settings.notificationSpacing + 20))

			-- Начальное состояние
			frame.Position = UDim2.new(1, 50, 1, -(#notifications * settings.notificationSpacing + 20))
			frame.BackgroundTransparency = 1
			titleLabel.TextTransparency = 1
			iconLabel.TextTransparency = 1
			stroke.Transparency = 1
			progressBg.BackgroundTransparency = 1
			progress.BackgroundTransparency = 1

			if hasDesc then
				local descLabel = frame:FindFirstChild("Description")
				if descLabel then
					descLabel.TextTransparency = 1
				end
			end

			-- Плавное появление
			local slideIn = TweenService:Create(frame,
				TweenInfo.new(0.6, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
				{Position = targetPos}
			)

			local fadeIn = TweenService:Create(frame,
				TweenInfo.new(0.5, Enum.EasingStyle.Quad),
				{BackgroundTransparency = 0}
			)

			slideIn:Play()
			fadeIn:Play()

			-- Появление элементов с задержкой
			spawn(function()
				wait(0.2)
				TweenService:Create(stroke, TweenInfo.new(0.4), {Transparency = 0}):Play()
				TweenService:Create(titleLabel, TweenInfo.new(0.4), {TextTransparency = 0}):Play()
				TweenService:Create(iconLabel, TweenInfo.new(0.4), {TextTransparency = 0}):Play()
				TweenService:Create(progressBg, TweenInfo.new(0.4), {BackgroundTransparency = 0}):Play()
				TweenService:Create(progress, TweenInfo.new(0.4), {BackgroundTransparency = 0}):Play()

				if hasDesc then
					local descLabel = frame:FindFirstChild("Description")
					if descLabel then
						TweenService:Create(descLabel, TweenInfo.new(0.4), {TextTransparency = 0}):Play()
					end
				end
			end)

			updatePositions()

			-- Автоудаление
			spawn(function()
				wait(duration)
				if notifData.isActive then
					removeNotification()
				end
			end)

			return frame
		end

		-- Обновление прогресс-баров
		spawn(function()
			while true do
				RunService.Heartbeat:Wait()

				for i = #notifications, 1, -1 do
					local notif = notifications[i]
					if notif and notif.isActive and notif.frame and notif.frame.Parent then
						local elapsed = tick() - notif.startTime
						local remaining = math.max(0, 1 - (elapsed / notif.duration))

						if notif.progress and notif.progress.Parent then
							notif.progress.Size = UDim2.new(remaining, 0, 1, 0)
						end
					end
				end
			end
		end)

		-- Публичные функции
		function module.Error(title, description, duration)
			return createNotification(title or "Error", description or "Something went wrong", "error", duration)
		end

		function module.Info(title, description, duration)
			return createNotification(title or "Info", description or "Information", "info", duration)
		end

		function module.Enabled(title, description, duration)
			return createNotification(title or "Enabled", description or "Feature activated", "enabled", duration)
		end

		function module.Disabled(title, description, duration)
			return createNotification(title or "Disabled", description or "Feature disabled", "disabled", duration)
		end

		function module.Clear()
			for _, notif in ipairs(notifications) do
				if notif and notif.frame and notif.frame.Parent then
					notif.isActive = false
					notif.frame:Destroy()
				end
			end
			notifications = {}
		end

		function module.Test()
			module.Info("System", "Notification system ready")
			spawn(function()
				wait(1)
				module.Enabled("Aimbot", "Target lock enabled")
				wait(1.5)
				module.Disabled("ESP", "Visual overlay disabled")  
				wait(2)
				module.Error("Detection", "Possible detection warning")
			end)
		end

		-- Lowercase версии
		module.error = module.Error
		module.info = module.Info
		module.enabled = module.Enabled
		module.disabled = module.Disabled
		module.clear = module.Clear
		module.test = module.Test

		return module
	end;
};
G2L_MODULES[G2L["108"]] = {
	Closure = function()
		local script = G2L["108"];Closure = function()
			local module = {}

			module.Settings = {
				color = Color3.fromRGB(255, 255, 255),
				transparency = 0.3
			}

			return module

		end;
	end;
};
G2L_MODULES[G2L["35d"]] = {
	Closure = function()
		local script = G2L["35d"];_G.infinjump = false
		local uis = game:GetService('UserInputService')

		local module = {}
		local inputConnections = {}  -- Храним все подключения, чтобы их можно было отсоединить

		module.toggleInfiniteJump = function(enable)
			if enable then
				_G.infinjump = true
				local plr = game:GetService('Players').LocalPlayer

				-- Отслеживаем только новые подключения
				local connection = uis.InputBegan:Connect(function(input, gameProcessed)
					if not gameProcessed and _G.infinjump and input.KeyCode == Enum.KeyCode.Space then
						local plrh = plr.Character and plr.Character:FindFirstChildOfClass('Humanoid')
						if plrh then
							plrh:ChangeState(Enum.HumanoidStateType.Jumping)
						end
					end
				end)

				table.insert(inputConnections, connection)  -- Добавляем соединение в список
			else
				_G.infinjump = false
				-- Отключаем все события, отсоединяя каждое из них
				for _, conn in pairs(inputConnections) do
					conn:Disconnect()
				end
				inputConnections = {}  -- Очищаем список подключений
			end
		end

		return module.toggleInfiniteJump
	end;
};
G2L_MODULES[G2L["37c"]] = {
	Closure = function()
		local script = G2L["37c"];local module = {}
		local isActive = false
		local runningCoroutine = nil

		local Players = game:GetService("Players")
		local LocalPlayer = Players.LocalPlayer

		-- Переменная для хранения BodyAngularVelocity
		local currentRotationForce = nil

		-- Функция для вращения HumanoidRootPart с случайной остановкой
		local function applyRotation(speed)
			while isActive do
				local character = LocalPlayer.Character
				if not character then return end

				local rootPart = character:FindFirstChild("HumanoidRootPart")
				if rootPart then
					-- Проверяем, какой тип аватара у игрока (R6 или R15)
					local humanoid = character:FindFirstChildOfClass("Humanoid")
					if humanoid then
						-- Если вращение уже применено, обновляем скорость вращения
						if not currentRotationForce then
							currentRotationForce = Instance.new("BodyAngularVelocity")
							currentRotationForce.Parent = rootPart
							currentRotationForce.MaxTorque = Vector3.new(0, math.huge, 0) -- Максимальный крутящий момент
						end

						-- Генерируем случайное направление вращения (положительное или отрицательное)
						local randomDirection = math.random(0, 1) == 0 and -1 or 1
						currentRotationForce.AngularVelocity = Vector3.new(0, randomDirection * speed, 0) -- Вращение вокруг оси Y

						-- Остановка ротации на случайное время (от 0.2 до 0.3 секунды)
						local stopDuration = math.random(1.5, 2.7) / 10 -- 0.2 - 0.3 секунд
						wait(stopDuration)
						-- Останавливаем ротацию

						-- Возобновляем ротацию через случайный промежуток времени (от 0.2 до 0.4 секунды)
						local resumeDuration = math.random(1.5, 3) / 10 -- 0.2 - 0.4 секунд
						wait(resumeDuration)
					end
				end

				wait(0.1) -- Обновление раз в 0.1 секунды для плавности
			end
		end

		-- Функция для запуска модуля
		function module.start(speed)
			if not isActive then
				isActive = true
				runningCoroutine = coroutine.create(function() applyRotation(speed) end)
				coroutine.resume(runningCoroutine)
			end
		end

		-- Функция для остановки модуля
		function module.stop()
			if isActive then
				isActive = false
				if currentRotationForce then
					currentRotationForce:Destroy() -- Удаляем вращение
					currentRotationForce = nil
				end
			end
		end

		return module
	end;
};
G2L_MODULES[G2L["389"]] = {
	Closure = function()
		local script = G2L["389"];local module = {}

		local RunService = game:GetService("RunService")

		local activeNoClips = {}

		-- Применяет NoClip один раз для всех частей персонажа
		local function applyNoClipOnce(character, canCollideValue)
			for _, part in pairs(character:GetDescendants()) do
				if part:IsA("BasePart") and part.CanCollide ~= canCollideValue then
					part.CanCollide = canCollideValue
				end
			end
		end

		-- Обработчик добавления новых частей к персонажу
		local function onDescendantAdded(part)
			if part:IsA("BasePart") and part.CanCollide then
				part.CanCollide = false
			end
		end

		-- Периодически поддерживает NoClip для активных персонажей
		local function periodicCleaner()
			for character, data in pairs(activeNoClips) do
				if data.Active and character.Parent then
					applyNoClipOnce(character, false) -- только сбрасываем CanCollide в false там, где это нужно
				else
					data.Connection:Disconnect()
					activeNoClips[character] = nil
				end
			end
		end

		-- Таймер для запуска периодической очистки (0.3 сек)
		local timer = 0
		RunService.Heartbeat:Connect(function(step)
			timer = timer + step
			if timer >= 0.3 then
				periodicCleaner()
				timer = 0
			end
		end)

		function module.EnableNoClip(character)
			if not character or activeNoClips[character] then return end

			-- Подписываемся на добавление потомков и сразу применяем NoClip
			local conn = character.DescendantAdded:Connect(onDescendantAdded)
			activeNoClips[character] = {
				Connection = conn,
				Active = true,
			}

			applyNoClipOnce(character, false)
		end

		function module.DisableNoClip(character)
			if not character then return end
			local data = activeNoClips[character]
			if not data then return end

			data.Active = false
			data.Connection:Disconnect()
			activeNoClips[character] = nil

			-- Восстанавливаем CanCollide на true там, где нужно
			applyNoClipOnce(character, true)
		end

		function module.ToggleNoClip(character)
			if not character then return end
			local hrp = character:FindFirstChild("HumanoidRootPart")
			if not hrp then return end

			if hrp.CanCollide then
				module.EnableNoClip(character)
			else
				module.DisableNoClip(character)
			end
		end

		return module
	end;
};
G2L_MODULES[G2L["3b4"]] = {
	Closure = function()
		local script = G2L["3b4"];local FlyModule = {}
		local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")

		local player = Players.LocalPlayer
		local flying = false
		local speed = tonumber(script.Parent.Parent.Parent.FlySpeed.Value)
		local keys = {a = false, d = false, w = false, s = false}

		local corePart, pos, gyro, weld, humanoid, lowerTorso

		local function findHumanoidAndLowerTorso(character)
			if not character then return false end

			humanoid = character:FindFirstChildOfClass("Humanoid")
			if not humanoid then
				return false
			end

			local torsoNames = {"LowerTorso", "Torso", "HumanoidRootPart", "UpperTorso"}
			for _, name in ipairs(torsoNames) do
				lowerTorso = character:FindFirstChild(name)
				if lowerTorso then break end
			end

			if not lowerTorso then
				return false
			end

			return true
		end

		local function cleanup()
			if gyro then
				gyro:Destroy()
				gyro = nil
			end
			if pos then
				pos:Destroy()
				pos = nil
			end
			if corePart then
				corePart:Destroy()
				corePart = nil
			end
			if weld then
				weld:Destroy()
				weld = nil
			end
			if humanoid then
				humanoid.PlatformStand = false
			end
		end

		local function createFlyingPart()
			cleanup()

			if not findHumanoidAndLowerTorso(player.Character) then
				warn("Humanoid или LowerTorso не найдены!")
				return
			end

			corePart = Instance.new("Part")
			corePart.Name = "Core"
			corePart.Size = Vector3.new(0.05, 0.05, 0.05)
			corePart.Position = lowerTorso.Position
			corePart.Anchored = false
			corePart.CanCollide = false
			corePart.Transparency = 1 -- чтобы не мешать
			corePart.Parent = workspace

			weld = Instance.new("Weld")
			weld.Part0 = corePart
			weld.Part1 = lowerTorso
			weld.C0 = CFrame.new(0, 0, 0)
			weld.Parent = corePart

			pos = Instance.new("BodyPosition")
			pos.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
			pos.Position = corePart.Position
			pos.P = 1e5
			pos.D = 1e3
			pos.Parent = corePart

			gyro = Instance.new("BodyGyro")
			gyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
			gyro.CFrame = corePart.CFrame
			gyro.Parent = corePart
		end

		local function startFlying()
			if flying then return end
			flying = true

			-- Обновляем humanoid и lowerTorso перед стартом
			if not findHumanoidAndLowerTorso(player.Character) then
				warn("Humanoid или LowerTorso не найдены!")
				flying = false
				return
			end

			createFlyingPart()

			task.spawn(function()
				while flying do
					task.wait()

					if humanoid then
						humanoid.PlatformStand = true
					else
						-- Если humanoid пропал — прерываем полёт
						flying = false
						break
					end

					local camCFrame = workspace.CurrentCamera.CFrame
					local newPos = pos.Position

					local moveSpeed = (keys.w or keys.s or keys.a or keys.d) and speed or 5

					if keys.w then
						newPos = newPos + camCFrame.LookVector * moveSpeed
					end
					if keys.s then
						newPos = newPos - camCFrame.LookVector * moveSpeed
					end
					if keys.d then
						newPos = newPos + camCFrame.RightVector * moveSpeed
					end
					if keys.a then
						newPos = newPos - camCFrame.RightVector * moveSpeed
					end

					pos.Position = newPos

					if keys.w then
						gyro.CFrame = camCFrame * CFrame.Angles(-math.rad(moveSpeed * 0.1), 0, 0)
					elseif keys.s then
						gyro.CFrame = camCFrame * CFrame.Angles(math.rad(moveSpeed * 0.1), 0, 0)
					else
						gyro.CFrame = camCFrame
					end
				end
				cleanup()
			end)
		end

		function FlyModule.stop()
			if not flying then return end
			flying = false
			-- cleanup вызовется автоматически после выхода из цикла
		end

		function FlyModule.isFlying()
			return flying
		end

		-- Обработка нажатия клавиш
		local function onKeyPressed(input, gameProcessed)
			if gameProcessed then return end
			local key = input.KeyCode
			if key == Enum.KeyCode.W then keys.w = true end
			if key == Enum.KeyCode.S then keys.s = true end
			if key == Enum.KeyCode.A then keys.a = true end
			if key == Enum.KeyCode.D then keys.d = true end
		end

		local function onKeyReleased(input, gameProcessed)
			if gameProcessed then return end
			local key = input.KeyCode
			if key == Enum.KeyCode.W then keys.w = false end
			if key == Enum.KeyCode.S then keys.s = false end
			if key == Enum.KeyCode.A then keys.a = false end
			if key == Enum.KeyCode.D then keys.d = false end
		end

		UserInputService.InputBegan:Connect(onKeyPressed)
		UserInputService.InputEnded:Connect(onKeyReleased)

		-- Обновление персонажа (обновляет humanoid и lowerTorso)
		player.CharacterAdded:Connect(function(character)
			findHumanoidAndLowerTorso(character)
		end)

		-- Обновление скорости при изменении FlySpeed
		local flySpeedObj = script.Parent.Parent.Parent:FindFirstChild("FlySpeed")
		if flySpeedObj then
			flySpeedObj.Changed:Connect(function()
				local num = tonumber(flySpeedObj.Value)
				if num then
					speed = num
				end
			end)
		end

		FlyModule.startFlying = startFlying
		FlyModule.stop = FlyModule.stop
		FlyModule.isFlying = FlyModule.isFlying

		return FlyModule
	end;
};
G2L_MODULES[G2L["40d"]] = {
	Closure = function()
		local script = G2L["40d"];local module = {}
		local isEnabled = false
		local RunService = game:GetService("RunService")
		local Players = game:GetService("Players")

		local localPlayer = Players.LocalPlayer
		local hrpToRotate = nil
		local characterToRotate = nil
		local rotationRadius = 25
		local rotationSpeed = 2
		local centerPlayer = nil
		local renderStepConnection = nil

		local loopValue -- ссылка на значение Loop
		local checkingLoop = false

		-- Функция для поиска персонажа игрока
		local function findCharacter(player)
			if player.Character then
				return player.Character
			end
			player.CharacterAdded:Wait()
			return player.Character
		end

		-- Инициализация
		local function setupCharacter(character)
			hrpToRotate = character:FindFirstChild("HumanoidRootPart") or character:WaitForChild("HumanoidRootPart", 10)
		end

		local function onCharacterAdded(character)
			characterToRotate = character
			setupCharacter(character)

			if loopValue and loopValue.Value then
				module.start(rotationRadius, rotationSpeed, centerPlayer)
			end
		end

		local function onCharacterRemoving()
			hrpToRotate = nil
		end

		-- Вращение вокруг центра
		local function rotateAround()
			if not centerPlayer or not centerPlayer.Parent then return end
			local hrpCenter = centerPlayer:FindFirstChild("HumanoidRootPart") or centerPlayer:WaitForChild("HumanoidRootPart", 10)
			if not hrpCenter then return end

			local angle = 0

			if renderStepConnection then
				renderStepConnection:Disconnect()
			end

			renderStepConnection = RunService.RenderStepped:Connect(function(deltaTime)
				if isEnabled and hrpToRotate and hrpToRotate.Parent and hrpCenter and hrpCenter.Parent then
					angle = angle + rotationSpeed * deltaTime
					if angle >= 360 then angle = angle - 360 end

					local radians = math.rad(angle)
					local xOffset = rotationRadius * math.cos(radians)
					local zOffset = rotationRadius * math.sin(radians)

					hrpToRotate.CFrame = CFrame.new(hrpCenter.Position + Vector3.new(xOffset, 0, zOffset), hrpCenter.Position)
				end
			end)
		end

		-- Запуск
		function module.start(radius, speed, player)
			if not player or not player.Character then return end

			rotationRadius = math.clamp(radius, 1, 10000)
			rotationSpeed = math.clamp(speed, 1, 100000)
			centerPlayer = player.Character

			isEnabled = true
			rotateAround()
		end

		-- Остановка
		function module.stop()
			isEnabled = false
			if renderStepConnection then
				renderStepConnection:Disconnect()
				renderStepConnection = nil
			end
		end

		-- Отслеживание Loop
		local function checkLoopContinuously()
			if checkingLoop then return end
			checkingLoop = true

			while true do
				task.wait(1)
				if loopValue and loopValue.Value then
					if localPlayer.Character then
						module.start(rotationRadius, rotationSpeed, centerPlayer)
					end
				else
					module.stop()
				end
			end
		end

		-- Привязка
		task.defer(function()
			local parent = script
			for _ = 1, 3 do
				if parent.Parent then
					parent = parent.Parent
				end
			end
			loopValue = parent:FindFirstChild("Loop")

			if loopValue and loopValue:IsA("BoolValue") then
				checkLoopContinuously()
			end
		end)

		-- Подписки на события
		localPlayer.CharacterAdded:Connect(onCharacterAdded)
		localPlayer.CharacterRemoving:Connect(onCharacterRemoving)

		if localPlayer.Character then
			onCharacterAdded(localPlayer.Character)
		end

		return module
	end;
};
G2L_MODULES[G2L["42d"]] = {
	Closure = function()
		local script = G2L["42d"];
		local module = {}
		local isActive = false
		local runningCoroutine = nil

		local Players = game:GetService("Players")
		local LocalPlayer = Players.LocalPlayer

		-- Переменная для хранения BodyAngularVelocity
		local currentRotationForce = nil

		-- Функция для вращения HumanoidRootPart
		local function applyRotation(speed)
			while isActive do
				local character = LocalPlayer.Character
				if not character then return end

				local rootPart = character:FindFirstChild("HumanoidRootPart")
				if rootPart then
					-- Проверяем, какой тип аватара у игрока (R6 или R15)
					local humanoid = character:FindFirstChildOfClass("Humanoid")
					if humanoid then
						-- Если вращение уже применено, обновляем скорость вращения
						if not currentRotationForce then
							currentRotationForce = Instance.new("BodyAngularVelocity")
							currentRotationForce.Parent = rootPart
							currentRotationForce.MaxTorque = Vector3.new(0, math.huge, 0) -- Максимальный крутящий момент
						end
						currentRotationForce.AngularVelocity = Vector3.new(0, speed, 0) -- Вращение вокруг оси Y
					end
				end

				wait(0.3) -- Обновление раз в 0.1 секунды
			end
		end

		-- Функция для запуска модуля
		function module.start(speed)
			if not isActive then
				isActive = true
				runningCoroutine = coroutine.create(function() applyRotation(speed) end)
				coroutine.resume(runningCoroutine)
			end
		end

		-- Функция для остановки модуля
		function module.stop()
			if isActive then
				isActive = false
				if currentRotationForce then
					currentRotationForce:Destroy() -- Удаляем вращение
					currentRotationForce = nil
				end
			end
		end

		return module

	end;
};
G2L_MODULES[G2L["513"]] = {
	Closure = function()
		local script = G2L["513"];local module = {}

		local player = game.Players.LocalPlayer
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")

		local defaultcam = player.CameraMode
		local maxzoomdef = player.CameraMaxZoomDistance
		local minzoomdef = player.CameraMinZoomDistance

		local fp = false

		-- Функция для включения камеры
		function module.start()
			fp = true
			RunService.RenderStepped:Connect(function()
				if fp then
					local module = require(script.Parent.Settings)
					player.CameraMode = Enum.CameraMode.Classic
					player.CameraMaxZoomDistance = module.Settings.zoom
					player.CameraMinZoomDistance = module.Settings.zoom
				end
			end)
		end

		-- Функция для отключения камеры
		function module.stop()
			if fp == true then
				-- Возвращаем камеру в исходное состояние
				player.CameraMode = Enum.CameraMode.Classic
				fp = false
				player.CameraMaxZoomDistance = maxzoomdef
				player.CameraMinZoomDistance = minzoomdef
			else
				player.CameraMode = Enum[defaultcam]
				fp = false
				player.CameraMaxZoomDistance = maxzoomdef
				player.CameraMinZoomDistance = minzoomdef
			end
		end

		return module
	end;
};
G2L_MODULES[G2L["514"]] = {
	Closure = function()
		local script = G2L["514"];local module = {}

		module.Settings = {
			zoom = 5
		}

		return module
	end;
};
G2L_MODULES[G2L["521"]] = {
	Closure = function()
		local script = G2L["521"];local AntiAFK = {}

		local Players = game:GetService("Players")
		local VirtualUser = game:GetService("VirtualUser")

		local player = Players.LocalPlayer
		local connection
		local isEnabled = false

		function AntiAFK.Enable()
			if isEnabled then return end
			isEnabled = true

			connection = player.Idled:Connect(function()
				if not isEnabled then return end

				-- Эмуляция движения мышки (правая кнопка мыши)
				VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
				task.wait(0.1)
				VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
			end)
		end

		function AntiAFK.Disable()
			if not isEnabled then return end
			isEnabled = false

			if connection then
				connection:Disconnect()
				connection = nil
			end
		end

		return AntiAFK
	end;
};
G2L_MODULES[G2L["530"]] = {
	Closure = function()
		local script = G2L["530"];local module = {}

		local RunService = game:GetService("RunService")
		local Players = game:GetService("Players")
		local TweenService = game:GetService("TweenService")

		local localPlayer = Players.LocalPlayer
		local connection
		local running = false
		local maxDistance = 200 -- Максимальное расстояние для поиска ближайшего игрока

		-- Кэшируем character и root для экономии вызовов
		local function getRootPart(char)
			return char and (char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso"))
		end

		-- Поиск ближайшего врага к локальному игроку
		local function findNearestEnemy()
			local localChar = localPlayer.Character
			local localRoot = getRootPart(localChar)
			if not localRoot then return nil end

			local nearestEnemy = nil
			local shortestDistance = maxDistance

			for _, player in pairs(Players:GetPlayers()) do
				if player ~= localPlayer and player.Character and player.Character.Parent then
					local enemyRoot = getRootPart(player.Character)
					if enemyRoot then
						local distance = (localRoot.Position - enemyRoot.Position).Magnitude
						if distance < shortestDistance then
							shortestDistance = distance
							nearestEnemy = player
						end
					end
				end
			end

			return nearestEnemy
		end

		-- Генерация случайного вращения по оси X в радианах
		local function getRandomRotationX()
			return math.rad(math.random(3, 9))
		end

		function module.start()
			if running then return end
			running = true

			connection = RunService.RenderStepped:Connect(function()
				local localChar = localPlayer.Character
				local localRoot = getRootPart(localChar)
				if not localRoot then return end

				local enemy = findNearestEnemy()
				if not enemy or not enemy.Character then return end

				local enemyRoot = getRootPart(enemy.Character)
				if not enemyRoot then return end

				-- Вычисляем направление спиной к врагу
				local directionToEnemy = (enemyRoot.Position - localRoot.Position).Unit
				local directionAwayFromEnemy = -directionToEnemy

				local randomRotationX = getRandomRotationX()

				local newCFrame = CFrame.lookAt(localRoot.Position, localRoot.Position + directionAwayFromEnemy) * CFrame.Angles(randomRotationX, 0, 0)

				-- Плавное вращение с TweenService
				local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
				local goal = {CFrame = newCFrame}

				local tween = TweenService:Create(localRoot, tweenInfo, goal)
				tween:Play()
			end)
		end

		function module.stop()
			if not running then return end
			running = false

			if connection then
				connection:Disconnect()
				connection = nil
			end
		end

		return module
	end;
};
G2L_MODULES[G2L["53c"]] = {
	Closure = function()
		local script = G2L["53c"];local TeleportModule = {}

		local RunService = game:GetService("RunService")
		local Players = game:GetService("Players")

		local isRunning = false
		local loopConnection = nil

		local player -- локальный игрок (к которому телепортируем)
		local hrp -- HumanoidRootPart игрока

		local teleportInterval = 2.5 -- время в секундах между телепортами
		local maxDistance = 60

		local lastTeleportedPlayer = nil -- последний, к кому телепортировались

		-- Получение ближайшего игрока, отличного от себя и последнего
		function TeleportModule.GetClosestPlayer(fromPosition)
			local closestPlayer = nil
			local closestDistance = maxDistance

			for _, p in ipairs(Players:GetPlayers()) do
				if p ~= player and p ~= lastTeleportedPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
					local dist = (fromPosition - p.Character.HumanoidRootPart.Position).Magnitude
					if dist < closestDistance then
						closestDistance = dist
						closestPlayer = p
					end
				end
			end

			return closestPlayer
		end

		-- Запуск цикла телепортации
		function TeleportModule.Start(targetPlayer)
			if isRunning or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then return end

			player = targetPlayer
			hrp = player.Character.HumanoidRootPart
			isRunning = true
			lastTeleportedPlayer = nil

			local lastTeleportTime = 0

			loopConnection = RunService.Heartbeat:Connect(function()
				if not isRunning then return end

				if tick() - lastTeleportTime >= teleportInterval then
					local closest = TeleportModule.GetClosestPlayer(hrp.Position)

					if closest and closest.Character and closest.Character:FindFirstChild("HumanoidRootPart") then
						local targetHRP = closest.Character.HumanoidRootPart
						local distance = (hrp.Position - targetHRP.Position).Magnitude

						if distance <= maxDistance then
							hrp.CFrame = targetHRP.CFrame
							lastTeleportedPlayer = closest
						else
							TeleportModule.Stop() -- остановить, если слишком далеко
						end
					else
						TeleportModule.Stop() -- остановить, если никого нет
					end

					lastTeleportTime = tick()
				end
			end)
		end

		function TeleportModule.Stop()
			isRunning = false
			lastTeleportedPlayer = nil
			if loopConnection then
				loopConnection:Disconnect()
				loopConnection = nil
			end
		end

		return TeleportModule
	end;
};
G2L_MODULES[G2L["5c8"]] = {
	Closure = function()
		local script = G2L["5c8"];local Freecam = {}
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local UserInputService = game:GetService("UserInputService")
		local Workspace = game:GetService("Workspace")

		local player = Players.LocalPlayer
		local camera

		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")
		local rootPart = character:WaitForChild("HumanoidRootPart")

		local power = script.Parent.Parent.Parent:WaitForChild("power")
		local active = false
		local camPos = Vector3.new()
		local yaw, pitch = 0, 0
		local keys = {}
		local mouseDelta = Vector2.new()

		-- Поиск камеры во всех местах
		local function findCamera()
			-- 1. Основная
			if Workspace.CurrentCamera then
				return Workspace.CurrentCamera
			end

			-- 2. Любые камеры в Workspace
			for _, obj in ipairs(Workspace:GetDescendants()) do
				if obj:IsA("Camera") then
					return obj
				end
			end

			-- 3. Камеры в PlayerGui и у игрока
			for _, obj in ipairs(player:GetDescendants()) do
				if obj:IsA("Camera") then
					return obj
				end
			end

			return nil
		end

		-- Обновление камеры в реальном времени
		RunService.Heartbeat:Connect(function()
			local cam = findCamera()
			if cam and cam ~= camera then
				camera = cam
			end
		end)

		-- Мышь
		UserInputService.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement then
				mouseDelta = mouseDelta + Vector2.new(-input.Delta.Y, -input.Delta.X)
			end
		end)

		-- Клавиши
		UserInputService.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard then
				keys[input.KeyCode] = true
			end
		end)
		UserInputService.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Keyboard then
				keys[input.KeyCode] = false
			end
		end)

		-- Блокировка персонажа
		local originalWS = humanoid.WalkSpeed
		local originalJP = humanoid.JumpPower
		local function blockCharacter()
			humanoid.WalkSpeed = 0
			humanoid.JumpPower = 0
		end
		local function restoreCharacter()
			humanoid.WalkSpeed = originalWS
			humanoid.JumpPower = originalJP
		end

		-- Движение
		local function getMoveVector()
			local move = Vector3.new()
			if keys[Enum.KeyCode.W] then move = move + Vector3.new(0,0,-1) end
			if keys[Enum.KeyCode.S] then move = move + Vector3.new(0,0,1) end
			if keys[Enum.KeyCode.A] then move = move + Vector3.new(-1,0,0) end
			if keys[Enum.KeyCode.D] then move = move + Vector3.new(1,0,0) end
			if keys[Enum.KeyCode.Space] then move = move + Vector3.new(0,1,0) end
			if keys[Enum.KeyCode.LeftShift] then move = move + Vector3.new(0,-1,0) end
			if move.Magnitude > 0 then move = move.Unit end
			return move
		end

		local function stepFreecam(dt)
			if not camera then return end

			-- Поворот мышью
			local sens = 0.003
			yaw = yaw + mouseDelta.Y * sens
			pitch = pitch + mouseDelta.X * sens
			pitch = math.clamp(pitch, -math.pi/2, math.pi/2)
			mouseDelta = Vector2.new()

			-- Движение
			local move = getMoveVector()
			local cfRotation = CFrame.Angles(0, yaw, 0) * CFrame.Angles(pitch, 0, 0)
			local worldMove = cfRotation:VectorToWorldSpace(move)
			camPos = camPos + worldMove * (power.Value or 16) * dt

			-- Камера
			camera.CFrame = CFrame.new(camPos) * CFrame.Angles(0, yaw, 0) * CFrame.Angles(pitch, 0, 0)
		end

		function Freecam.start()
			if active then return false end
			active = true

			character = player.Character or player.CharacterAdded:Wait()
			humanoid = character:WaitForChild("Humanoid")
			rootPart = character:WaitForChild("HumanoidRootPart")

			blockCharacter()

			-- Инициализация камеры
			camera = findCamera()
			if not camera then return false end

			camPos = camera.CFrame.Position
			local _, yAngle, _ = camera.CFrame:ToEulerAnglesYXZ()
			local xAngle = math.asin(-camera.CFrame.LookVector.Y)
			pitch = xAngle
			yaw = yAngle

			RunService:BindToRenderStep("Freecam", Enum.RenderPriority.Camera.Value, stepFreecam)
			return true
		end

		function Freecam.stop()
			if not active then return false end
			active = false
			RunService:UnbindFromRenderStep("Freecam")
			restoreCharacter()
			return true
		end

		function Freecam.toggle()
			if active then
				return Freecam.stop()
			else
				return Freecam.start()
			end
		end

		player.CharacterRemoving:Connect(function()
			if active then Freecam.stop() end
		end)

		return Freecam

	end;
};
G2L_MODULES[G2L["5e6"]] = {
	Closure = function()
		local script = G2L["5e6"];local ModuleEffect = {}

		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local LocalPlayer = Players.LocalPlayer

		local originalToolProperties = {}
		local isActive = false
		local bypassValue
		local steppedConnection

		-- Кешируем персонажи и инструменты
		local cachedCharacters = {}
		local cachedTools = {}

		-- Для оптимизации — кешируем BasePart для каждого персонажа и инструмента
		local cachedCharacterParts = {}
		local cachedToolParts = {}

		local function cachePlayers()
			cachedCharacters = {}
			cachedTools = {}
			cachedCharacterParts = {}
			cachedToolParts = {}

			for _, player in ipairs(Players:GetPlayers()) do
				if player ~= LocalPlayer then
					local char = player.Character
					if char then
						cachedCharacters[player] = char

						-- Кешируем BasePart персонажа
						local parts = {}
						for _, part in ipairs(char:GetDescendants()) do
							if part:IsA("BasePart") then
								table.insert(parts, part)
							end
						end
						cachedCharacterParts[player] = parts
					end

					-- Кешируем инструменты
					local tools = {}

					local function cacheToolsFromContainer(container)
						if container then
							for _, tool in ipairs(container:GetChildren()) do
								if tool:IsA("Tool") then
									table.insert(tools, tool)
								end
							end
						end
					end

					cacheToolsFromContainer(player.Backpack)
					cacheToolsFromContainer(char)
					cachedTools[player] = tools

					-- Кешируем BasePart для инструментов игрока
					local toolPartsMap = {}
					for _, tool in ipairs(tools) do
						local toolParts = {}
						for _, part in ipairs(tool:GetDescendants()) do
							if part:IsA("BasePart") then
								table.insert(toolParts, part)
							end
						end
						toolPartsMap[tool] = toolParts
					end
					cachedToolParts[player] = toolPartsMap
				end
			end
		end

		local function storeToolProperties(player, part)
			originalToolProperties[player] = originalToolProperties[player] or {}
			if originalToolProperties[player][part] == nil then
				originalToolProperties[player][part] = {
					CanCollide = part.CanCollide,
				}
			end
		end

		local function disableCharacterCollision()
			for player, parts in pairs(cachedCharacterParts) do
				for _, part in ipairs(parts) do
					if part.CanCollide then
						part.CanCollide = false
					end
				end
			end
		end

		local function disableToolCollision()
			for player, toolPartsMap in pairs(cachedToolParts) do
				for tool, parts in pairs(toolPartsMap) do
					for _, part in ipairs(parts) do
						storeToolProperties(player, part)
						if part.CanCollide then
							part.CanCollide = false
						end
					end
				end
			end
		end

		local function restoreToolProperties()
			for player, partsMap in pairs(originalToolProperties) do
				for part, props in pairs(partsMap) do
					if part and part:IsA("BasePart") then
						if part.CanCollide ~= props.CanCollide then
							part.CanCollide = props.CanCollide
						end
					end
				end
			end
			originalToolProperties = {}
		end

		local function periodicCacheUpdate()
			cachePlayers()
		end

		function ModuleEffect.Enable()
			if isActive then return end
			isActive = true

			local parent = script
			for _ = 1, 3 do
				parent = parent.Parent or parent
			end
			bypassValue = parent and parent:FindFirstChild("Bypass1")

			cachePlayers()

			-- Обновляем кеш раз в 1 секунду (было 0.5, можно увеличить для экономии)
			spawn(function()
				while isActive do
					periodicCacheUpdate()
					wait(5)
				end
			end)

			steppedConnection = RunService.Stepped:Connect(function()
				if not isActive then return end

				disableCharacterCollision()

				if bypassValue and bypassValue:IsA("BoolValue") and bypassValue.Value then
					disableToolCollision()
				else
					restoreToolProperties()
				end
			end)
		end

		function ModuleEffect.Disable()
			if not isActive then return end
			isActive = false

			if steppedConnection then
				steppedConnection:Disconnect()
				steppedConnection = nil
			end

			restoreToolProperties()
			originalToolProperties = {}
			cachedCharacters = {}
			cachedTools = {}
			cachedCharacterParts = {}
			cachedToolParts = {}
		end

		return ModuleEffect

	end;
};
G2L_MODULES[G2L["717"]] = {
	Closure = function()
		local script = G2L["717"];local ModuleEffect = {}
		local hiddenfling = false
		local flingThread
		local originalVelocity
		local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local RunService = game:GetService("RunService")
		local Players = game:GetService("Players")
		local player = Players.LocalPlayer

		local debugEnabled = script.Parent.Parent.Parent:WaitForChild("debug")
		local power = script.Parent.Parent.Parent:WaitForChild("power")
		local flingForce = power.Value
		local upwardForce = power.Value
		local flingCooldown = 0.5

		local touchedConnection
		local touchedModels = {} -- ⭐ Добавлено: таблица для отслеживания уже задетых моделей

		-- Декаль
		local decalName = "juisdfj0i32i0eidsuf0iok"
		if not ReplicatedStorage:FindFirstChild(decalName) then
			local detection = Instance.new("Decal")
			detection.Name = decalName
			detection.Parent = ReplicatedStorage
		end

		-- Обновление силы
		power.Changed:Connect(function(newValue)
			flingForce = newValue
			upwardForce = newValue
		end)

		-- Проверка отлёта
		local function checkDistanceAndDebug(model, originPos)
			local humanoidRoot = model:FindFirstChild("HumanoidRootPart")
			if not humanoidRoot then return end

			task.delay(2, function()
				if not humanoidRoot.Parent then return end
				local distance = (humanoidRoot.Position - originPos).Magnitude
				if distance > 25 then
					if debugEnabled.Value then
						msg.Enabled("Fling", "Flinged", 1.5)
					end
				else
					if debugEnabled.Value then
						msg.error("Fling", "Attempt exhausted", 1.5)
					end
				end

				-- ✅ Сброс для повторной обработки
				touchedModels[model] = nil
			end)
		end

		-- Функция флинга
		local function fling()
			while hiddenfling do
				RunService.Heartbeat:Wait()

				local c = player.Character
				local hrp = c and c:FindFirstChild("HumanoidRootPart")

				if hrp then
					originalVelocity = originalVelocity or hrp.Velocity

					local vel = hrp.Velocity
					local newVelocity = vel * flingForce + Vector3.new(0, upwardForce, 0)
					hrp.Velocity = newVelocity

					RunService.RenderStepped:Wait()
					hrp.Velocity = vel
					RunService.Stepped:Wait()
					hrp.Velocity = vel + Vector3.new(0, flingCooldown, 0)
				end
			end
		end


		-- Запуск
		function ModuleEffect.start()
			if hiddenfling then return end
			hiddenfling = true
			flingThread = task.spawn(fling)

			local char = player.Character or player.CharacterAdded:Wait()
			local hrp = char:WaitForChild("HumanoidRootPart")

			touchedConnection = hrp.Touched:Connect(function(hit)
				local model = hit:FindFirstAncestorOfClass("Model")
				if not model or model == char then return end
				if not model:FindFirstChildOfClass("Humanoid") then return end
				if touchedModels[model] then return end -- ⭐ Уже обработан — пропускаем

				local root = model:FindFirstChild("HumanoidRootPart")
				if not root then return end

				touchedModels[model] = true -- ⭐ Помечаем как обработанный

				if debugEnabled.Value then
					msg.info("Fling", "Trying to fling", 1.5)
				end

				checkDistanceAndDebug(model, root.Position)
			end)
		end

		-- Остановка
		function ModuleEffect.stop()
			if not hiddenfling then return end
			hiddenfling = false

			if flingThread then
				task.cancel(flingThread)
				flingThread = nil
			end

			if touchedConnection then
				touchedConnection:Disconnect()
				touchedConnection = nil
			end

			local c = player.Character
			local hrp = c and c:FindFirstChild("HumanoidRootPart")
			if hrp and originalVelocity then
				hrp.Velocity = originalVelocity
			end

			touchedModels = {} -- ✅ Очистка при остановке
		end

		function ModuleEffect.setCooldown(newCooldown)
			flingCooldown = newCooldown
		end

		return ModuleEffect

	end;
};
G2L_MODULES[G2L["75e"]] = {
	Closure = function()
		local script = G2L["75e"];local Freecam = {}
		local RunService = game:GetService("RunService")
		local Players = game:GetService("Players")
		local Workspace = game:GetService("Workspace")

		local player = Players.LocalPlayer
		local character
		local humanoid
		local rootPart
		local enabled = false

		-- Рекурсивный поиск Humanoid
		local function findHumanoid(parent)
			for _, child in ipairs(parent:GetChildren()) do
				if child:IsA("Humanoid") then
					return child
				else
					local humanoidFound = findHumanoid(child)
					if humanoidFound then
						return humanoidFound
					end
				end
			end
			return nil
		end

		-- Обновление character, humanoid и rootPart
		local function updateCharacter()
			character = player.Character or player.CharacterAdded:Wait()
			humanoid = findHumanoid(character)
			rootPart = character:FindFirstChild("HumanoidRootPart")
		end

		-- Проверка на земле
		local function onGround()
			if not humanoid then return false end
			local state = humanoid:GetState()
			return state ~= Enum.HumanoidStateType.Freefall and state ~= Enum.HumanoidStateType.Seated
		end

		-- Проверка свободного пространства над препятствием
		local function isHeadClear(position, height)
			local rayParams = RaycastParams.new()
			rayParams.FilterDescendantsInstances = {character}
			rayParams.FilterType = Enum.RaycastFilterType.Blacklist
			local result = Workspace:Raycast(position, Vector3.new(0, humanoid.HipHeight * 2 + 0.5, 0), rayParams)
			return result == nil
		end

		-- Автопрыжок
		local function autoJump()
			-- если гуманоид или rootPart потеряны, обновляем их
			if not humanoid or not rootPart or not character or not character.Parent then
				updateCharacter()
			end

			if not humanoid or not rootPart then return end
			if not onGround() then return end

			local forward = rootPart.CFrame.LookVector
			local rayParams = RaycastParams.new()
			rayParams.FilterDescendantsInstances = {character}
			rayParams.FilterType = Enum.RaycastFilterType.Blacklist

			local offsets = {-1, -0.5, 0, 0.5, 1}
			local levels = {0.5, 1, 1.5, 2} -- проверяем даже маленькие препятствия
			local jumpTriggered = false

			for _, offset in ipairs(offsets) do
				if jumpTriggered then break end
				for _, level in ipairs(levels) do
					local origin = rootPart.Position + Vector3.new(0, level, 0) + rootPart.CFrame.RightVector * offset
					local result = Workspace:Raycast(origin, forward * 3, rayParams)
					if result then
						local obstacleHeight = result.Position.Y - rootPart.Position.Y
						local maxStepHeight = humanoid.HipHeight + 4
						local minStepHeight = 0.5
						if obstacleHeight >= minStepHeight and obstacleHeight <= maxStepHeight then
							local headPosition = rootPart.Position + Vector3.new(0, humanoid.HipHeight * 2, 0) + forward * 3
							if isHeadClear(headPosition, obstacleHeight) then
								humanoid.Jump = true
								jumpTriggered = true
								break
							end
						end
					end
				end
			end
		end

		function Freecam.start()
			if enabled then return end
			enabled = true
			Freecam.connection = RunService.RenderStepped:Connect(function()
				if enabled then
					autoJump()
				end
			end)
			return true
		end

		function Freecam.stop()
			if not enabled then return end
			enabled = false
			if Freecam.connection then
				Freecam.connection:Disconnect()
				Freecam.connection = nil
			end
			return true
		end

		return Freecam

	end;
};
-- StarterGui.xescriptsXD.LocalScript
local function C_2()
	local script = G2L["2"];
	local teleportCode = [[
	    if not getgenv().XEScriptsLoaded then
	        getgenv().XEScriptsLoaded = true
	        loadstring(game:HttpGet("https://raw.githubusercontent.com/XEScripts/XEScripts-Global/refs/heads/main/script"))()
	    end
	]]

	local queueFunc = queue_on_teleport or 
		(syn and syn.queue_on_teleport) or 
		(fluxus and fluxus.queue_on_teleport) or 
		(KRNL and KRNL.QueueOnTeleport) or
		(secure_load and secure_load.queue_on_teleport) or
		(getgenv() and getgenv().queue_on_teleport) or
		(queue_on_teleport) -- на всякий fallback

	if queueFunc then
		local success, err = pcall(function()
			queueFunc(teleportCode)
		end)
		if not success then
			warn("error!!: "..tostring(err))
		end
	else
		warn("error: queue_on_teleport")
	end

end;
task.spawn(C_2);
-- StarterGui.xescriptsXD.antitranslate
local function C_3()
	local script = G2L["3"];
	local parent = script.Parent

	local function disableAutoLocalize(obj)
		-- Проверяем, есть ли свойство AutoLocalize у объекта
		if obj:IsA("GuiObject") or obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("TextBox") then
			if obj:FindFirstChild("AutoLocalize") ~= nil or obj.AutoLocalize ~= nil then
				pcall(function()
					obj.AutoLocalize = false
				end)
			end
		end

		-- Рекурсивно обрабатываем всех потомков
		for _, child in ipairs(obj:GetChildren()) do
			disableAutoLocalize(child)
		end
	end

	disableAutoLocalize(parent)

end;
task.spawn(C_3);
-- StarterGui.xescriptsXD.OpenButton.dragscript
local function C_5()
	local script = G2L["5"];
	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.15
	local dragStart = nil
	local startPos = nil

	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end

	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end;
task.spawn(C_5);
-- StarterGui.xescriptsXD.OpenButton.LocalScript
local function C_6()
	local script = G2L["6"];
	local modulescript = require(script.Parent.Parent.Storage:WaitForChild("a"))
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")


	local function showCoreMessage(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title;
			Text = text;
			Duration = 3;
		})
	end


	script.Parent.MouseButton1Click:Connect(function()
		if modulescript then
			if modulescript.enabledd == false then
				script.Parent.Parent.KeyLogger.Visible = not script.Parent.Parent.KeyLogger.Visible
			else
				script.Parent.Parent.Frame.Visible = not script.Parent.Parent.Frame.Visible
			end
		else
			showCoreMessage("XEScripts", "Do not try to hack this script.")
			script.Parent.Parent:Destroy()
		end
	end)


	RunService.RenderStepped:Connect(function()
		if not modulescript then
			showCoreMessage("XEScripts", "Do not try to hack this script.")
			script.Parent.Parent.Parent:Destroy()
		elseif script.Parent.Parent.Frame.Visible and modulescript.enabledd == false and modulescript then
			showCoreMessage("XEScripts", "Do not try to hack this script.")
			script.Parent.Parent.Parent:Destroy()
		elseif script.Parent.Parent.Frame.Visible and modulescript.enabledd == true and modulescript then
			return
		end
	end)
end;
task.spawn(C_6);
-- StarterGui.xescriptsXD.Storage.LocalScript
local function C_16()
	local script = G2L["16"];
	local soundId = "rbxassetid://104184340183231"
	local enabledValue = script.Parent:FindFirstChild("Enabled")

	local sound = Instance.new("Sound")
	sound.SoundId = soundId
	sound.Volume = 0.6
	sound.Name = "sfxclick"
	sound.Parent = workspace
	sound.Archivable = false
	sound.Looped = false

	sound.Loaded:Wait()

	local function playClickSound()
		if enabledValue and enabledValue.Value then
			sound:Play()
		end
	end

	local function connectButtons(root)
		for _, child in ipairs(root:GetDescendants()) do
			if child:IsA("TextButton") then
				child.MouseButton1Click:Connect(playClickSound)
			end
		end
	end

	connectButtons(script.Parent.Parent)

end;
task.spawn(C_16);
-- StarterGui.xescriptsXD.Storage.Console.LocalScript
local function C_19()
	local script = G2L["19"];
	local values = script.Parent:FindFirstChild("Values")
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local msg = require(script.Parent.Parent.message)

	-- Обновленные переменные
	local TeamCheck, AimPart, Sensitivity, MaxDistance, FovCheck, FovRadius, CheckAlive, ActivateValue, PredictionMove, Predict, AutoPredict, PredictSpeed, Bypass
	local BlackList, Smoothness, SortBy, AvoidBehind, WallCheck, CircleColor, IfFovCircle, TargetHud, TargetEsp, TargetEspp, AutoShoot, OneTarget, PredictOffset, SilentAimMD, SilentAim
	local ToggleKey, ThicknessCircle, TransparencyCircle = Enum.KeyCode[values.ToggleKey.Value], 1, 0.5

	-- Присваиваем начальные значения
	local function UpdateVariables()
		TeamCheck = values.TeamCheck.Value
		AimPart = values.AimPart.Value
		Sensitivity = values.Smoothness.Value
		MaxDistance = values.MaxDistance.Value
		FovCheck = values.FovCheck.Value
		FovRadius = values.FovRadius.Value
		CheckAlive = values.CheckAlive.Value
		BlackList = values.BlackList.Value and string.split(values.BlackList.Value, ",") or {}
		Smoothness = tonumber(values.Smoothness.Value) or 1  -- Преобразуем в число, если нужно
		SortBy = values.SortBy.Value
		ToggleKey = Enum.KeyCode[values.ToggleKey.Value]
		AvoidBehind = values.AvoidBehind.Value
		WallCheck = values.WallCheck.Value
		CircleColor = values.CircleColor.Value
		IfFovCircle = values.IfFovCircle.Value
		ThicknessCircle = values.Thickness.Value
		TransparencyCircle = values.TransparencyCircle.Value
		TargetHud = values.TargetHud.Value
		TargetEsp = values.TargetESP.Value
		TargetEspp = values.TargetEspp.Value
		ActivateValue = values.ActivateValue.Value
		PredictionMove = values.PredictionMove.Value
		Predict = tonumber(values.Predict.Value)
		AutoPredict = values.AutoPrediction.Value
		PredictSpeed = values.PredictSpeed.Value
		PredictOffset = values.PredictOffset.Value
		OneTarget = values.OneTarget.Value
		Bypass = values.Bypass.Value
		SilentAim = values.SilentAim.Value
		SilentAimMD = values.SilentAimMode.Value
		AutoShoot = values.AutoShoot.Value
	end


	local targethudtemplate = script.Parent.Parent.Assets.TargetHud.TargetHud1
	local targetesptemplate = script.Parent.Parent.Assets.TargetESP.TargetESP1



	local targethudhealth = targethudtemplate.Health
	local targethudtarget = targethudtemplate.Target.ImageLabel
	local targethudnickname = targethudtemplate.Nickname


	targethudtemplate.Visible = false
	local cloneedd = script.Parent.Parent.Assets.TargetESP.TargetESP1:Clone()

	local TweenService = game:GetService("TweenService")

	local function AnimateHealth(targetHealth, maxHealth)
		local lastHealth = targetHealth  -- Инициализируем переменную для отслеживания предыдущего здоровья
		-- Начальный размер шкалы здоровья
		local initialSizeX = 0.641
		local initialSizeY = 0.369

		-- Рассчитываем новый размер в зависимости от текущего здоровья
		local newScale = math.clamp(targetHealth / maxHealth, 0, 1)  -- нормализуем здоровье от 0 до 1
		local newSizeX = initialSizeX * newScale  -- вычисляем новую ширину пропорционально здоровью

		-- Анимация изменения размера шкалы здоровья
		local tweenInfoHealth = TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
		local tweenHealth = TweenService:Create(targethudtemplate.Health, tweenInfoHealth, {
			Size = UDim2.new(newSizeX, 0, initialSizeY, 0)  -- Устанавливаем новый размер
		})
		tweenHealth:Play()

		-- Проверяем, уменьшилось ли здоровье
		if targetHealth < lastHealth then
			-- Если здоровье уменьшилось, меняем цвет
			local targetColor = Color3.fromRGB(181, 181, 181)  -- Серый цвет
			local tweenInfoColor = TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
			local tweenColor = TweenService:Create(targethudtarget, tweenInfoColor, {
				ImageColor3 = targetColor  -- Меняем цвет на серый
			})
			tweenColor:Play()
		end

		-- Обновляем последнее значение здоровья
		lastHealth = targetHealth
	end



	-- Функция для обновления TargetHud
	local function UpdateTargetHud(targetPlayer)
		if not targetPlayer or not targetPlayer.Character then
			targethudtemplate.Visible = false
			return
		end

		-- Получаем humanoid цели
		local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")

		if humanoid then
			-- Обновляем HUD
			targethudtemplate.Visible = true
			targethudtemplate.Nickname.Text = targetPlayer.Name -- Настоящий ник, не дисплейный

			-- Получаем здоровье цели
			AnimateHealth(humanoid.Health, humanoid.MaxHealth)
		else
			return
		end

		-- Устанавливаем аватар цели
		local userId = targetPlayer.UserId

		-- Используем API Roblox для получения аватара
		local success, avatarImageUrl = pcall(function()
			return "https://www.roblox.com/headshot-thumbnail/image?userId=" .. userId .. "&width=420&height=420&format=png"
		end)

		-- Если запрос прошёл успешно, устанавливаем аватар
		if success and avatarImageUrl then
			targethudtemplate.Target.ImageLabel.Image = avatarImageUrl
		end
	end


	local function updateesp()
		local value = values.TargetEspp
		-- Если значение не изменилось, нет смысла делать клон
		if cloneedd then
			-- Проверяем тип ESP и обновляем клон только если необходимо
			if value.Value == "TargetESP1" and cloneedd.Name ~= "TargetESP1" then
				cloneedd:Destroy()
				cloneedd = nil
				cloneedd = script.Parent.Parent.Assets.TargetESP.TargetESP1:Clone()
			elseif value.Value == "TargetESP2" and cloneedd.Name ~= "TargetESP2" then
				cloneedd:Destroy()
				cloneedd = nil
				cloneedd = script.Parent.Parent.Assets.TargetESP.TargetESP2:Clone()
			elseif value.Value == "TargetESP3" and cloneedd.Name ~= "TargetESP3" then
				cloneedd:Destroy()
				cloneedd = nil
				cloneedd = script.Parent.Parent.Assets.TargetESP.TargetESP3:Clone()
			elseif value.Value == "TargetESP4" and cloneedd.Name ~= "TargetESP4" then
				cloneedd:Destroy()
				cloneedd = nil
				cloneedd = script.Parent.Parent.Assets.TargetESP.TargetESP4:Clone()
			end
		end
	end



	-- Обновляем переменные при каждом вызове RenderStepped
	RunService.RenderStepped:Connect(function()
		UpdateVariables()
	end)

	local Enabled = false
	local currentTarget = nil -- Текущая зафиксированная цель
	local FovCircle, FovGuiii = nil, nil

	local function updatehud()
		local value = values.TargetHudd
		-- Если значение не изменилось, нет смысла делать клон
		if targethudtemplate then
			if Enabled == true then
				if value.Value == "TargetHUD1" and cloneedd.Name ~= "TargetHUD1" then
					targethudtemplate.Visible = false
					targethudtemplate = nil
					targethudtemplate = script.Parent.Parent.Assets.TargetHud.TargetHud1
					targethudtemplate.Visible = true
				elseif value.Value == "TargetHUD2" and cloneedd.Name ~= "TargetHUD2" then
					targethudtemplate.Visible = false
					targethudtemplate = nil
					targethudtemplate = script.Parent.Parent.Assets.TargetHud.TargetHud2
					targethudtemplate.Visible = true
				end
			end
		end
	end

	local CurrentCamera = workspace.CurrentCamera

	-- автообновление при смене камеры
	workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		CurrentCamera = workspace.CurrentCamera
	end)

	-- универсальная функция получения позиции камеры
	local function GetCameraPosition()
		if CurrentCamera and CurrentCamera.CFrame then
			return CurrentCamera.CFrame.Position
		end
		-- запасной вариант (например, если камера заменена на кастомный объект)
		if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Head") then
			return game.Players.LocalPlayer.Character.Head.Position
		end
		return Vector3.new(0, 0, 0) -- fallback, если вообще ничего нет
	end

	-- универсальная функция получения CFrame камеры
	local function GetCameraCFrame()
		if CurrentCamera and CurrentCamera.CFrame then
			return CurrentCamera.CFrame
		end
		return CFrame.new(GetCameraPosition())
	end


	-- Подключение сервисов
	local Camera = workspace.CurrentCamera
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")
	local LocalPlayer = Players.LocalPlayer
	local modelll = require(script.Parent.Parent.a)

	local Holding = false

	local function CreateFovCircle()
		if not Enabled then return end
		if FovCircle then FovCircle:Destroy() end
		if not IfFovCircle then return end

		local screenGui = script.Parent.Parent.FivCorcleGki:Clone()
		screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
		screenGui.Enabled = true

		FovGuiii = screenGui

		FovCircle = screenGui:FindFirstChild("Frame")
		FovCircle.Parent = screenGui
		FovCircle.Size = UDim2.new(0, FovRadius * 2, 0, FovRadius * 2)

		-- центрируем фрейм относительно мыши
		FovCircle.AnchorPoint = Vector2.new(0.5, 0.5)
		FovCircle.BackgroundTransparency = 1

		local stroke = FovCircle:FindFirstChild("UIStroke") or screenGui.Frame:FindFirstChild("UIStroke")
		stroke.Thickness = ThicknessCircle
		stroke.Transparency = TransparencyCircle
		stroke.Color = CircleColor
		stroke.Parent = FovCircle
	end

	local GuiService = game:GetService("GuiService")

	RunService.RenderStepped:Connect(function()
		if not Enabled then return end
		if FovCircle then
			local mousePos = UserInputService:GetMouseLocation()
			local topLeftInset = GuiService:GetGuiInset()

			-- Центрируем круг по курсору с учётом инсета сверху
			FovCircle.Position = UDim2.new(0, mousePos.X, 0, mousePos.Y - topLeftInset.Y)
		end
	end)

	-- Обновление параметров FovCircle
	local function UpdateFovCircle()
		if not FovCircle then return end
		FovCircle.Size = UDim2.new(0, FovRadius * 2, 0, FovRadius * 2)
		FovCircle.UIStroke.Thickness = ThicknessCircle
		FovCircle.UIStroke.Transparency = TransparencyCircle
		FovCircle.UIStroke.Color = CircleColor
	end


	local function IsBehind(player)
		-- Проверяем, существует ли цель и её персонаж
		if not player or not player.Character or not player.Character:FindFirstChild(AimPart) then
			return false
		end

		-- Получаем позицию цели
		local targetPosition = player.Character[AimPart].Position

		-- Направление от камеры к цели
		local toTarget = (targetPosition - Camera.CFrame.Position).unit

		-- Проверяем, находится ли цель за камерой
		return Camera.CFrame.LookVector:Dot(toTarget) < 0
	end

	-- Проверка, за стеной ли игрок
	local function IsPlayerBehindWall(player, attempts)
		attempts = attempts or 0
		if attempts > 3 then return true end -- Предотвращение бесконечной рекурсии

		if not Enabled or not AimPart then return false end
		local character = player.Character
		if not character then return false end
		local targetPart = character:FindFirstChild(AimPart)
		if not targetPart then return false end

		local origin = Camera.CFrame.Position
		local direction = (targetPart.Position - origin).Unit * 1000
		local ignoreList = {LocalPlayer.Character}

		for _, p in ipairs(Players:GetPlayers()) do
			if p ~= LocalPlayer and p ~= player and p.Character then
				table.insert(ignoreList, p.Character)
			end
		end

		local rayParams = RaycastParams.new()
		rayParams.IgnoreWater = true
		rayParams.FilterType = Enum.RaycastFilterType.Blacklist
		rayParams.FilterDescendantsInstances = ignoreList

		local result = workspace:Raycast(origin, direction, rayParams)

		if not result then return false end

		local hitPart = result.Instance
		local hitParent = hitPart.Parent

		if hitParent == player.Character or hitParent:IsDescendantOf(player.Character) then
			return false
		elseif hitPart:IsA("Accessory") or hitPart:IsA("ParticleEmitter") or hitPart:IsA("Trail") or hitPart:IsA("Beam") then
			table.insert(ignoreList, hitParent)
			return IsPlayerBehindWall(player, attempts + 1)
		end

		return true
	end


	local function GetCircleCenter(circle)
		return Vector2.new(
			circle.AbsolutePosition.X + circle.Size.X.Offset / 2,
			circle.AbsolutePosition.Y + circle.Size.Y.Offset / 2
		)
	end

	function IsInFovCircle(targetPlayer)
		local character = targetPlayer.Character
		if not character then return false end
		local hrp = character:FindFirstChild("HumanoidRootPart")
		if not hrp then return false end

		local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
		if not onScreen then return false end

		-- Получаем центр экран��
		local centerX = Camera.ViewportSize.X / 2
		local centerY = Camera.ViewportSize.Y / 2

		-- Вычисляем расстояние от центра экрана до позиции игрока на экране
		local dx = screenPos.X - centerX
		local dy = screenPos.Y - centerY
		local dist = math.sqrt(dx*dx + dy*dy)

		return dist <= FovRadius
	end


	local BlackListt = {}

	local function UpdateBlackList()
		BlackListt = {}  -- Очищаем текущий список
		if values.BlackList and values.BlackList.Value ~= "" then
			for name in values.BlackList.Value:gmatch("[^,%s]+") do
				BlackListt[name] = true  -- Добавляем в set
			end
		end
	end

	UpdateBlackList()

	RunService.RenderStepped:Connect(function()
		UpdateBlackList()
	end)

	-- Функция для проверки, в BlackList ли игрок
	local function IsBlacklisted(player)
		return BlackListt[player.Name] == true
	end

	local lockedTarget = nil  -- Зафиксированная цель

	local function GetSortedPlayers()
		local sortedPlayers = {}

		for _, v in ipairs(Players:GetPlayers()) do
			if v == LocalPlayer or IsBlacklisted(v) then warn("1") end
			if TeamCheck and v.Team == LocalPlayer.Team then warn("1") end

			local char = v.Character
			if not char then warn("1") end

			-- ищем корневую часть (универсально для кастомных персонажей)
			local rootPart = char:FindFirstChild("HumanoidRootPart") 
				or char:FindFirstChild("UpperTorso") 
				or char:FindFirstChild("Torso") 
				or char:FindFirstChild("Head")

			-- ищем любой Humanoid-подобный объект
			local humanoid = char:FindFirstChildWhichIsA("Humanoid")

			if not rootPart or not humanoid or (CheckAlive and humanoid.Health <= 0) then warn("1") end

			local distance = (rootPart.Position - GetCameraPosition()).Magnitude
			if MaxDistance and distance > MaxDistance then warn("1") end

			table.insert(sortedPlayers, {
				Player = v,
				Character = char,
				Distance = distance,
				Health = humanoid.Health,
				InFov = IsInFovCircle(v) and 1 or 0
			})
		end

		local sortFunctions = {
			Distance = function(a, b) return a.Distance < b.Distance end,
			Health = function(a, b) return a.Health < b.Health end,
			Smart = function(a, b)
				if a.InFov ~= b.InFov then return a.InFov > b.InFov end
				if a.Health ~= b.Health then return a.Health < b.Health end
				return a.Distance < b.Distance
			end
		}

		if SortBy == "Random" and #sortedPlayers > 0 then
			currentTarget = sortedPlayers[math.random(1, #sortedPlayers)].Player
			return {currentTarget}
		elseif sortFunctions[SortBy] then
			table.sort(sortedPlayers, sortFunctions[SortBy])
		end

		currentTarget = #sortedPlayers > 0 and sortedPlayers[1].Player or nil
		return sortedPlayers
	end

	-- Функция блокировки цели (как в Minecraft читах)
	local function LockTarget()
		if lockedTarget and lockedTarget.Parent and lockedTarget.Character then
			local humanoid = lockedTarget.Character:FindFirstChildOfClass("Humanoid")
			local rootPart = lockedTarget.Character:FindFirstChild("HumanoidRootPart")

			if humanoid and humanoid.Health > 0 and rootPart then
				return lockedTarget  -- Возвращаем зафиксированную цель
			else
				-- Автоматический сброс если цель умерла или недоступна
				lockedTarget = nil
			end
		end
		return nil
	end

	-- Функция поиска и фиксации новой цели
	local function FindAndLockTarget()
		local sortedPlayers = GetSortedPlayers()

		for _, info in ipairs(sortedPlayers) do
			local plr = info.Player
			if plr ~= LocalPlayer and not IsBlacklisted(plr)
				and (not FovCheck or IsInFovCircle(plr))
				and (not AvoidBehind or not IsBehind(plr))
				and (not WallCheck or not IsPlayerBehindWall(plr)) then

				lockedTarget = plr
				return plr
			end
		end

		return nil
	end

	local function GetBodyPart(character, partName)
		local part = character:FindFirstChild(partName)
		if part then
			return part
		end

		-- Для R6
		if partName == "Head" then
			return character:FindFirstChild("Head")
		elseif partName == "HumanoidRootPart" then
			return character:FindFirstChild("HumanoidRootPart")
		end

		return nil
	end

	UserInputService.InputBegan:Connect(function(Input)
		if ActivateValue and Enabled then
			if ActivateValue == "LMB" then
				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					Holding = true
				end
			elseif ActivateValue == "RMB" then
				if Input.UserInputType == Enum.UserInputType.MouseButton2 then
					Holding = true
				end
			end
		end
	end)

	RunService.RenderStepped:Connect(function()
		if Enabled then
			if ActivateValue == "Always" then
				Holding = true
			end
		end
	end)

	UserInputService.InputEnded:Connect(function(Input)
		if ActivateValue and Enabled then
			if ActivateValue == "LMB" then
				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					Holding = false
				end
			elseif ActivateValue == "RMB" then
				if Input.UserInputType == Enum.UserInputType.MouseButton2 then
					Holding = false
				end
			end
		end
	end)

	local function GetDistanceBetweenPoints(point1, point2)
		return (point1 - point2).Magnitude
	end

	local smoothingData = {}

	local function GetPingPrediction()
		local ping = 0
		pcall(function()
			ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue()
		end)

		local pingSeconds = math.clamp(ping / 1000, 0.01, 0.3)
		return pingSeconds * 0.8
	end

	local function GetAdjustedPredictionValue(distance, targetPart)
		local minDistance = 1
		local maxDistance = 350

		local normalizedDistance = math.clamp((distance - minDistance) / (maxDistance - minDistance), 0, 1)
		local basePrediction = 0.008 + (normalizedDistance * 0.45)

		if targetPart and targetPart.Parent then
			local character = targetPart.Parent
			local rootPart = character:FindFirstChild("HumanoidRootPart")
			local humanoid = character:FindFirstChildOfClass("Humanoid")

			if rootPart and humanoid then
				local playerId = character.Name

				if not smoothingData[playerId] then
					smoothingData[playerId] = {
						velocity = Vector3.zero,
						moveDirection = Vector3.zero,
						predictionValue = basePrediction,
						lastUpdate = tick(),
						velocityBuffer = {},
						directionBuffer = {}
					}
				end

				local data = smoothingData[playerId]
				local currentTime = tick()
				local deltaTime = math.clamp(currentTime - data.lastUpdate, 0.001, 0.1)

				-- Сглаживание скорости
				local currentVelocity = rootPart.AssemblyLinearVelocity or Vector3.zero
				table.insert(data.velocityBuffer, 1, currentVelocity)
				if #data.velocityBuffer > 5 then table.remove(data.velocityBuffer) end

				local avgVelocity = Vector3.zero
				for _, vel in ipairs(data.velocityBuffer) do
					avgVelocity = avgVelocity + vel
				end
				avgVelocity = avgVelocity / #data.velocityBuffer

				local smoothingFactor = math.clamp(deltaTime * 10, 0.05, 0.5)
				data.velocity = data.velocity:Lerp(avgVelocity, smoothingFactor)

				-- Сглаживание направления
				local currentMoveDir = humanoid.MoveDirection
				table.insert(data.directionBuffer, 1, currentMoveDir)
				if #data.directionBuffer > 5 then table.remove(data.directionBuffer) end

				local avgDirection = Vector3.zero
				for _, dir in ipairs(data.directionBuffer) do
					avgDirection = avgDirection + dir
				end
				avgDirection = avgDirection / #data.directionBuffer

				data.moveDirection = data.moveDirection:Lerp(avgDirection, smoothingFactor)

				local velocity = data.velocity
				local moveDirection = data.moveDirection
				local walkSpeed = humanoid.WalkSpeed or 16

				-- Модификатор скорости
				local speedMultiplier = 1
				local velocityMag = velocity.Magnitude
				if velocityMag > 3 then
					local speedRatio = velocityMag / walkSpeed
					if speedRatio > 1.2 then
						speedMultiplier = math.lerp(1, 1.6, math.clamp((speedRatio - 1.2) / 0.8, 0, 1))
					elseif speedRatio < 0.8 then
						speedMultiplier = math.lerp(1, 0.4, math.clamp((0.8 - speedRatio) / 0.6, 0, 1))
					end
				else
					speedMultiplier = 0.3
				end

				-- Модификатор направления
				local directionMultiplier = 1
				if velocityMag > 4 then
					local cameraPos = game.Workspace.CurrentCamera.CFrame.Position
					local toCamera = (cameraPos - rootPart.Position).Unit
					local velocityDir = velocity.Unit
					local dot = velocityDir:Dot(toCamera)

					if dot > 0.4 then
						directionMultiplier = 0.5
					elseif dot < -0.4 then
						directionMultiplier = 1.5
					else
						local sideDot = math.abs(velocityDir:Dot(toCamera:Cross(Vector3.new(0,1,0))))
						if sideDot > 0.7 then directionMultiplier = 1.2 end
					end
				end

				-- Стрейфинг
				local strafeMultiplier = 1
				if moveDirection.Magnitude > 0.7 then
					local moveX = math.abs(moveDirection.X)
					local moveZ = math.abs(moveDirection.Z)
					if moveX > 0.5 and moveZ > 0.5 then
						strafeMultiplier = 1.4
					elseif moveX > 0.8 or moveZ > 0.8 then
						strafeMultiplier = 0.9
					end
				end

				local closeRangeMultiplier = 0.2
				if distance < 25 then 
					closeRangeMultiplier = 0.01
				elseif distance < 50 then 
					closeRangeMultiplier = 0.05
				elseif distance < 100 then 
					closeRangeMultiplier = 0.1
				elseif distance > 200 then 
					closeRangeMultiplier = 0.2
				end

				-- Финальная предикция (уменьшена в 2 раза)
				local newPrediction = basePrediction * speedMultiplier * directionMultiplier * strafeMultiplier * closeRangeMultiplier
				newPrediction = newPrediction * 0.15

				data.predictionValue = math.lerp(data.predictionValue, newPrediction, smoothingFactor)
				data.lastUpdate = currentTime

				return math.clamp(data.predictionValue, 0.002, 0.7)
			end
		end

		return math.clamp(basePrediction * 0.5, 0.002, 0.7)
	end

	local function GetPredictedPosition(targetPart, predictionValue)
		if not targetPart or not targetPart:IsA("BasePart") then return nil end

		local character = targetPart.Parent
		if not character or not character:IsA("Model") then return targetPart.Position end

		local rootPart = character:FindFirstChild("HumanoidRootPart")
		local humanoid = character:FindFirstChildOfClass("Humanoid")
		local basePosition = targetPart.Position

		if not rootPart or not humanoid then return basePosition end

		if (PredictionMove or AutoPredict) then
			local playerId = character.Name
			local velocity = Vector3.zero
			if smoothingData[playerId] then
				velocity = smoothingData[playerId].velocity
			else
				velocity = rootPart.AssemblyLinearVelocity or Vector3.zero
			end

			local distance = (game.Workspace.CurrentCamera.CFrame.Position - basePosition).Magnitude
			local smartPrediction = GetAdjustedPredictionValue(distance, targetPart)
			local pingPrediction = GetPingPrediction()
			local totalPrediction = (Predict or 0) + (predictionValue or 0) + smartPrediction + pingPrediction

			-- Используем только горизонтальную скорость
			local horizontalVelocity = Vector3.new(velocity.X, 0, velocity.Z)
			local predictedPosition = basePosition + horizontalVelocity * totalPrediction

			-- Паттерн движения по горизонтали
			if smoothingData[playerId] and smoothingData[playerId].moveDirection.Magnitude > 0.3 then
				local horizontalMoveDir = Vector3.new(smoothingData[playerId].moveDirection.X, 0, smoothingData[playerId].moveDirection.Z)
				local walkSpeed = humanoid.WalkSpeed or 16
				local patternPrediction = horizontalMoveDir * walkSpeed * totalPrediction * 0.15

				if math.abs(horizontalMoveDir.X) > 0.5 and math.abs(horizontalMoveDir.Z) > 0.5 then
					patternPrediction = patternPrediction * 1.2
				end

				predictedPosition = predictedPosition + patternPrediction
			end

			return predictedPosition
		end

		return basePosition
	end


	-- Функция очистки старых данных (вызывай периодически)
	local function CleanupSmoothingData()
		local currentTime = tick()
		for playerId, data in pairs(smoothingData) do
			if currentTime - data.lastUpdate > 5 then -- удаляем данные старше 5 секунд
				smoothingData[playerId] = nil
			end
		end
	end

	-- Автоочистка каждые 10 секунд
	spawn(function()
		while true do
			wait(10)
			CleanupSmoothingData()
		end
	end)

	local function GetTarget()
		-- Если включена фокусировка цели
		if OneTarget then
			-- Пытаемся получить зафиксированную цель
			local locked = LockTarget()
			if locked then
				return locked
			end

			-- Если нет зафиксированной цели, ищем новую
			return FindAndLockTarget()
		end

		-- Стандартный режим (без фокусировки)
		local sortedPlayers = GetSortedPlayers()
		if #sortedPlayers > 0 then
			return sortedPlayers[1].Player
		end

		return nil
	end

	RunService.RenderStepped:Connect(function()
		if not Enabled then
			currentTarget = nil
			Holding = false
			targethudtemplate.Visible = false
			if cloneedd then
				cloneedd.Parent = script.Parent.Parent.Assets.Cloned
				cloneedd.Enabled = false
			end
			return
		end

		if not Holding then
			currentTarget = nil
			targethudtemplate.Visible = false
			if cloneedd then
				cloneedd.Parent = script.Parent.Parent.Assets.Cloned
				cloneedd.Enabled = false
			end
			return
		end

		if currentTarget then
			local character = currentTarget.Character
			local humanoid = character and character:FindFirstChildWhichIsA("Humanoid")
			local rootPart = character and character:FindFirstChild("HumanoidRootPart")
			local isAlive = (not CheckAlive) or (humanoid and humanoid.Health > 0)
			local isValid = character and rootPart and isAlive

			if not isValid then
				currentTarget = nil
				targethudtemplate.Visible = false
				if cloneedd then
					cloneedd.Parent = script.Parent.Parent.Assets.Cloned
					cloneedd.Enabled = false
				end
			end
		end

		if not currentTarget then
			for _, info in ipairs(GetSortedPlayers()) do
				local plr = info.Player

				if plr ~= LocalPlayer and not IsBlacklisted(plr)
					and (not FovCheck or IsInFovCircle(plr))
					and (not AvoidBehind or not IsBehind(plr))
					and (not WallCheck or not IsPlayerBehindWall(plr)) then

					currentTarget = plr
					break
				end
			end

			if not currentTarget then
				targethudtemplate.Visible = false
				if cloneedd then
					cloneedd.Parent = script.Parent.Parent.Assets.Cloned
					cloneedd.Enabled = false
				end
				return
			end
		end

		--if OneTarget then
		--	currentTarget = GetTarget()
		--end

		if currentTarget and (
			IsBlacklisted(currentTarget)
				or (FovCheck and not IsInFovCircle(currentTarget))
				or (AvoidBehind and IsBehind(currentTarget))
				or (WallCheck and IsPlayerBehindWall(currentTarget))
			) then
			currentTarget = nil
			targethudtemplate.Visible = false
			if cloneedd then
				cloneedd.Parent = script.Parent.Parent.Assets.Cloned
				cloneedd.Enabled = false
			end
			return
		end

		local character = currentTarget.Character
		local targetPart = character and GetBodyPart(character, AimPart)

		if not targetPart then
			currentTarget = nil
			targethudtemplate.Visible = false
			if cloneedd then
				cloneedd.Parent = script.Parent.Parent.Assets.Cloned
				cloneedd.Enabled = false
			end
			return
		end

		local targetPos = targetPart.Position

		if PredictionMove then
			local distance = (Camera.CFrame.Position - targetPart.Position).Magnitude
			local predictionValue = GetAdjustedPredictionValue(distance)
			targetPos = GetPredictedPosition(targetPart, predictionValue)
		end

		local cameraPos = GetCameraPosition()
		local smoothValue = math.clamp(math.log10(tonumber(Smoothness) + 1), 0.05, 1)

		if SilentAim then
			local UserInputService = game:GetService("UserInputService")
			local camera = workspace.CurrentCamera

			local mousePos = UserInputService:GetMouseLocation()
			local screenPos, onScreen = camera:WorldToViewportPoint(targetPos)

			if onScreen and mousemoverel then
				local deltaX = screenPos.X - mousePos.X
				local deltaY = screenPos.Y - mousePos.Y

				-- Настройка диапазона Smoothness
				local smoothMin = 0.1
				local smoothMax = 10

				local t = math.clamp((Smoothness - smoothMin) / (smoothMax - smoothMin), 0, 1)

				-- Прямое масштабирование скорости: больше Smoothness → больше скорость
				local speedFactor = 0.5 + 0.5 * t  -- диапазон от 0.5 до 1.0, чтобы движение было заметным

				mousemoverel(deltaX * speedFactor, deltaY * speedFactor)
			end

		else
			local camera = workspace.CurrentCamera
			local targetCFrame = CFrame.lookAt(cameraPos, targetPos)

			-- Настройка диапазона smoothValue
			local smoothMin = 0.1   -- минимальное значение smoothValue
			local smoothMax = 10    -- максимальное значение smoothValue

			-- Минимальное и максимальное время твина
			local minTime = 0.0001
			local maxTime = 0.5

			-- Нормализуем smoothValue в диапазон [0,1]
			local t = math.clamp((Smoothness - smoothMin) / (smoothMax - smoothMin), 0, 1)

			-- Обратная зависимость: чем больше smoothValue, тем меньше tweenTime
			local tweenTime = maxTime - (maxTime - minTime) * t

			-- Создаём Tween через TweenService
			local tweenInfo = TweenInfo.new(
				tweenTime,
				Enum.EasingStyle.Linear,
				Enum.EasingDirection.Out
			)

			local tween = game:GetService("TweenService"):Create(camera, tweenInfo, {CFrame = targetCFrame})
			tween:Play()

		end






		if TargetEsp then
			if not cloneedd then
				updateesp()
			end
			cloneedd.Parent = targetPart
			cloneedd.Enabled = true
		end

		if TargetHud then
			UpdateTargetHud(currentTarget)
			updatehud()
		end
	end)


	function DisableFov()
		if FovCircle then
			FovCircle:Destroy()
			FovGuiii:Destroy()
			FovCircle = nil
			FovGuiii = nil
		end
	end

	local arrayListFolder = script.Parent.Parent.ArrayList

	-- Включение/выключение аимбота
	function Disable()
		if not modelll.enabledd then return end
		if not Enabled then return end
		local array = arrayListFolder:FindFirstChild("Aimbot")
		if array then
			array:Destroy()
		end
		Enabled = false
		Holding = false
		msg.Disabled("XEScripts", "Aimbot Disabled", 1)
		DisableFov()
	end

	function Enable()
		if not modelll.enabledd then return end
		if Enabled then return end
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = "Aimbot"
		array:FindFirstChild("TextLabel").Text = "Aimbot"
		array.Visible = true
		array.Parent = arrayListFolder  -- Вставляем клон в иерархию

		Enabled = true
		msg.Enabled("XEScripts", "Aimbot Activated", 1)
		DisableFov()
		CreateFovCircle()
	end

	-- Обработка переключения аимбота через клавишу
	UserInputService.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Keyboard then
			if input.KeyCode == ToggleKey then
				if Enabled then
					Disable()
				else
					Enable()
				end
			end
		end
	end)

	-- Удаление круга Fov при отключении
	while wait(1) do
		if FovCircle and not IfFovCircle then
			FovCircle:Remove()
		end
	end

end;
task.spawn(C_19);
-- StarterGui.xescriptsXD.Storage.Old.UIStroke.UIGradient.LocalScript
local function C_5c()
	local script = G2L["5c"];

end;
task.spawn(C_5c);
-- StarterGui.xescriptsXD.Storage.Base.loader
local function C_8f()
	local script = G2L["8f"];
	local runService = game:GetService("RunService")
	local tweenService = game:GetService("TweenService")
	local parent = script.Parent.Parent.Parent

	-- Установка заголовков
	script.Parent.Parent.Old.TextLabel.Text = "XEScripts Beta | " .. script.Parent.Parent.Version.Value
	script.Parent.Parent.Parent.Frame.Plr.TextLabel.Text = game.Players.LocalPlayer.Name

	-- Генерация случайного текста
	local function generateRandomText(length)
		local chars = { "h", "a", "m", "v", "g", "r", "n", "d", "b", "t", "y", "u", "o", "c", "j", "s", "z", "l", "k", "d", "_", "-", "1", "5", "ddd", "(", ")", "''" }
		local text = ""
		for i = 1, length do
			text = text .. chars[math.random(#chars)]
		end
		return text
	end

	-- Обновление FPS
	local fpsLabel = script.Parent.Parent.FpsLabel
	local frameCount, lastTime = 0, tick()

	runService.RenderStepped:Connect(function()
		frameCount = frameCount + 1
		local currentTime = tick()
		local elapsedTime = currentTime - lastTime

		if elapsedTime >= 0.3 then -- Обновление каждые 0.3 секунды
			local fps = math.floor(frameCount / elapsedTime)
			if fpsLabel.Visible == true then
				fpsLabel.Text = "FPS: " .. fps
			end
			frameCount, lastTime = 0, currentTime
		end
	end)

	-- Плавное изменение цвета текста
	local function generateRandomColor()
		return Color3.fromRGB(math.random(255), math.random(255), math.random(255))
	end

	local function tweenTextColor(button)
		local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, -1, true)
		local tween = tweenService:Create(button, tweenInfo, { TextColor3 = generateRandomColor() })
		tween:Play()
	end

	runService.Stepped:Connect(function()
		script.Parent.Parent.Parent.Name = generateRandomText(60)
	end)

	-- Включение родительского элемента при отключении
	runService.RenderStepped:Connect(function()
		if not parent.Enabled then
			parent.Enabled = true
		end
	end)

	local msg = require(script.Parent.Parent.message)

	msg.Info("XEScripts", "Loaded", 2)
end;
task.spawn(C_8f);
-- StarterGui.xescriptsXD.Frame.Ds
local function C_11c()
	local script = G2L["11c"];
	local frame = script.Parent
	local storage = frame.Parent:WaitForChild("Storage")
	local particleTemplate = storage:WaitForChild("ParticleEX")

	local particlesFolder = script.Parent:FindFirstChild("Particles")

	-- Настройки
	local PARTICLE_COUNT = 20
	local SPEED = 20 -- пикселей в секунду
	local PARTICLE_LIFETIME = 4
	local FADE_OUT_TIME = 1

	-- Плавное исчезновение частицы
	local function fadeAndDestroy(particle)
		local fadeStart = tick()
		local startTransparency = 0.9

		while tick() - fadeStart < FADE_OUT_TIME do
			local alpha = (tick() - fadeStart) / FADE_OUT_TIME
			particle.BackgroundTransparency = startTransparency + (1 - startTransparency) * alpha
			task.wait()
		end

		particle:Destroy()
	end

	-- Создание и анимация частицы
	local function spawnParticle()
		local clone = particleTemplate:Clone()
		clone.Visible = true
		clone.Parent = particlesFolder
		clone.BackgroundTransparency = 0.9

		local frameSize = frame.AbsoluteSize
		local startPos = Vector2.new(
			math.random(0, frameSize.X),
			math.random(0, frameSize.Y)
		)
		clone.Position = UDim2.new(0, startPos.X, 0, startPos.Y)

		local direction = Vector2.new(math.random() - 0.5, math.random() - 0.5).Unit
		local startTime = tick()

		task.spawn(function()
			while tick() - startTime < (PARTICLE_LIFETIME - FADE_OUT_TIME) do
				local dt = task.wait()
				local currentPos = clone.Position
				local newX = currentPos.X.Offset + direction.X * SPEED * dt
				local newY = currentPos.Y.Offset + direction.Y * SPEED * dt

				-- Проверка выхода за границы
				if newX < 0 or newX > frameSize.X or newY < 0 or newY > frameSize.Y then
					-- Плавно исчезаем и удаляем
					fadeAndDestroy(clone)
					return
				end

				clone.Position = UDim2.new(0, newX, 0, newY)
			end

			fadeAndDestroy(clone)
		end)
	end

	-- Цикл создания частиц
	while true do
		if #particlesFolder:GetChildren() < PARTICLE_COUNT and script.Parent.Value.Value == true then
			spawnParticle()
		end
		task.wait(0.1)
	end
end;
task.spawn(C_11c);
-- StarterGui.xescriptsXD.Frame.LocalScript
local function C_11d()
	local script = G2L["11d"];
	local UIS = game:GetService('UserInputService')
	local TweenService = game:GetService('TweenService')
	local frame = script.Parent

	local isDragging = false
	local dragStart = nil
	local startPos = nil

	-- Кэшируем TweenInfo для переиспользования
	local tweenInfo = TweenInfo.new(0.1)

	local function updatePosition(input)
		if not isDragging then return end

		local delta = input.Position - dragStart
		local newPosition = UDim2.new(
			startPos.X.Scale, 
			startPos.X.Offset + delta.X,
			startPos.Y.Scale, 
			startPos.Y.Offset + delta.Y
		)

		TweenService:Create(frame, tweenInfo, {Position = newPosition}):Play()
	end

	-- Обработка начала перетаскивания
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or 
			input.UserInputType == Enum.UserInputType.Touch then
			isDragging = true
			dragStart = input.Position
			startPos = frame.Position
		end
	end)

	-- Обработка окончания перетаскивания
	frame.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or 
			input.UserInputType == Enum.UserInputType.Touch then
			isDragging = false
		end
	end)

	-- Обработка движения
	UIS.InputChanged:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseMovement or 
			input.UserInputType == Enum.UserInputType.Touch) and isDragging then
			updatePosition(input)
		end
	end)
end;
task.spawn(C_11d);
-- StarterGui.xescriptsXD.Frame.Ds2
local function C_11e()
	local script = G2L["11e"];
	local frame = script.Parent
	local storage = frame.Parent:WaitForChild("Storage")
	local particleTemplate = storage:WaitForChild("ParticleEX2")

	local particlesFolder = script.Parent:FindFirstChild("Particles")

	-- Настройки
	local PARTICLE_COUNT = 2
	local SPEED = 20 -- пикселей в секунду
	local PARTICLE_LIFETIME = 4
	local FADE_OUT_TIME = 1

	-- Плавное исчезновение частицы
	local function fadeAndDestroy(particle)
		local fadeStart = tick()
		local startTransparency = 0.9

		while tick() - fadeStart < FADE_OUT_TIME do
			local alpha = (tick() - fadeStart) / FADE_OUT_TIME
			particle.BackgroundTransparency = startTransparency + (1 - startTransparency) * alpha
			task.wait()
		end

		particle:Destroy()
	end

	-- Создание и анимация частицы
	local function spawnParticle()
		local clone = particleTemplate:Clone()
		clone.Visible = true
		clone.Parent = particlesFolder
		clone.BackgroundTransparency = 0.9

		local frameSize = frame.AbsoluteSize
		local startPos = Vector2.new(
			math.random(0, frameSize.X),
			math.random(0, frameSize.Y)
		)
		clone.Position = UDim2.new(0, startPos.X, 0, startPos.Y)

		local direction = Vector2.new(math.random() - 0.5, math.random() - 0.5).Unit
		local startTime = tick()

		task.spawn(function()
			while tick() - startTime < (PARTICLE_LIFETIME - FADE_OUT_TIME) do
				local dt = task.wait()
				local currentPos = clone.Position
				local newX = currentPos.X.Offset + direction.X * SPEED * dt
				local newY = currentPos.Y.Offset + direction.Y * SPEED * dt

				-- Проверка выхода за границы
				if newX < 0 or newX > frameSize.X or newY < 0 or newY > frameSize.Y then
					-- Плавно исчезаем и удаляем
					fadeAndDestroy(clone)
					return
				end

				clone.Position = UDim2.new(0, newX, 0, newY)
			end

			fadeAndDestroy(clone)
		end)
	end

	-- Цикл создания частиц
	while true do
		if #particlesFolder:GetChildren() < PARTICLE_COUNT and script.Parent.Value2.Value == true then
			spawnParticle()
		end
		task.wait(0.1)
	end
end;
task.spawn(C_11e);
-- StarterGui.xescriptsXD.Frame.UIStroke.UIGradient.LocalScript
local function C_122()
	local script = G2L["122"];
	local TweenService = game:GetService("TweenService")
	local uiGradient = script.Parent -- предполагаем, что это UIGradient

	-- Настройки
	local speed = 90 -- градусов в секунду
	local duration = 360 / speed -- время, чтобы пройти 360°

	-- Настройка tween
	local tweenInfo = TweenInfo.new(
		duration,
		Enum.EasingStyle.Linear,
		Enum.EasingDirection.InOut,
		-1, -- бесконечное повторение
		true -- реверс (чтобы был плавный цикл)
	)

	local goal = { Rotation = 360 } -- конечное значение

	local tween = TweenService:Create(uiGradient, tweenInfo, goal)
	tween:Play()

end;
task.spawn(C_122);
-- StarterGui.xescriptsXD.Frame.General.LocalScript
local function C_124()
	local script = G2L["124"];
	local TweenService = game:GetService("TweenService")
	local scriptParent = script.Parent
	local scrollingFrame = script.Parent

	-- Более плавная и пружинящая анимация
	local tweenInfo = TweenInfo.new(
		0.45, -- Время (дольше, чтобы было плавнее)
		Enum.EasingStyle.Back, -- Эффект вылета с пружиной
		Enum.EasingDirection.Out
	)

	local resetInfo = TweenInfo.new(
		0.25,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out
	)

	local hasAnimated = false

	-- Устанавливаем "выдвигаемое" начальное положение
	local function resetPosition()
		scrollingFrame.Position = UDim2.new(0.293, 0, 0.20, 0)
	end

	local function animateIn()
		local targetPosition = UDim2.new(0.293, 0, 0.150, 0)
		local tween = TweenService:Create(scrollingFrame, tweenInfo, {Position = targetPosition})
		tween:Play()
	end

	-- Следим за изменением видимости
	scriptParent:GetPropertyChangedSignal("Visible"):Connect(function()
		if scriptParent.Visible and not hasAnimated then
			resetPosition() -- Задаём позицию "до"
			animateIn()     -- Плавно выезжает вверх
			hasAnimated = true
		elseif not scriptParent.Visible then
			hasAnimated = false
		end
	end)
end;
task.spawn(C_124);
-- StarterGui.xescriptsXD.Frame.General.TextLabel.LocalScript
local function C_126()
	local script = G2L["126"];
	script.Parent.Text = "Welcome to XEScripts Beta! Current Version:" .. script.Parent.Parent.Parent.Parent.Storage.Version.Value
end;
task.spawn(C_126);
-- StarterGui.xescriptsXD.Frame.ImageLabel.LocalScript
local function C_128()
	local script = G2L["128"];

end;
task.spawn(C_128);
-- StarterGui.xescriptsXD.Frame.Title.TextLabel.LocalScript
local function C_12f()
	local script = G2L["12f"];
	local label = script.Parent
	local version = script.Parent.Parent.Parent.Parent.Storage.Version.Value
	local lastTime = ""

	while true do
		local currentTime = os.date("%I:%M %p")
		if currentTime ~= lastTime then
			label.Text = "XEScripts Beta | " .. version .. " | " .. currentTime
			lastTime = currentTime
		end
		wait(1)
	end
end;
task.spawn(C_12f);
-- StarterGui.xescriptsXD.Frame.Visual.LocalScript
local function C_134()
	local script = G2L["134"];
	local TweenService = game:GetService("TweenService")
	local scriptParent = script.Parent
	local scrollingFrame = script.Parent

	-- Более плавная и пружинящая анимация
	local tweenInfo = TweenInfo.new(
		0.45, -- Время (дольше, чтобы было плавнее)
		Enum.EasingStyle.Back, -- Эффект вылета с пружиной
		Enum.EasingDirection.Out
	)

	local resetInfo = TweenInfo.new(
		0.25,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out
	)

	local hasAnimated = false

	-- Устанавливаем "выдвигаемое" начальное положение
	local function resetPosition()
		scrollingFrame.Position = UDim2.new(0.293, 0, 0.20, 0)
	end

	local function animateIn()
		local targetPosition = UDim2.new(0.293, 0, 0.150, 0)
		local tween = TweenService:Create(scrollingFrame, tweenInfo, {Position = targetPosition})
		tween:Play()
	end

	-- Следим за изменением видимости
	scriptParent:GetPropertyChangedSignal("Visible"):Connect(function()
		if scriptParent.Visible and not hasAnimated then
			resetPosition() -- Задаём позицию "до"
			animateIn()     -- Плавно выезжает вверх
			hasAnimated = true
		elseif not scriptParent.Visible then
			hasAnimated = false
		end
	end)
end;
task.spawn(C_134);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton.LocalScript
local function C_13d()
	local script = G2L["13d"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")

	local player = Players.LocalPlayer
	local playerName = player.Name
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local title = "ESP"
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local teamCheck = script.Parent.Parent.Parent:FindFirstChild("Teamcheck")

	local createdBoxes = {}
	local connections = {}

	-- tween позиция GUI
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function updateBoxColor(box, character)
		local teamColor = (teamCheck and teamCheck.Value and Players:GetPlayerFromCharacter(character))
			and Players:GetPlayerFromCharacter(character).Team and Players:GetPlayerFromCharacter(character).Team.TeamColor.Color
			or script.Parent.Parent.Parent.ColorVal.Value

		if box and box.Frame then
			box.Frame.BackgroundColor3 = teamColor
		end
	end

	local function createBoxAdornment(humanoidRootPart, character)
		local existingBox = humanoidRootPart:FindFirstChild("EsepeBoxl")
		if existingBox then
			updateBoxColor(existingBox, character)
			existingBox.Enabled = true
			createdBoxes[character] = existingBox
			return existingBox
		end

		local billboardGui = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.EsepeBoxl:Clone()
		billboardGui.Adornee = humanoidRootPart
		billboardGui.Enabled = true
		billboardGui.Parent = humanoidRootPart

		local frame = billboardGui:FindFirstChild("Frame")
		frame.BorderSizePixel = script.Parent.Parent.Parent.ThicknessVal.Value
		frame.BackgroundTransparency = script.Parent.Parent.Parent.TransparencyVal.Value

		updateBoxColor({ Frame = frame }, character)
		createdBoxes[character] = { BillboardGui = billboardGui, Frame = frame }
		return createdBoxes[character]
	end

	local isActive = false

	local function monitorPlayers()
		while isActive do
			for _, otherPlayer in ipairs(Players:GetPlayers()) do
				if otherPlayer ~= player and otherPlayer.Character then
					local humanoidRootPart = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
					if humanoidRootPart then
						local existingBox = humanoidRootPart:FindFirstChild("EsepeBoxl")
						if not existingBox then
							createBoxAdornment(humanoidRootPart, otherPlayer.Character)
						else
							updateBoxColor(existingBox, otherPlayer.Character)
						end
					end
				end
			end
			task.wait(1)
		end
	end

	local function handleCharacter(character)
		if character.Name ~= playerName then
			local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
			if humanoidRootPart then
				createBoxAdornment(humanoidRootPart, character)
			end
		end
	end

	local function setupConnections()
		connections[#connections + 1] = Players.PlayerAdded:Connect(function(newPlayer)
			connections[#connections + 1] = newPlayer.CharacterAdded:Connect(handleCharacter)
		end)

		connections[#connections + 1] = Players.PlayerRemoving:Connect(function(playerRemoved)
			local character = playerRemoved.Character
			if character then
				local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
				if humanoidRootPart and createdBoxes[playerRemoved] then
					createdBoxes[playerRemoved].BillboardGui:Destroy()
					createdBoxes[playerRemoved] = nil
				end
			end
		end)
	end

	local function initializeExistingHumanoids()
		for _, plr in ipairs(Players:GetPlayers()) do
			if plr.Name ~= playerName and plr.Character then
				handleCharacter(plr.Character)
			end
		end
	end

	local function startESP()
		if not isActive then
			isActive = true
			initializeExistingHumanoids()
			setupConnections()
			task.spawn(monitorPlayers)

			-- Сохраняем в конфиг
			Config.SetEnabled("Visual", title, true)
			Config.SaveConfig("default")
		end
	end

	local function stopESP()
		if isActive then
			isActive = false
			for _, conn in ipairs(connections) do
				conn:Disconnect()
			end
			connections = {}
			for _, box in pairs(createdBoxes) do
				if box and box.BillboardGui then
					box.BillboardGui:Destroy()
				end
			end
			createdBoxes = {}

			-- Обновляем конфиг
			Config.SetEnabled("Visual", title, false)
			Config.SaveConfig("default")
		end
	end

	-- При нажатии на кнопку
	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			startESP()

			msg.Enabled(title, "Enabled", 2)
			script.Parent.Parent.Parent.Parent.Parent.Preview.ESP.Visible = true
			script.Parent.Parent.Parent.Parent.Parent.Preview.ESP.BackgroundColor3 = script.Parent.Parent.Parent.ColorVal.Value
			script.Parent.Parent.Parent.Parent.Parent.Preview.ESP.BackgroundTransparency = script.Parent.Parent.Parent.TransparencyVal.Value
			script.Parent.Parent.Parent.Parent.Parent.Preview.ESP.BorderSizePixel = script.Parent.Parent.Parent.ThicknessVal.Value

			enabled.Value = true
			tweenGuiPosition(Carget, 0.545)
		else
			stopESP()

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			msg.Disabled(title, "Disabled", 2)
			script.Parent.Parent.Parent.Parent.Parent.Preview.ESP.Visible = false

			enabled.Value = false
			tweenGuiPosition(Carget, 0.065)
		end
	end)

	-- Автозагрузка при старте
	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Visual", title) then
			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			startESP()

			enabled.Value = true
			tweenGuiPosition(Carget, 0.545)
		end
	end)

end;
task.spawn(C_13d);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Enable.TextButton.LocalScript
local function C_14a()
	local script = G2L["14a"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "ESPTeamCheck"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		enabled.Value = true
		script.Parent.Parent.Parent.Teamcheck.Value = true
		Config.SetEnabled("Visual", title, true)
		Config.SaveConfig("default")

		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end
		enabled.Value = false
		script.Parent.Parent.Parent.Teamcheck.Value = false
		Config.SetEnabled("Visual", title, false)
		Config.SaveConfig("default")

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния при старте
	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Visual", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_14a);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Transparency.Carget.TextButton.LocalScript
local function C_15a()
	local script = G2L["15a"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local sliderFrame = script.Parent.Parent -- Перетаскиваем именно этот объект
	local mainFrame = sliderFrame.Parent -- Родитель фрейма
	local transparencyVal = mainFrame.Parent:FindFirstChild("TransparencyVal")
	local label = mainFrame:FindFirstChild("TextLabel")
	local title = "ESPTransparency"

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local category = "Visual"
	local key = title

	-- Состояние
	local dragging = false
	local defaultValue = 0
	local maxXScale = 0.905 -- ограничение по X

	-- Установка значения Transparency и позиции
	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- это значение от 0 до 0.905
		local transparency = math.clamp(relX / (parentAbsSize * maxXScale), 0, 1) -- нормализуем до 1

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0.2, 0)
		transparencyVal.Value = transparency
		label.Text = string.format("Transparency: %.2f", transparency)

		-- Сохраняем значение в конфиг
		Config.Set(category, key, transparency)
		Config.SaveConfig("default")
	end

	-- Загрузка значения из конфига и инициализация
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedValue = Config.Get(category, key)
			if type(savedValue) == "number" then
				defaultValue = savedValue
			end
		end

		transparencyVal.Value = defaultValue
		label.Text = string.format("Transparency: %.2f", defaultValue)

		local parentAbsSize = mainFrame.AbsoluteSize.X
		-- Устанавливаем позицию с учётом сохранённого значения
		sliderFrame.Position = UDim2.new(defaultValue * maxXScale, 0, 0.2, 0)
	end)

	-- Начало перетаскивания
	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	-- Конец перетаскивания
	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Перетаскивание
	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)

end;
task.spawn(C_15a);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.Thickness.Carget.TextButton.LocalScript
local function C_165()
	local script = G2L["165"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local sliderFrame = script.Parent.Parent -- Перетаскиваем именно этот объект
	local mainFrame = sliderFrame.Parent -- Родитель фрейма
	local thicknessVal = mainFrame.Parent:FindFirstChild("ThicknessVal")
	local label = mainFrame:FindFirstChild("TextLabel")
	local title = "ESPThickness"

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local category = "Visual"
	local key = title

	-- Проверки
	if not thicknessVal or not thicknessVal:IsA("NumberValue") then
		return
	end

	if not label or not label:IsA("TextLabel") then
		return
	end

	-- Состояние
	local dragging = false
	local defaultValue = 2
	local maxXScale = 0.905 -- ограничение по X

	-- Функция интерполяции от 0..1 к 0..10
	local function lerp(min, max, t)
		return min + (max - min) * t
	end

	-- Установка значения Thickness и позиции
	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- 0..0.905
		local normalized = relX / (parentAbsSize * maxXScale) -- 0..1

		local thickness = lerp(0, 10, normalized) -- преобразуем 0..1 в 0..10

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		thicknessVal.Value = thickness
		label.Text = string.format("Thickness: %.2f", thickness)

		-- Сохраняем в конфиг
		Config.Set(category, key, thickness)
		Config.SaveConfig("default")
	end

	-- Загрузка значения из конфига и установка позиции
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedValue = Config.Get(category, key)
			if type(savedValue) == "number" then
				defaultValue = savedValue
			end
		end

		thicknessVal.Value = defaultValue
		label.Text = string.format("Thickness: %.2f", defaultValue)

		local parentAbsSize = mainFrame.AbsoluteSize.X
		-- Устанавливаем позицию с учётом сохранённого значения
		local normalizedPos = defaultValue / 10 * maxXScale -- обратное преобразование
		sliderFrame.Position = UDim2.new(normalizedPos, 0, 0, 0)
	end)

	-- Начало перетаскивания
	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	-- Конец перетаскивания
	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Перетаскивание
	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)

end;
task.spawn(C_165);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.ESP.TextBox.LocalScript
local function C_168()
	local script = G2L["168"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local textBox = script.Parent
	local colorVal = script.Parent.Parent:FindFirstChild("ColorVal")

	local title = "ESPColor"
	local category = "Visual"
	local key = "ESPColor"

	if not colorVal or not colorVal:IsA("Color3Value") then
		return
	end

	-- Функция преобразования Color3 в строку "R,G,B"
	local function color3ToString(color)
		return string.format("%d,%d,%d", math.floor(color.R * 255), math.floor(color.G * 255), math.floor(color.B * 255))
	end

	-- Загрузка цвета из конфига
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedColorStr = Config.Get(category, key)
			if savedColorStr then
				local r, g, b = savedColorStr:match("(%d+),(%d+),(%d+)")
				if r and g and b then
					r = tonumber(r)
					g = tonumber(g)
					b = tonumber(b)
					if r and g and b then
						local loadedColor = Color3.fromRGB(r, g, b)
						colorVal.Value = loadedColor
						textBox.Text = color3ToString(loadedColor)
					end
				end
			else
				textBox.Text = color3ToString(colorVal.Value)
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			end
		else
			textBox.Text = color3ToString(colorVal.Value)
			Config.Set(category, key, textBox.Text)
			Config.SaveConfig("default")
		end
	end)

	-- Сохраняем и применяем при завершении редактирования (Enter)
	textBox.FocusLost:Connect(function(enterPressed)
		if not enterPressed then return end

		local text = textBox.Text
		local r, g, b = text:match("(%d+)%s*,%s*(%d+)%s*,%s*(%d+)")
		if r and g and b then
			r = tonumber(r)
			g = tonumber(g)
			b = tonumber(b)
			if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
				local newColor = Color3.fromRGB(r, g, b)
				colorVal.Value = newColor
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			else
				-- Введено некорректное значение — вернуть предыдущее
				local prev = Config.Get(category, key)
				textBox.Text = prev or color3ToString(colorVal.Value)
			end
		else
			-- Некорректный формат — вернуть предыдущее значение
			local prev = Config.Get(category, key)
			textBox.Text = prev or color3ToString(colorVal.Value)
		end
	end)

end;
task.spawn(C_168);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.LocalScript
local function C_170()
	local script = G2L["170"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local playerCharacter = player.Character or player.CharacterAdded:Wait()
	local playerName = player.Name
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local title = "Chams"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local teamCheck = script.Parent.Parent.Parent:FindFirstChild("Teamcheck")
	local connections = {}
	local isActive = false

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function disconnectAll()
		for _, conn in pairs(connections) do
			if conn then conn:Disconnect() end
		end
		table.clear(connections)

		for _, obj in ipairs(workspace:GetDescendants()) do
			if obj:IsA("Model") and obj:FindFirstChildWhichIsA("Humanoid") then
				local highlight = obj:FindFirstChild("ALOGEIS")
				if highlight then
					highlight:Destroy()
				end
			end
		end
	end

	local function updateHighlightColor(highlight, character)
		if teamCheck and teamCheck.Value then
			local playerObj = Players:GetPlayerFromCharacter(character)
			if playerObj and playerObj.Team then
				highlight.FillColor = playerObj.Team.TeamColor.Color
			else
				highlight.FillColor = script.Parent.Parent.Parent.ColorVal.Value
			end
		else
			highlight.FillColor = script.Parent.Parent.Parent.ColorVal.Value
		end
	end

	local function createHighlight(character)
		if not isActive or character.Name == playerName then return end

		local highlight = character:FindFirstChild("ALOGEIS")
		if not highlight then
			highlight = Instance.new("Highlight")
			highlight.Name = "ALOGEIS"
			highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
			highlight.OutlineTransparency = 0.6
			highlight.FillTransparency = 0.6
			highlight.Parent = character
		end

		highlight.Enabled = true
		updateHighlightColor(highlight, character)
		return highlight
	end

	local function managePlayerHighlightVisibility()
		local playerHighlight = playerCharacter:FindFirstChild("ALOGEIS")
		if playerHighlight then
			playerHighlight.Enabled = false
		end
	end

	local function checkAllPlayersForHighlight()
		for _, otherPlayer in ipairs(Players:GetPlayers()) do
			if otherPlayer.Name ~= playerName and otherPlayer.Character then
				createHighlight(otherPlayer.Character)
			end
		end
	end

	local function checkAllWorkspaceObjects()
		for _, obj in ipairs(workspace:GetDescendants()) do
			if obj:IsA("Model") and obj:FindFirstChildWhichIsA("Humanoid") and obj.Name ~= playerName then
				createHighlight(obj)
			end
		end
	end

	local function onCharacterAdded(character)
		if isActive then
			createHighlight(character)
		end
	end

	local function onDescendantAdded(descendant)
		if isActive and descendant:IsA("Model") and descendant:FindFirstChildWhichIsA("Humanoid") and descendant.Name ~= playerName then
			createHighlight(descendant)
		end
	end

	local function startMonitoring()
		task.spawn(function()
			while isActive do
				checkAllPlayersForHighlight()
				task.wait(1)
			end
		end)
	end

	local function startESP()
		if not isActive then
			isActive = true
			managePlayerHighlightVisibility()
			checkAllPlayersForHighlight()
			startMonitoring()

			connections["PlayerAdded"] = Players.PlayerAdded:Connect(function(newPlayer)
				connections["CharacterAdded_" .. newPlayer.Name] = newPlayer.CharacterAdded:Connect(onCharacterAdded)
			end)

			connections["LocalCharacterAdded"] = player.CharacterAdded:Connect(function(character)
				playerCharacter = character
				managePlayerHighlightVisibility()
			end)

			connections["DescendantAdded"] = workspace.DescendantAdded:Connect(onDescendantAdded)
		end
	end

	local function stopESP()
		if isActive then
			isActive = false
			disconnectAll()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			startESP()
			msg.Enabled(title, "Enabled", 2)

			enabled.Value = true
			tweenGuiPosition(Carget, 0.545)

			Config.SetEnabled("Visual", title, true)
			Config.SaveConfig("default")

		else
			stopESP()

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then array:Destroy() end

			msg.Disabled(title, "Disabled", 2)

			enabled.Value = false
			tweenGuiPosition(Carget, 0.065)

			Config.SetEnabled("Visual", title, false)
			Config.SaveConfig("default")
		end
	end)

	-- Автозагрузка конфигурации при запуске
	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Visual", title) then
			startESP()
			enabled.Value = true

			local array = arrayListFolder:FindFirstChild("Example")
			if array then
				local clone = array:Clone()
				clone.Name = title
				clone.TextLabel.Text = title
				clone.Visible = true
				clone.Parent = arrayListFolder
			end

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			tweenGuiPosition(Carget, 0.545)
		else
			stopESP()
			enabled.Value = false

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end
			tweenGuiPosition(Carget, 0.065)
		end
	end)

end;
task.spawn(C_170);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.LocalScript
local function C_17d()
	local script = G2L["17d"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "ChamsTeamCheck"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Teamcheck.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Teamcheck.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_17d);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Transparency.Carget.TextButton.LocalScript
local function C_18d()
	local script = G2L["18d"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local sliderFrame = script.Parent.Parent -- Перетаскиваем именно этот объект
	local mainFrame = sliderFrame.Parent -- Родитель фрейма
	local transparencyVal = mainFrame.Parent:FindFirstChild("TransparencyVal")
	local label = mainFrame:FindFirstChild("TextLabel")


	-- Состояние
	local dragging = false
	local defaultValue = 0
	local maxXScale = 0.905 -- ограничение по X

	-- Установка значения Transparency и позиции
	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- это значение от 0 до 0.905
		local transparency = math.clamp(relX / (parentAbsSize * maxXScale), 0, 1) -- нормализуем до 1

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		transparencyVal.Value = transparency
		label.Text = string.format("Transparency: %.2f", transparency)
	end

	-- Установка дефолтного состояния
	sliderFrame.Position = UDim2.new(0, 0, 0, 0)
	transparencyVal.Value = defaultValue
	label.Text = string.format("Transparency: %.2f", defaultValue)

	-- Начало перетаскивания
	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	-- Конец перетаскивания
	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Перетаскивание
	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)
end;
task.spawn(C_18d);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Thickness.Carget.TextButton.LocalScript
local function C_197()
	local script = G2L["197"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local sliderFrame = script.Parent.Parent -- Перетаскиваем именно этот объект
	local mainFrame = sliderFrame.Parent -- Родитель фрейма
	local thicknessVal = mainFrame.Parent:FindFirstChild("ThicknessVal")
	local label = mainFrame:FindFirstChild("TextLabel")


	-- Состояние
	local dragging = false
	local defaultValue = 2
	local maxXScale = 0.905 -- ограничение по X

	-- Функция интерполяции от 0..1 к 1..10
	local function lerp(min, max, t)
		return min + (max - min) * t
	end

	-- Установка значения Thickness и позиции
	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- 0..0.905
		local normalized = relX / (parentAbsSize * maxXScale) -- 0..1

		local thickness = lerp(0, 10, normalized) -- преобразуем 0..1 в 1..10

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		thicknessVal.Value = thickness
		label.Text = string.format("Thickness: %.2f", thickness)
	end

	-- Установка дефолтного состояния
	sliderFrame.Position = UDim2.new(0.18, 0, 0)
	thicknessVal.Value = defaultValue
	label.Text = string.format("Thickness: %.2f", defaultValue)

	-- Начало перетаскивания
	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	-- Конец перетаскивания
	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Перетаскивание
	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)
end;
task.spawn(C_197);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.TextBox.LocalScript
local function C_19b()
	local script = G2L["19b"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local textBox = script.Parent
	local colorVal = script.Parent.Parent:FindFirstChild("ColorVal")

	local title = "ChamsColor"
	local category = "Visual"
	local key = "ChamsColor"

	if not colorVal or not colorVal:IsA("Color3Value") then
		return
	end

	-- Функция преобразования Color3 в строку "R,G,B"
	local function color3ToString(color)
		return string.format("%d,%d,%d", math.floor(color.R * 255), math.floor(color.G * 255), math.floor(color.B * 255))
	end

	-- Загрузка цвета из конфига
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedColorStr = Config.Get(category, key)
			if savedColorStr then
				local r, g, b = savedColorStr:match("(%d+),(%d+),(%d+)")
				if r and g and b then
					r = tonumber(r)
					g = tonumber(g)
					b = tonumber(b)
					if r and g and b then
						local loadedColor = Color3.fromRGB(r, g, b)
						colorVal.Value = loadedColor
						textBox.Text = color3ToString(loadedColor)
					end
				end
			else
				textBox.Text = color3ToString(colorVal.Value)
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			end
		else
			textBox.Text = color3ToString(colorVal.Value)
			Config.Set(category, key, textBox.Text)
			Config.SaveConfig("default")
		end
	end)

	-- Сохраняем и применяем при завершении редактирования (Enter)
	textBox.FocusLost:Connect(function(enterPressed)
		if not enterPressed then return end

		local text = textBox.Text
		local r, g, b = text:match("(%d+)%s*,%s*(%d+)%s*,%s*(%d+)")
		if r and g and b then
			r = tonumber(r)
			g = tonumber(g)
			b = tonumber(b)
			if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
				local newColor = Color3.fromRGB(r, g, b)
				colorVal.Value = newColor
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			else
				-- Введено некорректное значение — вернуть предыдущее
				local prev = Config.Get(category, key)
				textBox.Text = prev or color3ToString(colorVal.Value)
			end
		else
			-- Некорректный формат — вернуть предыдущее значение
			local prev = Config.Get(category, key)
			textBox.Text = prev or color3ToString(colorVal.Value)
		end
	end)

end;
task.spawn(C_19b);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.LocalScript
local function C_1a2()
	local script = G2L["1a2"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local Camera = workspace.CurrentCamera
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local player = Players.LocalPlayer
	local playerCharacter = player.Character or player.CharacterAdded:Wait()
	local playerName = player.Name

	local title = "SkeletonESP"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	-- Настройки
	local teamCheck = script.Parent.Parent.Parent:FindFirstChild("Teamcheck2")
	local colorVal = script.Parent.Parent.Parent:FindFirstChild("ColorVal")
	local transparencyVal = script.Parent.Parent.Parent:FindFirstChild("TransparencyVal")
	local thicknessVal = script.Parent.Parent.Parent:FindFirstChild("ThicknessVal")

	local connections = {}
	local isActive = false
	local skeletonData = {}

	-- ======== АВТОЗАГРУЗКА СОСТОЯНИЯ ========
	local savedState = player:GetAttribute("SkeletonESPEnabled")
	if savedState == nil then
		savedState = false
	else
		savedState = savedState == true
	end
	enabled.Value = savedState
	-- ===========================================

	-- Создание GUI для скелета
	local skeletonGui = nil

	local function createSkeletonGui()
		if skeletonGui then
			skeletonGui:Destroy()
		end

		skeletonGui = Instance.new("ScreenGui")
		skeletonGui.Name = math.random(111111,11111111) .. "prikormotrzhaviytrener"
		skeletonGui.ResetOnSpawn = false
		skeletonGui.IgnoreGuiInset = true
		skeletonGui.Parent = player:WaitForChild("PlayerGui")
	end

	-- Получить цвет для игрока
	local function getPlayerColor(character)
		local targetPlayer = Players:GetPlayerFromCharacter(character)
		if not targetPlayer then
			return colorVal and colorVal.Value or Color3.fromRGB(255, 255, 255)
		end

		if teamCheck and teamCheck.Value and targetPlayer.Team and player.Team then
			if targetPlayer.Team == player.Team then
				return Color3.fromRGB(0, 200, 255) -- Синий для команды
			else
				return Color3.fromRGB(255, 100, 100) -- Красный для врагов
			end
		end

		return colorVal and colorVal.Value or Color3.fromRGB(255, 255, 255)
	end

	-- Создание линии между двумя точками
	local function createLine(name, parent)
		local line = Instance.new("Frame")
		line.Name = name
		line.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		line.BorderSizePixel = 0
		line.AnchorPoint = Vector2.new(0.5, 0.5)
		line.Parent = parent
		return line
	end

	-- Создание скелета для персонажа
	local function createSkeleton(character)
		if not isActive or character.Name == playerName then return end
		if skeletonData[character] then return end

		local targetPlayer = Players:GetPlayerFromCharacter(character)
		if not targetPlayer then return end

		-- Создание контейнера для скелета
		local skeletonFrame = Instance.new("Frame")
		skeletonFrame.Name = "prikorm" .. math.random(1233,12333333)
		skeletonFrame.Size = UDim2.new(1, 0, 1, 0)
		skeletonFrame.Position = UDim2.new(0, 0, 0, 0)
		skeletonFrame.BackgroundTransparency = 1
		skeletonFrame.Parent = skeletonGui

		-- Создание всех линий скелета
		local lines = {
			-- Торс
			HumanoidRootPart_to_UpperTorso = createLine("HumanoidRootPart_to_UpperTorso", skeletonFrame),
			UpperTorso_to_LowerTorso = createLine("UpperTorso_to_LowerTorso", skeletonFrame),

			-- Голова
			UpperTorso_to_Head = createLine("UpperTorso_to_Head", skeletonFrame),

			-- Левая рука
			UpperTorso_to_LeftUpperArm = createLine("UpperTorso_to_LeftUpperArm", skeletonFrame),
			LeftUpperArm_to_LeftLowerArm = createLine("LeftUpperArm_to_LeftLowerArm", skeletonFrame),
			LeftLowerArm_to_LeftHand = createLine("LeftLowerArm_to_LeftHand", skeletonFrame),

			-- Правая рука
			UpperTorso_to_RightUpperArm = createLine("UpperTorso_to_RightUpperArm", skeletonFrame),
			RightUpperArm_to_RightLowerArm = createLine("RightUpperArm_to_RightLowerArm", skeletonFrame),
			RightLowerArm_to_RightHand = createLine("RightLowerArm_to_RightHand", skeletonFrame),

			-- Левая нога
			LowerTorso_to_LeftUpperLeg = createLine("LowerTorso_to_LeftUpperLeg", skeletonFrame),
			LeftUpperLeg_to_LeftLowerLeg = createLine("LeftUpperLeg_to_LeftLowerLeg", skeletonFrame),
			LeftLowerLeg_to_LeftFoot = createLine("LeftLowerLeg_to_LeftFoot", skeletonFrame),

			-- Правая нога
			LowerTorso_to_RightUpperLeg = createLine("LowerTorso_to_RightUpperLeg", skeletonFrame),
			RightUpperLeg_to_RightLowerLeg = createLine("RightUpperLeg_to_RightLowerLeg", skeletonFrame),
			RightLowerLeg_to_RightFoot = createLine("RightLowerLeg_to_RightFoot", skeletonFrame)
		}

		skeletonData[character] = {
			Frame = skeletonFrame,
			Lines = lines,
			Player = targetPlayer
		}
	end

	-- Обновление линии между двумя частями тела
	local function updateLine(line, part1, part2, color, thickness, transparency)
		if not line or not part1 or not part2 then
			if line then line.Visible = false end
			return
		end

		local pos1, onScreen1 = Camera:WorldToViewportPoint(part1.Position)
		local pos2, onScreen2 = Camera:WorldToViewportPoint(part2.Position)

		if not onScreen1 or not onScreen2 then
			line.Visible = false
			return
		end

		local distance = math.sqrt((pos2.X - pos1.X)^2 + (pos2.Y - pos1.Y)^2)
		local angle = math.atan2(pos2.Y - pos1.Y, pos2.X - pos1.X)

		line.Size = UDim2.new(0, distance, 0, thickness or 2)
		line.Position = UDim2.new(0, (pos1.X + pos2.X) / 2, 0, (pos1.Y + pos2.Y) / 2)
		line.Rotation = math.deg(angle)
		line.BackgroundColor3 = color
		line.BackgroundTransparency = transparency or 0
		line.Visible = true
	end

	-- Обновление скелета
	local function updateSkeleton(skeletonInfo, character)
		if not skeletonInfo or not character or not character.Parent then
			if skeletonInfo and skeletonInfo.Frame then
				skeletonInfo.Frame.Visible = false
			end
			return
		end

		local lines = skeletonInfo.Lines
		local playerColor = getPlayerColor(character)
		local currentThickness = thicknessVal and thicknessVal.Value or 2
		local currentTransparency = transparencyVal and transparencyVal.Value or 0

		-- Получение частей тела (R15)
		local parts = {
			HumanoidRootPart = character:FindFirstChild("HumanoidRootPart"),
			Head = character:FindFirstChild("Head"),
			UpperTorso = character:FindFirstChild("UpperTorso"),
			LowerTorso = character:FindFirstChild("LowerTorso"),
			LeftUpperArm = character:FindFirstChild("LeftUpperArm"),
			LeftLowerArm = character:FindFirstChild("LeftLowerArm"),
			LeftHand = character:FindFirstChild("LeftHand"),
			RightUpperArm = character:FindFirstChild("RightUpperArm"),
			RightLowerArm = character:FindFirstChild("RightLowerArm"),
			RightHand = character:FindFirstChild("RightHand"),
			LeftUpperLeg = character:FindFirstChild("LeftUpperLeg"),
			LeftLowerLeg = character:FindFirstChild("LeftLowerLeg"),
			LeftFoot = character:FindFirstChild("LeftFoot"),
			RightUpperLeg = character:FindFirstChild("RightUpperLeg"),
			RightLowerLeg = character:FindFirstChild("RightLowerLeg"),
			RightFoot = character:FindFirstChild("RightFoot")
		}

		-- Если R15 части не найдены, пытаемся найти R6
		if not parts.UpperTorso then
			parts.Torso = character:FindFirstChild("Torso")
			parts.LeftArm = character:FindFirstChild("Left Arm")
			parts.RightArm = character:FindFirstChild("Right Arm")
			parts.LeftLeg = character:FindFirstChild("Left Leg")
			parts.RightLeg = character:FindFirstChild("Right Leg")

			-- Обновление для R6
			if parts.Torso then
				updateLine(lines.HumanoidRootPart_to_UpperTorso, parts.HumanoidRootPart, parts.Torso, playerColor, currentThickness, currentTransparency)
				updateLine(lines.UpperTorso_to_Head, parts.Torso, parts.Head, playerColor, currentThickness, currentTransparency)
				updateLine(lines.UpperTorso_to_LeftUpperArm, parts.Torso, parts.LeftArm, playerColor, currentThickness, currentTransparency)
				updateLine(lines.UpperTorso_to_RightUpperArm, parts.Torso, parts.RightArm, playerColor, currentThickness, currentTransparency)
				updateLine(lines.LowerTorso_to_LeftUpperLeg, parts.Torso, parts.LeftLeg, playerColor, currentThickness, currentTransparency)
				updateLine(lines.LowerTorso_to_RightUpperLeg, parts.Torso, parts.RightLeg, playerColor, currentThickness, currentTransparency)
			end
			return
		end

		-- Обновление всех линий для R15
		-- Торс
		updateLine(lines.HumanoidRootPart_to_UpperTorso, parts.HumanoidRootPart, parts.UpperTorso, playerColor, currentThickness, currentTransparency)
		updateLine(lines.UpperTorso_to_LowerTorso, parts.UpperTorso, parts.LowerTorso, playerColor, currentThickness, currentTransparency)

		-- Голова
		updateLine(lines.UpperTorso_to_Head, parts.UpperTorso, parts.Head, playerColor, currentThickness, currentTransparency)

		-- Левая рука
		updateLine(lines.UpperTorso_to_LeftUpperArm, parts.UpperTorso, parts.LeftUpperArm, playerColor, currentThickness, currentTransparency)
		updateLine(lines.LeftUpperArm_to_LeftLowerArm, parts.LeftUpperArm, parts.LeftLowerArm, playerColor, currentThickness, currentTransparency)
		updateLine(lines.LeftLowerArm_to_LeftHand, parts.LeftLowerArm, parts.LeftHand, playerColor, currentThickness, currentTransparency)

		-- Правая рука
		updateLine(lines.UpperTorso_to_RightUpperArm, parts.UpperTorso, parts.RightUpperArm, playerColor, currentThickness, currentTransparency)
		updateLine(lines.RightUpperArm_to_RightLowerArm, parts.RightUpperArm, parts.RightLowerArm, playerColor, currentThickness, currentTransparency)
		updateLine(lines.RightLowerArm_to_RightHand, parts.RightLowerArm, parts.RightHand, playerColor, currentThickness, currentTransparency)

		-- Левая нога
		updateLine(lines.LowerTorso_to_LeftUpperLeg, parts.LowerTorso, parts.LeftUpperLeg, playerColor, currentThickness, currentTransparency)
		updateLine(lines.LeftUpperLeg_to_LeftLowerLeg, parts.LeftUpperLeg, parts.LeftLowerLeg, playerColor, currentThickness, currentTransparency)
		updateLine(lines.LeftLowerLeg_to_LeftFoot, parts.LeftLowerLeg, parts.LeftFoot, playerColor, currentThickness, currentTransparency)

		-- Правая нога
		updateLine(lines.LowerTorso_to_RightUpperLeg, parts.LowerTorso, parts.RightUpperLeg, playerColor, currentThickness, currentTransparency)
		updateLine(lines.RightUpperLeg_to_RightLowerLeg, parts.RightUpperLeg, parts.RightLowerLeg, playerColor, currentThickness, currentTransparency)
		updateLine(lines.RightLowerLeg_to_RightFoot, parts.RightLowerLeg, parts.RightFoot, playerColor, currentThickness, currentTransparency)

		skeletonInfo.Frame.Visible = true
	end

	-- Обновление всех скелетов
	local function updateAllSkeletons()
		if not isActive then return end

		for character, skeletonInfo in pairs(skeletonData) do
			if character and character.Parent then
				updateSkeleton(skeletonInfo, character)
			else
				-- Удаление скелета если персонаж больше не существует
				if skeletonInfo.Frame then
					skeletonInfo.Frame:Destroy()
				end
				skeletonData[character] = nil
			end
		end
	end

	-- Удаление скелета
	local function removeSkeleton(character)
		local skeletonInfo = skeletonData[character]
		if skeletonInfo then
			if skeletonInfo.Frame then
				skeletonInfo.Frame:Destroy()
			end
			skeletonData[character] = nil
		end
	end

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function disconnectAll()
		for _, conn in pairs(connections) do
			if conn then conn:Disconnect() end
		end
		table.clear(connections)

		-- Удаление всех скелетов
		for character, _ in pairs(skeletonData) do
			removeSkeleton(character)
		end

		if skeletonGui then
			skeletonGui:Destroy()
			skeletonGui = nil
		end
	end

	local function checkAllPlayersForSkeleton()
		for _, otherPlayer in ipairs(Players:GetPlayers()) do
			if otherPlayer.Name ~= playerName and otherPlayer.Character then
				createSkeleton(otherPlayer.Character)
			end
		end
	end

	local function onCharacterAdded(character)
		if isActive then
			task.wait(0.1) -- Небольшая задержка для загрузки персонажа
			createSkeleton(character)
		end
	end

	local function onCharacterRemoving(character)
		if isActive then
			removeSkeleton(character)
		end
	end

	local function onDescendantAdded(descendant)
		if isActive and descendant:IsA("Model") and descendant:FindFirstChildWhichIsA("Humanoid") and descendant.Name ~= playerName then
			createSkeleton(descendant)
		end
	end

	local function startMonitoring()
		task.spawn(function()
			while isActive do
				checkAllPlayersForSkeleton()
				task.wait(1)
			end
		end)
	end

	local function startSkeletonESP()
		if not isActive then
			isActive = true
			createSkeletonGui()
			checkAllPlayersForSkeleton()
			startMonitoring()

			-- Подключение обновления в реальном времени
			connections["RenderStepped"] = RunService.RenderStepped:Connect(updateAllSkeletons)

			connections["PlayerAdded"] = Players.PlayerAdded:Connect(function(newPlayer)
				connections["CharacterAdded_" .. newPlayer.Name] = newPlayer.CharacterAdded:Connect(onCharacterAdded)
				connections["CharacterRemoving_" .. newPlayer.Name] = newPlayer.CharacterRemoving:Connect(onCharacterRemoving)
			end)

			connections["LocalCharacterAdded"] = player.CharacterAdded:Connect(function(character)
				playerCharacter = character
			end)

			-- Подключение для существующих игроков
			for _, plr in ipairs(Players:GetPlayers()) do
				if plr ~= player then
					connections["CharacterAdded_" .. plr.Name] = plr.CharacterAdded:Connect(onCharacterAdded)
					connections["CharacterRemoving_" .. plr.Name] = plr.CharacterRemoving:Connect(onCharacterRemoving)
				end
			end

			connections["DescendantAdded"] = workspace.DescendantAdded:Connect(onDescendantAdded)
		end
	end

	local function stopSkeletonESP()
		if isActive then
			isActive = false
			disconnectAll()
		end
	end

	-- ======== АВТОВКЛЮЧЕНИЕ, ЕСЛИ СОСТОЯНИЕ ВКЛЮЧЕНО ========
	if enabled.Value == true then
		startSkeletonESP()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		tweenGuiPosition(Carget, 0.545)
	end
	-- ===========================================================

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			startSkeletonESP()

			msg.Enabled(title, "Enabled", 2)

			enabled.Value = true
			player:SetAttribute("SkeletonESPEnabled", true) -- Сохраняем состояние
			script.Parent.Parent.Parent.Parent.Parent.Preview.Skeleton.Visible = true

			for _, f in ipairs(script.Parent.Parent.Parent.Parent.Parent.Preview.Skeleton:GetChildren()) do
				if f:IsA("GuiObject") then
					f.BackgroundColor3 = script.Parent.Parent.Parent.ColorVal.Value
				end
			end

			tweenGuiPosition(Carget, 0.545)
		else
			stopSkeletonESP()

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then array:Destroy() end

			msg.disabled(title, "Disabled", 2)
			script.Parent.Parent.Parent.Parent.Parent.Preview.Skeleton.Visible = false

			enabled.Value = false
			player:SetAttribute("SkeletonESPEnabled", false) -- Сохраняем состояние

			tweenGuiPosition(Carget, 0.065)
		end
	end)

end;
task.spawn(C_1a2);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Chams.Enable.TextButton.LocalScript
local function C_1ae()
	local script = G2L["1ae"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "SkeletonESPTeamCheck"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		enabled.Value = true
		script.Parent.Parent.Parent.Teamcheck2.Value = true
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end
		enabled.Value = false
		script.Parent.Parent.Parent.Teamcheck2.Value = false
		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			-- Если нет файла, создаём дефолтный выключенный конфиг
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_1ae);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
local function C_1be()
	local script = G2L["1be"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")
	local Lighting = game:GetService("Lighting")

	local title = "WorldColor"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	-- Источник цвета (Color3Value)
	local colorSource = script.Parent.Parent.Parent:FindFirstChild("ColorVal")
	if not colorSource or not colorSource:IsA("Color3Value") then
		warn("ColorVal (Color3Value) не найден!")
		return
	end

	-- Сохраняем изначальные значения освещения
	local originalAmbient = Lighting.Ambient
	local originalOutdoor = Lighting.OutdoorAmbient
	local originalTopShift = Lighting.ColorShift_Top
	local originalBottomShift = Lighting.ColorShift_Bottom

	-- Tween позиции GUI
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Применить цвет к Lighting из Color3Value
	local function applyLightingColor(color)
		if typeof(color) == "Color3" then
			Lighting.Ambient = color
			Lighting.OutdoorAmbient = color
			Lighting.ColorShift_Top = color
			Lighting.ColorShift_Bottom = color
		end
	end

	-- Постоянное обновление цвета, пока функция включена
	RunService.RenderStepped:Connect(function()
		if enabled and enabled.Value then
			applyLightingColor(colorSource.Value)
		end
	end)

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		-- Возвращаем освещение к исходным значениям
		Lighting.Ambient = originalAmbient
		Lighting.OutdoorAmbient = originalOutdoor
		Lighting.ColorShift_Top = originalTopShift
		Lighting.ColorShift_Bottom = originalBottomShift

		enabled.Value = false
		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_1be);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.TextBox.LocalScript
local function C_1cb()
	local script = G2L["1cb"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local textBox = script.Parent
	local colorVal = script.Parent.Parent:FindFirstChild("ColorVal")

	local title = "WorldColorCL"
	local category = "Visual"
	local key = "WorldColorCL"

	if not colorVal or not colorVal:IsA("Color3Value") then
		return
	end

	-- Функция преобразования Color3 в строку "R,G,B"
	local function color3ToString(color)
		return string.format("%d,%d,%d", math.floor(color.R * 255), math.floor(color.G * 255), math.floor(color.B * 255))
	end

	-- Загрузка цвета из конфига
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedColorStr = Config.Get(category, key)
			if savedColorStr then
				local r, g, b = savedColorStr:match("(%d+),(%d+),(%d+)")
				if r and g and b then
					r = tonumber(r)
					g = tonumber(g)
					b = tonumber(b)
					if r and g and b then
						local loadedColor = Color3.fromRGB(r, g, b)
						colorVal.Value = loadedColor
						textBox.Text = color3ToString(loadedColor)
					end
				end
			else
				textBox.Text = color3ToString(colorVal.Value)
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			end
		else
			textBox.Text = color3ToString(colorVal.Value)
			Config.Set(category, key, textBox.Text)
			Config.SaveConfig("default")
		end
	end)

	-- Сохраняем и применяем при завершении редактирования (Enter)
	textBox.FocusLost:Connect(function(enterPressed)
		if not enterPressed then return end

		local text = textBox.Text
		local r, g, b = text:match("(%d+)%s*,%s*(%d+)%s*,%s*(%d+)")
		if r and g and b then
			r = tonumber(r)
			g = tonumber(g)
			b = tonumber(b)
			if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
				local newColor = Color3.fromRGB(r, g, b)
				colorVal.Value = newColor
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			else
				-- Введено некорректное значение — вернуть предыдущее
				local prev = Config.Get(category, key)
				textBox.Text = prev or color3ToString(colorVal.Value)
			end
		else
			-- Некорректный формат — вернуть предыдущее значение
			local prev = Config.Get(category, key)
			textBox.Text = prev or color3ToString(colorVal.Value)
		end
	end)

end;
task.spawn(C_1cb);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
local function C_1cf()
	local script = G2L["1cf"];
	local TweenService = game:GetService("TweenService")

	local title = "FpsLabel"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local fpslabel = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.FpsLabel
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true
		fpslabel.Visible = true
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		enabled.Value = false
		fpslabel.Visible = false
		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_1cf);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
local function C_1dc()
	local script = G2L["1dc"];
	local TweenService = game:GetService("TweenService")

	local title = "CrosshairV2"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local crosshairGui = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.CrosshairV2
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true
		crosshairGui.Visible = true

		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		enabled.Value = false
		crosshairGui.Visible = false

		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_1dc);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
local function C_1e7()
	local script = G2L["1e7"];
	local TweenService = game:GetService("TweenService")

	local title = "Arraylist"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true
		arrayListFolder.Visible = true
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		enabled.Value = false
		arrayListFolder.Visible = false
		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_1e7);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
local function C_1f3()
	local script = G2L["1f3"];
	local TweenService = game:GetService("TweenService")

	local title = "Watermark"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local watermarkGui = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Old
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true
		watermarkGui.Visible = true
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		enabled.Value = false
		watermarkGui.Visible = false
		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_1f3);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
local function C_200()
	local script = G2L["200"];
	local TweenService = game:GetService("TweenService")

	local title = "StreamerMode"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	local playerGuiParent = script.Parent.Parent.Parent.Parent.Parent.Parent

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true

		playerGuiParent.Plr.TextLabel.Text = "XEScripts"
		playerGuiParent.Plr.Avatar.Image = "http://www.roblox.com/asset/?id=79944103986178"

		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		enabled.Value = false

		local player = game.Players.LocalPlayer
		playerGuiParent.Plr.TextLabel.Text = player.Name
		playerGuiParent.Plr.Avatar.Image = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png"

		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_200);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Other.Enable.TextButton.LocalScript
local function C_20c()
	local script = G2L["20c"];
	local TweenService = game:GetService("TweenService")

	local title = "FullBright"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local Lighting = game:GetService("Lighting")
	local def = Lighting.Brightness

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true
		Lighting.Brightness = 5

		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		enabled.Value = false
		Lighting.Brightness = def

		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_20c);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton.LocalScript
local function C_21b()
	local script = G2L["21b"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")

	local player = Players.LocalPlayer
	local playerName = player.Name

	local title = "Nametags"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	-- === NameTag функциональность === --
	local isActive = false

	local function updateNameTagVisibility(isVisible)
		for _, plr in ipairs(Players:GetPlayers()) do
			if plr.Character then
				local head = plr.Character:FindFirstChild("Head")
				if head then
					local nameTag = head:FindFirstChild("NameTag")
					if nameTag then
						nameTag.Enabled = isVisible
					end
				end
			end
		end
	end

	local function createNameTag(character)
		if not character or character.Name == playerName then return end
		local head = character:FindFirstChild("Head")
		if not head then return end

		local nameTag = head:FindFirstChild("NameTag")
		if not nameTag then
			nameTag = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.NameTag:Clone()
			nameTag.Name = "NameTag"
			nameTag.Parent = head
		end

		nameTag.TextLabel.Text = character.Name
		nameTag.TextLabel.TextColor3 = script.Parent.Parent.Parent.ColorVal.Value
		nameTag.TextLabel.TextTransparency = script.Parent.Parent.Parent.TransparencyVal.Value
		nameTag.Enabled = isActive
	end

	local function removeNameTag(character)
		local head = character:FindFirstChild("Head")
		if head then
			local nameTag = head:FindFirstChild("NameTag")
			if nameTag then
				nameTag:Destroy()
			end
		end
	end

	local function onCharacterAdded(character)
		if isActive then
			task.spawn(createNameTag, character)
		end
	end

	local function onCharacterRemoving(character)
		if isActive then
			task.spawn(removeNameTag, character)
		end
	end

	local function checkObjects()
		while isActive do
			for _, plr in ipairs(Players:GetPlayers()) do
				if plr.Character then
					local head = plr.Character:FindFirstChild("Head")
					local nameTag = head and head:FindFirstChild("NameTag")
					if not nameTag then
						createNameTag(plr.Character)
					end
				end
			end
			task.wait(1)
		end
	end

	local function initializeExistingCharacters()
		for _, plr in ipairs(Players:GetPlayers()) do
			if plr.Character then
				createNameTag(plr.Character)
			end
		end
	end

	local function startNameTags()
		if not isActive then
			isActive = true
			updateNameTagVisibility(true)
			initializeExistingCharacters()

			for _, plr in ipairs(Players:GetPlayers()) do
				plr.CharacterAdded:Connect(onCharacterAdded)
				plr.CharacterRemoving:Connect(onCharacterRemoving)
			end

			Players.PlayerAdded:Connect(function(plr)
				plr.CharacterAdded:Connect(onCharacterAdded)
				plr.CharacterRemoving:Connect(onCharacterRemoving)
			end)

			task.spawn(checkObjects)
		end
	end

	local function stopNameTags()
		if isActive then
			isActive = false
			updateNameTagVisibility(false)
		end
	end

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		startNameTags()

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true
		script.Parent.Parent.Parent.Parent.Parent.Preview.Nametag.Visible = true
		script.Parent.Parent.Parent.Parent.Parent.Preview.Nametag.TextColor3 = script.Parent.Parent.Parent.ColorVal.Value
		script.Parent.Parent.Parent.Parent.Parent.Preview.Nametag.TextTransparency = script.Parent.Parent.Parent.TransparencyVal.Value
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		stopNameTags()

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		enabled.Value = false
		script.Parent.Parent.Parent.Parent.Parent.Preview.Nametag.Visible = false
		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_21b);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Enable.TextButton.LocalScript
local function C_228()
	local script = G2L["228"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "nametagteamcheck"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		enabled.Value = true
		script.Parent.Parent.Parent.Teamcheck.Value = true
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end
		enabled.Value = false
		script.Parent.Parent.Parent.Teamcheck.Value = false -- исправлено
		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_228);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Transparency.Carget.TextButton.LocalScript
local function C_239()
	local script = G2L["239"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local sliderFrame = script.Parent.Parent -- Перетаскиваем именно этот объект
	local mainFrame = sliderFrame.Parent -- Родитель фрейма
	local transparencyVal = mainFrame.Parent:FindFirstChild("TransparencyVal")
	local label = mainFrame:FindFirstChild("TextLabel")
	local title = "NameTagTransparency"

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local category = "Visual"
	local key = title

	-- Состояние
	local dragging = false
	local defaultValue = 0
	local maxXScale = 0.905 -- ограничение по X

	-- Установка значения Transparency и позиции
	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- это значение от 0 до 0.905
		local transparency = math.clamp(relX / (parentAbsSize * maxXScale), 0, 1) -- нормализуем до 1

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0.2, 0)
		transparencyVal.Value = transparency
		label.Text = string.format("Transparency: %.2f", transparency)

		-- Сохраняем значение в конфиг
		Config.Set(category, key, transparency)
		Config.SaveConfig("default")
	end

	-- Загрузка значения из конфига и инициализация
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedValue = Config.Get(category, key)
			if type(savedValue) == "number" then
				defaultValue = savedValue
			end
		end

		transparencyVal.Value = defaultValue
		label.Text = string.format("Transparency: %.2f", defaultValue)

		local parentAbsSize = mainFrame.AbsoluteSize.X
		-- Устанавливаем позицию с учётом сохранённого значения
		sliderFrame.Position = UDim2.new(defaultValue * maxXScale, 0, 0.2, 0)
	end)

	-- Начало перетаскивания
	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	-- Конец перетаскивания
	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Перетаскивание
	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)

end;
task.spawn(C_239);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.Thickness.Carget.TextButton.LocalScript
local function C_242()
	local script = G2L["242"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local sliderFrame = script.Parent.Parent -- Перетаскиваем именно этот объект
	local mainFrame = sliderFrame.Parent -- Родитель фрейма
	local thicknessVal = mainFrame.Parent:FindFirstChild("ThicknessVal")
	local label = mainFrame:FindFirstChild("TextLabel")

	-- Проверки
	if not thicknessVal or not thicknessVal:IsA("NumberValue") then
		return
	end

	if not label or not label:IsA("TextLabel") then
		return
	end

	-- Состояние
	local dragging = false
	local defaultValue = 2
	local maxXScale = 0.905 -- ограничение по X

	-- Функция интерполяции от 0..1 к 1..10
	local function lerp(min, max, t)
		return min + (max - min) * t
	end

	-- Установка значения Thickness и позиции
	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- 0..0.905
		local normalized = relX / (parentAbsSize * maxXScale) -- 0..1

		local thickness = lerp(0, 10, normalized) -- преобразуем 0..1 в 1..10

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		thicknessVal.Value = thickness
		label.Text = string.format("Thickness: %.2f", thickness)
	end

	-- Установка дефолтного состояния
	sliderFrame.Position = UDim2.new(0.18, 0, 0)
	thicknessVal.Value = defaultValue
	label.Text = string.format("Thickness: %.2f", defaultValue)

	-- Начало перетаскивания
	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	-- Конец перетаскивания
	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Перетаскивание
	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)
end;
task.spawn(C_242);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Nametags.TextBox.LocalScript
local function C_246()
	local script = G2L["246"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local textBox = script.Parent
	local colorVal = script.Parent.Parent:FindFirstChild("ColorVal")

	local title = "NametagColor"
	local category = "Visual"
	local key = "NametagColor"

	if not colorVal or not colorVal:IsA("Color3Value") then
		return
	end

	-- Функция преобразования Color3 в строку "R,G,B"
	local function color3ToString(color)
		return string.format("%d,%d,%d", math.floor(color.R * 255), math.floor(color.G * 255), math.floor(color.B * 255))
	end

	-- Загрузка цвета из конфига
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedColorStr = Config.Get(category, key)
			if savedColorStr then
				local r, g, b = savedColorStr:match("(%d+),(%d+),(%d+)")
				if r and g and b then
					r = tonumber(r)
					g = tonumber(g)
					b = tonumber(b)
					if r and g and b then
						local loadedColor = Color3.fromRGB(r, g, b)
						colorVal.Value = loadedColor
						textBox.Text = color3ToString(loadedColor)
					end
				end
			else
				textBox.Text = color3ToString(colorVal.Value)
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			end
		else
			textBox.Text = color3ToString(colorVal.Value)
			Config.Set(category, key, textBox.Text)
			Config.SaveConfig("default")
		end
	end)

	-- Сохраняем и применяем при завершении редактирования (Enter)
	textBox.FocusLost:Connect(function(enterPressed)
		if not enterPressed then return end

		local text = textBox.Text
		local r, g, b = text:match("(%d+)%s*,%s*(%d+)%s*,%s*(%d+)")
		if r and g and b then
			r = tonumber(r)
			g = tonumber(g)
			b = tonumber(b)
			if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
				local newColor = Color3.fromRGB(r, g, b)
				colorVal.Value = newColor
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			else
				-- Введено некорректное значение — вернуть предыдущее
				local prev = Config.Get(category, key)
				textBox.Text = prev or color3ToString(colorVal.Value)
			end
		else
			-- Некорректный формат — вернуть предыдущее значение
			local prev = Config.Get(category, key)
			textBox.Text = prev or color3ToString(colorVal.Value)
		end
	end)

end;
task.spawn(C_246);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
local function C_24e()
	local script = G2L["24e"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "Shadows"
	local category = "Visual"  -- например, категория
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local def = game.Lighting.GlobalShadows
	local message = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		enabled.Value = true
		game.Lighting.GlobalShadows = true

		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		message.enabled(title, "Enabled", 2)
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		game.Lighting.GlobalShadows = false
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		message.disabled(title, "Disabled", 2)

		enabled.Value = false

		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка
	task.defer(function()
		Config.LoadConfig("default")
		if Config.IsEnabled(category, title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_24e);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
local function C_25d()
	local script = G2L["25d"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")

	local LocalPlayer = Players.LocalPlayer

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	-- Настройки
	local TITLE = "Trails"
	local CATEGORY = "Visual"
	local TWEEN_INFO = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	-- Кэшированные элементы UI
	local button = script.Parent.Parent
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local carget = button:FindFirstChild("Carget")
	local colorVal = script.Parent.Parent.Parent:WaitForChild("ColorVal")

	-- Состояние трейлов
	local currentTrails = {}
	local colorConnection = nil
	local animationConnection = nil

	-- Конфигурация трейлов
	local TRAIL_CONFIGS = {
		main = {
			lifetime = 1.2,
			minLength = 0.15,
			widthScale = NumberSequence.new{
				NumberSequenceKeypoint.new(0, 0.8),
				NumberSequenceKeypoint.new(0.3, 1.2),
				NumberSequenceKeypoint.new(0.7, 0.6),
				NumberSequenceKeypoint.new(1, 0)
			},
			transparency = NumberSequence.new{
				NumberSequenceKeypoint.new(0, 0),
				NumberSequenceKeypoint.new(0.4, 0.2),
				NumberSequenceKeypoint.new(0.8, 0.7),
				NumberSequenceKeypoint.new(1, 1)
			},
			lightEmission = 0.8,
			position = {Vector3.new(-0.5, 0, 0), Vector3.new(0.5, 0, 0)}
		},
		side = {
			lifetime = 0.8,
			minLength = 0.1,
			widthScale = NumberSequence.new{
				NumberSequenceKeypoint.new(0, 0.4),
				NumberSequenceKeypoint.new(0.5, 0.6),
				NumberSequenceKeypoint.new(1, 0)
			},
			transparency = NumberSequence.new{
				NumberSequenceKeypoint.new(0, 0.3),
				NumberSequenceKeypoint.new(0.6, 0.6),
				NumberSequenceKeypoint.new(1, 1)
			},
			lightEmission = 0.6,
			position = {Vector3.new(-1, 0.5, 0), Vector3.new(1, 0.5, 0)}
		},
		glow = {
			lifetime = 1.5,
			minLength = 0.05,
			widthScale = NumberSequence.new{
				NumberSequenceKeypoint.new(0, 1.5),
				NumberSequenceKeypoint.new(0.2, 2),
				NumberSequenceKeypoint.new(0.8, 1),
				NumberSequenceKeypoint.new(1, 0)
			},
			transparency = NumberSequence.new{
				NumberSequenceKeypoint.new(0, 0.8),
				NumberSequenceKeypoint.new(0.3, 0.9),
				NumberSequenceKeypoint.new(1, 1)
			},
			lightEmission = 1,
			position = {Vector3.new(0, -0.5, 0), Vector3.new(0, 1.5, 0)}
		}
	}

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			TweenService:Create(guiObject, TWEEN_INFO, goal):Play()
		end
	end

	local function removeTrails()
		if animationConnection then
			animationConnection:Disconnect()
			animationConnection = nil
		end

		local character = LocalPlayer.Character
		if character then
			local root = character:FindFirstChild("HumanoidRootPart")
			if root then
				for _, obj in ipairs(root:GetChildren()) do
					if obj:IsA("Trail") and obj.Name:match("Trail_") or 
						(obj:IsA("Attachment") and obj.Name:match("TrailAttachment")) then
						obj:Destroy()
					end
				end
			end
		end

		currentTrails = {}
	end

	local function createBeautifulTrails()
		local character = LocalPlayer.Character
		if not character then return end

		local root = character:FindFirstChild("HumanoidRootPart")
		if not root then return end

		removeTrails()

		for configName, config in pairs(TRAIL_CONFIGS) do
			local att0 = Instance.new("Attachment")
			att0.Name = "TrailAttachment0_" .. configName
			att0.Position = config.position[1]
			att0.Parent = root

			local att1 = Instance.new("Attachment")
			att1.Name = "TrailAttachment1_" .. configName
			att1.Position = config.position[2]
			att1.Parent = root

			local trail = Instance.new("Trail")
			trail.Name = "Trail_" .. configName
			trail.Attachment0 = att0
			trail.Attachment1 = att1
			trail.Lifetime = config.lifetime
			trail.MinLength = config.minLength
			trail.WidthScale = config.widthScale
			trail.Transparency = config.transparency
			trail.LightEmission = config.lightEmission
			trail.FaceCamera = true
			trail.Parent = root

			local baseColor = colorVal.Value or Color3.fromRGB(255, 255, 255)
			if configName == "glow" then
				local h, s, v = baseColor:ToHSV()
				baseColor = Color3.fromHSV(h, s * 0.7, math.min(v * 1.3, 1))
			end
			trail.Color = ColorSequence.new(baseColor)

			currentTrails[configName] = trail
		end

		local startTime = tick()
		animationConnection = RunService.Heartbeat:Connect(function()
			local elapsed = tick() - startTime
			local pulse = math.sin(elapsed * 4) * 0.2 + 0.8

			if currentTrails.glow then
				currentTrails.glow.LightEmission = pulse
			end

			if currentTrails.main then
				local widthMultiplier = math.sin(elapsed * 2) * 0.1 + 0.9
				currentTrails.main.WidthScale = NumberSequence.new{
					NumberSequenceKeypoint.new(0, 0.8 * widthMultiplier),
					NumberSequenceKeypoint.new(0.3, 1.2 * widthMultiplier),
					NumberSequenceKeypoint.new(0.7, 0.6 * widthMultiplier),
					NumberSequenceKeypoint.new(1, 0)
				}
			end
		end)
	end

	local function updateTrailColors()
		if not colorVal.Value then return end

		for configName, trail in pairs(currentTrails) do
			if trail and trail.Parent then
				local baseColor = colorVal.Value

				if configName == "glow" then
					local h, s, v = baseColor:ToHSV()
					baseColor = Color3.fromHSV(h, s * 0.5, math.min(v * 1.5, 1))
				elseif configName == "side" then
					local h, s, v = baseColor:ToHSV()
					baseColor = Color3.fromHSV(h, s * 1.1, v * 0.8)
				end

				trail.Color = ColorSequence.new(baseColor)
			end
		end
	end

	LocalPlayer.CharacterAdded:Connect(function()
		if enabled.Value then
			task.wait(1)
			createBeautifulTrails()
		end
	end)

	colorConnection = colorVal.Changed:Connect(updateTrailColors)

	local function enableFeature()
		local clone = arrayListFolder:FindFirstChild("Example")
		if clone then
			local array = clone:Clone()
			array.Name = TITLE
			array.TextLabel.Text = TITLE
			array.Visible = true
			array.Parent = arrayListFolder
		end

		TweenService:Create(button, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if carget then
			TweenService:Create(carget, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			tweenGuiPosition(carget, 0.545)
		end

		if msg and msg.Enabled then
			msg.Enabled(TITLE, "Enabled", 1.5)
		end

		enabled.Value = true
		createBeautifulTrails()
		Config.SetEnabled(CATEGORY, TITLE, true)
		Config.SaveConfig("default")
	end

	local function disableFeature()
		removeTrails()

		TweenService:Create(button, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if carget then
			TweenService:Create(carget, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			tweenGuiPosition(carget, 0.065)
		end

		local existing = arrayListFolder:FindFirstChild(TITLE)
		if existing then
			existing:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(TITLE, "Disabled", 1.5)
		end

		enabled.Value = false
		Config.SetEnabled(CATEGORY, TITLE, false)
		Config.SaveConfig("default")
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(CATEGORY, TITLE) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(CATEGORY, TITLE, false)
			Config.SaveConfig("default")
		end
	end)

	script.AncestryChanged:Connect(function()
		if not script.Parent then
			removeTrails()
			if colorConnection then
				colorConnection:Disconnect()
			end
		end
	end)

end;
task.spawn(C_25d);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.TextBox.LocalScript
local function C_266()
	local script = G2L["266"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local textBox = script.Parent
	local colorVal = script.Parent.Parent:FindFirstChild("ColorVal")

	local title = "TrailsColor"
	local category = "Visual"
	local key = "TrailsColor"

	if not colorVal or not colorVal:IsA("Color3Value") then
		return
	end

	-- Функция преобразования Color3 в строку "R,G,B"
	local function color3ToString(color)
		return string.format("%d,%d,%d", math.floor(color.R * 255), math.floor(color.G * 255), math.floor(color.B * 255))
	end

	-- Загрузка цвета из конфига
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedColorStr = Config.Get(category, key)
			if savedColorStr then
				local r, g, b = savedColorStr:match("(%d+),(%d+),(%d+)")
				if r and g and b then
					r = tonumber(r)
					g = tonumber(g)
					b = tonumber(b)
					if r and g and b then
						local loadedColor = Color3.fromRGB(r, g, b)
						colorVal.Value = loadedColor
						textBox.Text = color3ToString(loadedColor)
					end
				end
			else
				textBox.Text = color3ToString(colorVal.Value)
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			end
		else
			textBox.Text = color3ToString(colorVal.Value)
			Config.Set(category, key, textBox.Text)
			Config.SaveConfig("default")
		end
	end)

	-- Сохраняем и применяем при завершении редактирования (Enter)
	textBox.FocusLost:Connect(function(enterPressed)
		if not enterPressed then return end

		local text = textBox.Text
		local r, g, b = text:match("(%d+)%s*,%s*(%d+)%s*,%s*(%d+)")
		if r and g and b then
			r = tonumber(r)
			g = tonumber(g)
			b = tonumber(b)
			if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
				local newColor = Color3.fromRGB(r, g, b)
				colorVal.Value = newColor
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			else
				-- Введено некорректное значение — вернуть предыдущее
				local prev = Config.Get(category, key)
				textBox.Text = prev or color3ToString(colorVal.Value)
			end
		else
			-- Некорректный формат — вернуть предыдущее значение
			local prev = Config.Get(category, key)
			textBox.Text = prev or color3ToString(colorVal.Value)
		end
	end)

end;
task.spawn(C_266);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
local function C_26c()
	local script = G2L["26c"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")

	local title = "NoFog"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- сохраняем оригинальные значения тумана
	local originalFogStart = game.Lighting.FogStart
	local originalFogEnd = game.Lighting.FogEnd
	local originalAtmosphere = nil
	if game.Lighting:FindFirstChild("Atmosphere") then
		originalAtmosphere = game.Lighting.Atmosphere:Clone()
	end

	local fogConnection -- для RenderStepped

	local message = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		enabled.Value = true

		-- удаляем атмосферу
		local atmosphere = game.Lighting:FindFirstChild("Atmosphere")
		if atmosphere then
			atmosphere:Destroy()
		end

		-- постоянный анти-фог
		fogConnection = RunService.RenderStepped:Connect(function()
			game.Lighting.FogStart = 0
			game.Lighting.FogEnd = 1000000
		end)

		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		message.enabled(title, "Enabled", 2)
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		-- отключаем обновление
		if fogConnection then
			fogConnection:Disconnect()
			fogConnection = nil
		end

		-- возвращаем оригинальные значения
		game.Lighting.FogStart = originalFogStart
		game.Lighting.FogEnd = originalFogEnd
		if originalAtmosphere then
			local existing = game.Lighting:FindFirstChild("Atmosphere")
			if existing then existing:Destroy() end
			originalAtmosphere:Clone().Parent = game.Lighting
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		message.disabled(title, "Disabled", 2)

		enabled.Value = false

		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка
	task.defer(function()
		Config.LoadConfig("default")
		if Config.IsEnabled(category, title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_26c);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
local function C_278()
	local script = G2L["278"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")

	local title = "NoAtmosphere"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- сохраняем оригинальные значения Atmosphere (если есть)
	local originalAtmosphereProps = {}
	local function saveAtmosphere()
		local atmosphere = game.Lighting:FindFirstChild("Atmosphere")
		if atmosphere then
			for _, prop in ipairs({"Density", "Offset", "Color", "Decay", "Glare", "Haze"}) do
				if atmosphere[prop] ~= nil then
					originalAtmosphereProps[prop] = atmosphere[prop]
				end
			end
		end
	end
	saveAtmosphere()

	local atmosphereConnection -- для RenderStepped

	local message = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function nullifyAtmosphere()
		local atmosphere = game.Lighting:FindFirstChild("Atmosphere")
		if atmosphere then
			atmosphere.Density = 0
			atmosphere.Offset = 0
			atmosphere.Color = Color3.new(1, 1, 1)
			atmosphere.Decay = Color3.new(1, 1, 1)
			atmosphere.Glare = 0
			atmosphere.Haze = 0
		end
	end

	local function restoreAtmosphere()
		local atmosphere = game.Lighting:FindFirstChild("Atmosphere")
		if atmosphere and next(originalAtmosphereProps) ~= nil then
			for prop, val in pairs(originalAtmosphereProps) do
				atmosphere[prop] = val
			end
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		enabled.Value = true

		-- каждый кадр обнуляем атмосферу
		atmosphereConnection = RunService.RenderStepped:Connect(function()
			nullifyAtmosphere()
		end)

		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		message.enabled(title, "Enabled", 2)
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		-- перестаём обнулять
		if atmosphereConnection then
			atmosphereConnection:Disconnect()
			atmosphereConnection = nil
		end

		-- возвращаем оригинальные параметры
		restoreAtmosphere()

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		message.disabled(title, "Disabled", 2)

		enabled.Value = false

		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка
	task.defer(function()
		Config.LoadConfig("default")
		if Config.IsEnabled(category, title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_278);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Optimizer.Enable.TextButton.LocalScript
local function C_284()
	local script = G2L["284"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")

	local title = "WhiteFog"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- сохраняем оригинальные значения Color и Decay
	local originalAtmosphereProps = {}
	local function saveAtmosphere()
		local atmosphere = game.Lighting:FindFirstChild("Atmosphere")
		if atmosphere then
			if atmosphere.Color ~= nil then
				originalAtmosphereProps.Color = atmosphere.Color
			end
			if atmosphere.Decay ~= nil then
				originalAtmosphereProps.Decay = atmosphere.Decay
			end
		end
	end
	saveAtmosphere()

	local atmosphereConnection -- для RenderStepped

	local message = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- функция для аннулирования
	local function nullifyAtmosphere()
		local atmosphere = game.Lighting:FindFirstChild("Atmosphere")
		if atmosphere then
			atmosphere.Color = Color3.fromRGB(255, 255, 255)
			atmosphere.Decay = Color3.fromRGB(255, 255, 255)
		end
	end

	-- функция восстановления
	local function restoreAtmosphere()
		local atmosphere = game.Lighting:FindFirstChild("Atmosphere")
		if atmosphere then
			if originalAtmosphereProps.Color then
				atmosphere.Color = originalAtmosphereProps.Color
			end
			if originalAtmosphereProps.Decay then
				atmosphere.Decay = originalAtmosphereProps.Decay
			end
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		enabled.Value = true

		-- каждый кадр обновляем Color и Decay
		atmosphereConnection = RunService.RenderStepped:Connect(function()
			nullifyAtmosphere()
		end)

		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		message.enabled(title, "Enabled", 2)
		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		if atmosphereConnection then
			atmosphereConnection:Disconnect()
			atmosphereConnection = nil
		end

		-- возвращаем оригинальные Color и Decay
		restoreAtmosphere()

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		message.disabled(title, "Disabled", 2)

		enabled.Value = false

		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")
		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка
	task.defer(function()
		Config.LoadConfig("default")
		if Config.IsEnabled(category, title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_284);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.LocalScript
local function C_293()
	local script = G2L["293"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")
	local Workspace = game:GetService("Workspace")

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local title = "FovChanger"
	local category = "Visual" -- Добавь свою категорию, если хочешь
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function getTargetFOV()
		return script.Parent.Parent.Parent.TransparencyVal.Value
	end

	local function forceSetFOV()
		local cam = Workspace.CurrentCamera
		if cam and enabled.Value then
			cam.FieldOfView = getTargetFOV()
		end
	end

	local function enableFeature()
		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local array = example:Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 1.5)
		end

		enabled.Value = true
		forceSetFOV()

		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		local cam = Workspace.CurrentCamera
		if cam then
			cam.FieldOfView = 70
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 1.5)
		end

		enabled.Value = false

		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	RunService.RenderStepped:Connect(function()
		if enabled.Value and script.Parent.Parent.Parent.Teamcheck.Value then
			forceSetFOV()
		end
	end)

	Workspace:GetPropertyChangedSignal("CurrentCamera"):Connect(function()
		if enabled.Value then
			task.wait()
			forceSetFOV()
		end
	end)

	local cam = script.Parent.Parent.Parent.Preview.CurrentCamera
	if not cam then
		cam = Instance.new("Camera")
		cam.Name = "Camera"
		cam.FieldOfView = 70
		cam.CFrame = CFrame.new(0, 0, -0.5)
		cam.Parent = script.Parent.Parent.Parent.Preview
		script.Parent.Parent.Parent.Preview.CurrentCamera = cam
	end

	script.Parent.Parent.Parent.TransparencyVal:GetPropertyChangedSignal("Value"):Connect(function()
		local newVal = script.Parent.Parent.Parent.TransparencyVal.Value
		script.Parent.Parent.Parent.Preview.CurrentCamera.FieldOfView = newVal
	end)

	script.Parent.Parent.Parent.MouseEnter:Connect(function()
		script.Parent.Parent.Parent.Preview.Visible = true
	end)

	script.Parent.Parent.Parent.MouseLeave:Connect(function()
		script.Parent.Parent.Parent.Preview.Visible = false
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled(category, title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_293);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.LocalScript
local function C_2a0()
	local script = G2L["2a0"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "FovChangeBypass"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		enabled.Value = true
		script.Parent.Parent.Parent.Teamcheck.Value = true

		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		Config.SetEnabled(category, title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end
		enabled.Value = false
		script.Parent.Parent.Parent.Teamcheck.Value = false

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		Config.SetEnabled(category, title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния из конфига при запуске
	task.defer(function()
		Config.LoadConfig("default")
		if Config.IsEnabled(category, title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_2a0);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.TextButton.LocalScript
local function C_2b0()
	local script = G2L["2b0"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local title = "fovchangefov"
	local category = "Misc"

	local sliderFrame = script.Parent.Parent -- Перетаскиваем именно этот объект
	local mainFrame = sliderFrame.Parent -- Родитель фрейма
	local transparencyVal = mainFrame.Parent:FindFirstChild("TransparencyVal")
	local label = mainFrame:FindFirstChild("TextLabel")

	if not transparencyVal or not transparencyVal:IsA("NumberValue") then return end
	if not label or not label:IsA("TextLabel") then return end

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local dragging = false
	local maxXScale = 0.905 -- ограничение по X

	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- от 0 до 0.905

		local value = math.clamp(math.floor((relX / (parentAbsSize * maxXScale)) * 119) + 1, 1, 120)

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		transparencyVal.Value = value
		label.Text = string.format("Fov: %d", value)
	end

	-- Загрузка значения из конфига
	local function loadValue()
		if Config.LoadConfig and type(Config.LoadConfig) == "function" then
			Config.LoadConfig("default")
		end

		local savedValue = nil
		if Config.GetValue and type(Config.GetValue) == "function" then
			savedValue = Config.GetValue(category, title)
		end

		if savedValue and type(savedValue) == "number" then
			local parentAbsSize = mainFrame.AbsoluteSize.X
			local scaleWithinLimit = (savedValue - 1) / 119 * maxXScale
			sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
			transparencyVal.Value = savedValue
			label.Text = string.format("Fov: %d", savedValue)
		else
			-- Если нет сохранения — дефолт
			local defaultValue = 70
			sliderFrame.Position = UDim2.new(0, 0, 0, 0)
			transparencyVal.Value = defaultValue
			label.Text = string.format("Fov: %d", defaultValue)
		end
	end

	-- Сохранение значения в конфиг
	local function saveValue()
		if Config.SetValue and type(Config.SetValue) == "function" then
			Config.SetValue(category, title, transparencyVal.Value)
		end
		if Config.SaveConfig and type(Config.SaveConfig) == "function" then
			Config.SaveConfig("default")
		end
	end

	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
			saveValue()  -- сохраняем при отпускании мыши
		end
	end)

	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)

	-- Автозагрузка при старте
	task.defer(loadValue)

end;
task.spawn(C_2b0);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.TextBox.LocalScript
local function C_2b5()
	local script = G2L["2b5"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local textBox = script.Parent
	local colorVal = script.Parent.Parent:FindFirstChild("ColorVal")

	local title = "JumpCircleColor"
	local category = "Visual"
	local key = "JumpCircleColor"

	if not colorVal or not colorVal:IsA("Color3Value") then
		return
	end

	-- Функция преобразования Color3 в строку "R,G,B"
	local function color3ToString(color)
		return string.format("%d,%d,%d", math.floor(color.R * 255), math.floor(color.G * 255), math.floor(color.B * 255))
	end

	-- Загрузка цвета из конфига
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedColorStr = Config.Get(category, key)
			if savedColorStr then
				local r, g, b = savedColorStr:match("(%d+),(%d+),(%d+)")
				if r and g and b then
					r = tonumber(r)
					g = tonumber(g)
					b = tonumber(b)
					if r and g and b then
						local loadedColor = Color3.fromRGB(r, g, b)
						colorVal.Value = loadedColor
						textBox.Text = color3ToString(loadedColor)
					end
				end
			else
				textBox.Text = color3ToString(colorVal.Value)
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			end
		else
			textBox.Text = color3ToString(colorVal.Value)
			Config.Set(category, key, textBox.Text)
			Config.SaveConfig("default")
		end
	end)

	-- Сохраняем и применяем при завершении редактирования (Enter)
	textBox.FocusLost:Connect(function(enterPressed)
		if not enterPressed then return end

		local text = textBox.Text
		local r, g, b = text:match("(%d+)%s*,%s*(%d+)%s*,%s*(%d+)")
		if r and g and b then
			r = tonumber(r)
			g = tonumber(g)
			b = tonumber(b)
			if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
				local newColor = Color3.fromRGB(r, g, b)
				colorVal.Value = newColor
				Config.Set(category, key, textBox.Text)
				Config.SaveConfig("default")
			else
				-- Введено некорректное значение — вернуть предыдущее
				local prev = Config.Get(category, key)
				textBox.Text = prev or color3ToString(colorVal.Value)
			end
		else
			-- Некорректный формат — вернуть предыдущее значение
			local prev = Config.Get(category, key)
			textBox.Text = prev or color3ToString(colorVal.Value)
		end
	end)

end;
task.spawn(C_2b5);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.LocalScript
local function C_2bc()
	local script = G2L["2bc"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local Debris = game:GetService("Debris")
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local LocalPlayer = Players.LocalPlayer

	-- Настройки
	local TITLE = "JumpCircle"
	local TWEEN_INFO = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	-- Улучшенные настройки анимации
	local ENHANCED_SETTINGS = {
		TOTAL_DURATION = 4.5,
		APPEAR_DURATION = 1.0,
		FADE_DURATION = 2.0,
		FADE_POWER = 3 -- Уменьшил для более плавного затухания
	}

	-- Создание или получение папки XeObj в workspace
	local function getXeObjFolder()
		local folder = workspace:FindFirstChild("XeObj")
		if not folder then
			folder = Instance.new("Folder")
			folder.Name = "XeObj"
			folder.Parent = workspace
		end
		return folder
	end

	-- Генерация случайного имени
	local function generateRandomName()
		return "xes_" .. math.random(100000, 5000000)
	end

	-- Кэшированные элементы UI
	local button = script.Parent.Parent
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local carget = button:FindFirstChild("Carget")
	local colorVal = script.Parent.Parent.Parent:WaitForChild("ColorVal")

	-- Состояние эффектов
	local currentEffects = {}
	local colorConnection = nil
	local jumpConnection = nil
	local activeAnimations = {} -- Отслеживание активных анимаций

	-- Анимировать позицию GUI
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			TweenService:Create(guiObject, TWEEN_INFO, goal):Play()
		end
	end

	-- Создать сферическое кольцо из блоков
	local function createRingOfBlocks(position, radius, blockCount, blockSize, color, transparency, material, parentFolder)
		local blocks = {}
		local angleStep = (2 * math.pi) / blockCount

		for i = 1, blockCount do
			local angle = angleStep * i
			local x = position.X + radius * math.cos(angle)
			local z = position.Z + radius * math.sin(angle)
			local blockPos = Vector3.new(x, position.Y, z)

			local block = Instance.new("Part")
			block.Name = generateRandomName()
			block.Size = Vector3.new(0, 0, 0) -- Начинаем с нулевого размера
			block.CFrame = CFrame.new(blockPos, position)
			block.Material = material
			block.Color = color
			block.Transparency = 1 -- Начинаем полностью прозрачными
			block.CanCollide = false
			block.Anchored = true
			block.Shape = Enum.PartType.Block
			block.TopSurface = Enum.SurfaceType.Smooth
			block.BottomSurface = Enum.SurfaceType.Smooth

			-- Добавляем свечение
			local light = Instance.new("PointLight")
			light.Color = color
			light.Brightness = 0 -- Начинаем с нулевой яркости
			light.Range = radius * 0.8
			light.Parent = block

			-- Отключаем тени
			block.CastShadow = false

			-- Сохраняем целевые значения как атрибуты
			block:SetAttribute("TargetSizeX", blockSize)
			block:SetAttribute("TargetSizeY", blockSize * 0.3)
			block:SetAttribute("TargetSizeZ", blockSize)
			block:SetAttribute("TargetTransparency", transparency)
			block:SetAttribute("TargetBrightness", 2)

			block.Parent = parentFolder
			table.insert(blocks, block)
		end

		return blocks
	end

	-- Создать центральную сферу
	local function createCenterSphere(position, size, color, transparency, material, parentFolder)
		local sphere = Instance.new("Part")
		sphere.Name = generateRandomName()
		sphere.Size = Vector3.new(0, 0, 0) -- Начинаем с нулевого размера
		sphere.CFrame = CFrame.new(position)
		sphere.Material = material
		sphere.Color = color
		sphere.Transparency = 1 -- Начинаем полностью прозрачной
		sphere.CanCollide = false
		sphere.Anchored = true
		sphere.Shape = Enum.PartType.Ball
		sphere.TopSurface = Enum.SurfaceType.Smooth
		sphere.BottomSurface = Enum.SurfaceType.Smooth

		-- Свечение для центра
		local light = Instance.new("PointLight")
		light.Color = color
		light.Brightness = 0 -- Начинаем с нулевой яркости
		light.Range = size * 3
		light.Parent = sphere

		-- Отключаем тени
		sphere.CastShadow = false

		-- Сохраняем целевые значения
		sphere:SetAttribute("TargetSize", size)
		sphere:SetAttribute("TargetTransparency", transparency)
		sphere:SetAttribute("TargetBrightness", 4)

		-- Вращающееся кольцо внутри сферы
		local innerRing = Instance.new("Part")
		innerRing.Name = generateRandomName()
		innerRing.Size = Vector3.new(0.2, 0, 0) -- Начинаем с нулевого размера
		innerRing.CFrame = CFrame.new(position)
		innerRing.Material = Enum.Material.Neon
		innerRing.Color = color
		innerRing.Transparency = 1 -- Начинаем полностью прозрачным
		innerRing.CanCollide = false
		innerRing.Anchored = true
		innerRing.Shape = Enum.PartType.Cylinder

		-- Сохраняем целевые значения
		innerRing:SetAttribute("TargetSizeY", size * 0.8)
		innerRing:SetAttribute("TargetSizeZ", size * 0.8)
		innerRing:SetAttribute("TargetTransparency", 0.3)

		-- Отключаем тени
		innerRing.CastShadow = false

		sphere.Parent = parentFolder
		innerRing.Parent = parentFolder
		return sphere, innerRing
	end

	-- Создать энергетические столбы
	local function createEnergyPillars(position, radius, pillarCount, height, color, transparency, parentFolder)
		local pillars = {}
		local angleStep = (2 * math.pi) / pillarCount

		for i = 1, pillarCount do
			local angle = angleStep * i
			local x = position.X + radius * math.cos(angle)
			local z = position.Z + radius * math.sin(angle)
			local pillarPos = Vector3.new(x, position.Y, z)

			local pillar = Instance.new("Part")
			pillar.Name = generateRandomName()
			pillar.Size = Vector3.new(0, 0, 0) -- Начинаем с нулевого размера
			pillar.CFrame = CFrame.new(pillarPos)
			pillar.Material = Enum.Material.Neon
			pillar.Color = color
			pillar.Transparency = 1 -- Начинаем полностью прозрачным
			pillar.CanCollide = false
			pillar.Anchored = true
			pillar.Shape = Enum.PartType.Block

			-- Лазерный луч
			local beam = Instance.new("Part")
			beam.Name = generateRandomName()
			beam.Size = Vector3.new(0, 0, 0) -- Начинаем с нулевого размера
			beam.CFrame = CFrame.new(pillarPos)
			beam.Material = Enum.Material.Neon
			beam.Color = Color3.new(1, 1, 1)
			beam.Transparency = 1 -- Начинаем полностью прозрачным
			beam.CanCollide = false
			beam.Anchored = true
			beam.Shape = Enum.PartType.Cylinder

			-- Сохраняем целевые значения
			pillar:SetAttribute("TargetSizeX", 0.3)
			pillar:SetAttribute("TargetSizeY", height)
			pillar:SetAttribute("TargetSizeZ", 0.3)
			pillar:SetAttribute("TargetTransparency", transparency)

			beam:SetAttribute("TargetSizeX", 0.1)
			beam:SetAttribute("TargetSizeY", height)
			beam:SetAttribute("TargetSizeZ", 0.1)
			beam:SetAttribute("TargetTransparency", 0.1)

			-- Отключаем тени
			pillar.CastShadow = false
			beam.CastShadow = false

			pillar.Parent = parentFolder
			beam.Parent = parentFolder
			table.insert(pillars, {pillar = pillar, beam = beam})
		end

		return pillars
	end

	-- Создать плавающие кристаллы
	local function createFloatingCrystals(position, radius, crystalCount, color, transparency, parentFolder)
		local crystals = {}

		for i = 1, crystalCount do
			local angle = (2 * math.pi / crystalCount) * i
			local distance = radius + math.random(-1, 1)
			local height = math.random(-0.5, 1.5)

			local x = position.X + distance * math.cos(angle)
			local z = position.Z + distance * math.sin(angle)
			local y = position.Y + height
			local crystalPos = Vector3.new(x, y, z)

			local crystal = Instance.new("Part")
			crystal.Name = generateRandomName()
			crystal.Size = Vector3.new(0, 0, 0) -- Начинаем с нулевого размера
			crystal.CFrame = CFrame.new(crystalPos) * CFrame.Angles(
				math.rad(math.random(-15, 15)),
				math.rad(angle * 180/math.pi),
				math.rad(math.random(-15, 15))
			)
			crystal.Material = Enum.Material.Glass
			crystal.Color = color
			crystal.Transparency = 1 -- Начинаем полностью прозрачным
			crystal.CanCollide = false
			crystal.Anchored = true
			crystal.Shape = Enum.PartType.Block

			-- Мягкое свечение
			local light = Instance.new("PointLight")
			light.Color = color
			light.Brightness = 0 -- Начинаем с нулевой яркости
			light.Range = 3
			light.Parent = crystal

			-- Сохраняем целевые значения
			crystal:SetAttribute("TargetSizeX", 0.8)
			crystal:SetAttribute("TargetSizeY", 1.2)
			crystal:SetAttribute("TargetSizeZ", 0.8)
			crystal:SetAttribute("TargetTransparency", transparency)
			crystal:SetAttribute("TargetBrightness", 1.5)

			-- Отключаем тени
			crystal.CastShadow = false

			crystal.Parent = parentFolder
			table.insert(crystals, crystal)
		end

		return crystals
	end

	-- Создать голографическую платформу
	local function createHoloPlatform(position, size, color, transparency, parentFolder)
		local segments = {}
		local segmentCount = 12
		local angleStep = (2 * math.pi) / segmentCount

		for i = 1, segmentCount do
			local angle = angleStep * i
			local segmentSize = size / segmentCount

			local segment = Instance.new("Part")
			segment.Name = generateRandomName()
			segment.Size = Vector3.new(0, 0, 0) -- Начинаем с нулевого размера

			local x = position.X + (size * 0.7) * math.cos(angle)
			local z = position.Z + (size * 0.7) * math.sin(angle)
			segment.CFrame = CFrame.new(Vector3.new(x, position.Y - 0.2, z)) * 
				CFrame.Angles(0, angle, 0)

			segment.Material = Enum.Material.ForceField
			segment.Color = color
			segment.Transparency = 1 -- Начинаем полностью прозрачным
			segment.CanCollide = false
			segment.Anchored = true
			segment.Shape = Enum.PartType.Block

			-- Сохраняем целевые значения
			segment:SetAttribute("TargetSizeX", segmentSize * 2)
			segment:SetAttribute("TargetSizeY", 0.1)
			segment:SetAttribute("TargetSizeZ", segmentSize)
			segment:SetAttribute("TargetTransparency", transparency)

			-- Отключаем тени
			segment.CastShadow = false

			segment.Parent = parentFolder
			table.insert(segments, segment)
		end

		return segments
	end

	-- Создать продвинутую систему частиц
	local function createAdvancedParticles(part, color)
		local attachment = Instance.new("Attachment")
		attachment.Parent = part

		-- Энергетические искры
		local sparks = Instance.new("ParticleEmitter")
		sparks.Parent = attachment
		sparks.Texture = "rbxasset://textures/particles/sparkles_main.dds"
		sparks.Lifetime = NumberRange.new(0.8, 1.2)
		sparks.Rate = 0 -- Начинаем с нулевой скорости
		sparks.SpreadAngle = Vector2.new(0, 360)
		sparks.Speed = NumberRange.new(1.5, 4)
		sparks.Acceleration = Vector3.new(0, 3, 0)
		sparks.Size = NumberSequence.new{
			NumberSequenceKeypoint.new(0, 0.08),
			NumberSequenceKeypoint.new(0.5, 0.2),
			NumberSequenceKeypoint.new(1, 0)
		}
		sparks.Transparency = NumberSequence.new{
			NumberSequenceKeypoint.new(0, 0.2),
			NumberSequenceKeypoint.new(0.7, 0.8),
			NumberSequenceKeypoint.new(1, 1)
		}
		sparks.Color = ColorSequence.new(color)
		sparks.LightEmission = 1
		sparks:SetAttribute("TargetRate", 15)

		-- Энергетический туман
		local mist = Instance.new("ParticleEmitter")
		mist.Parent = attachment
		mist.Texture = "rbxasset://textures/particles/smoke_main.dds"
		mist.Lifetime = NumberRange.new(1.2, 1.8)
		mist.Rate = 0 -- Начинаем с нулевой скорости
		mist.SpreadAngle = Vector2.new(30, 360)
		mist.Speed = NumberRange.new(0.3, 1.5)
		mist.Size = NumberSequence.new{
			NumberSequenceKeypoint.new(0, 0.4),
			NumberSequenceKeypoint.new(0.5, 0.8),
			NumberSequenceKeypoint.new(1, 0)
		}
		mist.Transparency = NumberSequence.new{
			NumberSequenceKeypoint.new(0, 0.8),
			NumberSequenceKeypoint.new(0.5, 0.95),
			NumberSequenceKeypoint.new(1, 1)
		}
		mist.Color = ColorSequence.new(color)
		mist.LightEmission = 0.3
		mist:SetAttribute("TargetRate", 8)

		return {sparks, mist}
	end

	-- Улучшенная функция анимации с симметричным затуханием
	local function enhancedAnimateObject(progress, settings)
		settings = settings or ENHANCED_SETTINGS

		local appearEnd = settings.APPEAR_DURATION / settings.TOTAL_DURATION
		local fadeStart = (settings.TOTAL_DURATION - settings.FADE_DURATION) / settings.TOTAL_DURATION

		if progress <= appearEnd then
			-- Фаза появления: плавное ease-out появление
			local t = progress / appearEnd
			return 1 - math.pow(1 - t, settings.FADE_POWER)
		elseif progress >= fadeStart then
			-- Фаза затухания: симметричное ease-in исчезновение (зеркальная копия появления)
			local fadeProgress = (progress - fadeStart) / (1 - fadeStart)
			-- Инвертируем анимацию появления для затухания
			local t = 1 - fadeProgress -- Инвертируем прогресс
			return 1 - math.pow(1 - t, settings.FADE_POWER)
		else
			-- Стабильная фаза
			return 1
		end
	end

	-- Безопасное удаление эффектов с проверкой завершения анимации
	local function safeCleanupEffects(effects, animationId)
		-- Проверяем, что анимация все еще активна (не была отменена)
		if not activeAnimations[animationId] then
			return
		end

		-- Удаляем все эффекты после полного завершения анимации затухания
		for _, effectGroup in pairs(effects) do
			if type(effectGroup) == "table" then
				for _, effect in pairs(effectGroup) do
					if typeof(effect) == "Instance" and effect.Parent then
						effect:Destroy()
					elseif type(effect) == "table" and effect.pillar then
						if effect.pillar and effect.pillar.Parent then
							effect.pillar:Destroy()
						end
						if effect.beam and effect.beam.Parent then
							effect.beam:Destroy()
						end
					end
				end
			elseif typeof(effectGroup) == "Instance" and effectGroup.Parent then
				effectGroup:Destroy()
			end
		end

		-- Удаляем анимацию из активных
		activeAnimations[animationId] = nil
	end

	-- Главная функция создания эффекта с улучшенным затуханием
	local function createAdvancedJumpEffect(position)
		if not enabled.Value then return end

		local baseColor = colorVal.Value or Color3.fromRGB(0, 200, 255)
		local effects = {}
		local parentFolder = getXeObjFolder()

		-- Генерируем уникальный ID для этой анимации
		local animationId = generateRandomName()
		activeAnimations[animationId] = true

		-- Создаем все эффекты с нулевыми размерами и полной прозрачностью
		local centerSphere, innerRing = createCenterSphere(position, 1.5, baseColor, 0.2, Enum.Material.Neon, parentFolder)
		effects.centerSphere = centerSphere
		effects.innerRing = innerRing

		local innerBlocks = createRingOfBlocks(position, 2.5, 8, 0.5, baseColor, 0.3, Enum.Material.Neon, parentFolder)
		effects.innerBlocks = innerBlocks

		local h, s, v = baseColor:ToHSV()
		local outerColor = Color3.fromHSV(h, s * 0.8, v * 1.2)
		local outerBlocks = createRingOfBlocks(position, 4, 12, 0.8, outerColor, 0.4, Enum.Material.Glass, parentFolder)
		effects.outerBlocks = outerBlocks

		local pillars = createEnergyPillars(position, 3.2, 6, 2, baseColor, 0.3, parentFolder)
		effects.pillars = pillars

		local crystalColor = Color3.fromHSV((h + 0.1) % 1, s * 0.9, v * 1.1)
		local crystals = createFloatingCrystals(position, 5, 4, crystalColor, 0.5, parentFolder)
		effects.crystals = crystals

		local platformColor = Color3.fromHSV(h, s * 0.6, v * 1.3)
		local platform = createHoloPlatform(position, 6, platformColor, 0.7, parentFolder)
		effects.platform = platform

		-- Добавляем частицы к центральной сфере
		local particles = createAdvancedParticles(centerSphere, baseColor)
		effects.particles = particles

		-- Анимация всего эффекта с улучшенными настройками
		local startTime = tick()
		local totalDuration = ENHANCED_SETTINGS.TOTAL_DURATION
		local appearDuration = ENHANCED_SETTINGS.APPEAR_DURATION
		local fadeDuration = ENHANCED_SETTINGS.FADE_DURATION

		local connection
		connection = RunService.Heartbeat:Connect(function()
			-- Проверяем, активна ли еще анимация
			if not activeAnimations[animationId] then
				connection:Disconnect()
				return
			end

			local elapsed = tick() - startTime
			local progress = elapsed / totalDuration

			-- Проверяем завершение анимации - удаляем только когда progress > 1 (полностью завершена)
			if progress > 1 then
				-- Анимация полностью завершена, включая затухание
				connection:Disconnect()

				-- Немедленно удаляем объекты, так как анимация затухания уже завершена
				safeCleanupEffects(effects, animationId)
				return
			end

			-- Анимируем центральную сферу с улучшенным затуханием
			if effects.centerSphere and effects.centerSphere.Parent then
				local alpha = enhancedAnimateObject(progress, ENHANCED_SETTINGS)

				-- Симметричная пульсация - такая же при появлении и исчезновении
				local targetSize = effects.centerSphere:GetAttribute("TargetSize")
				local pulseAmount = 0.4 * math.sin(elapsed * 5)
				local basePulseSize = targetSize + pulseAmount * alpha

				effects.centerSphere.Size = Vector3.new(basePulseSize, basePulseSize, basePulseSize)
				effects.centerSphere.Transparency = 1 - (1 - effects.centerSphere:GetAttribute("TargetTransparency")) * alpha

				local light = effects.centerSphere:FindFirstChild("PointLight")
				if light then
					light.Brightness = effects.centerSphere:GetAttribute("TargetBrightness") * alpha
				end
			end

			-- Анимируем внутреннее кольцо с улучшенным затуханием
			if effects.innerRing and effects.innerRing.Parent then
				local alpha = enhancedAnimateObject(progress, ENHANCED_SETTINGS)

				-- Постоянная скорость вращения на протяжении всего эффекта
				local rotation = elapsed * 2
				local targetSizeY = effects.innerRing:GetAttribute("TargetSizeY")
				local targetSizeZ = effects.innerRing:GetAttribute("TargetSizeZ")

				-- Размер изменяется симметрично - как при появлении, так и при исчезновении
				local currentSizeY = targetSizeY * alpha
				local currentSizeZ = targetSizeZ * alpha

				effects.innerRing.Size = Vector3.new(0.12, currentSizeY, currentSizeZ)
				effects.innerRing.CFrame = CFrame.new(position) * CFrame.Angles(0, rotation, math.rad(90))
				effects.innerRing.Transparency = 1 - (1 - effects.innerRing:GetAttribute("TargetTransparency")) * alpha
			end

			-- Анимируем внутренние блоки с улучшенным затуханием
			for i, block in ipairs(effects.innerBlocks or {}) do
				if block and block.Parent then
					local blockDelay = (i - 1) * 0.06
					local adjustedElapsed = math.max(0, elapsed - blockDelay)
					local blockProgress = adjustedElapsed / totalDuration
					local alpha = enhancedAnimateObject(blockProgress, ENHANCED_SETTINGS)

					-- Симметричное движение и размер - точно как при появлении
					local bounce = math.sin(elapsed * 3 + i * 0.5) * 0.6 * alpha
					local angle = (2 * math.pi / #effects.innerBlocks) * i + elapsed
					local radius = 2.5 * alpha -- Симметрично сжимаются/расширяются
					local x = position.X + radius * math.cos(angle)
					local z = position.Z + radius * math.sin(angle)
					block.CFrame = CFrame.new(Vector3.new(x, position.Y + bounce, z), position)

					-- Размер изменяется симметрично
					local targetSizeX = block:GetAttribute("TargetSizeX")
					local targetSizeY = block:GetAttribute("TargetSizeY")
					local targetSizeZ = block:GetAttribute("TargetSizeZ")

					block.Size = Vector3.new(
						targetSizeX * alpha,
						targetSizeY * alpha,
						targetSizeZ * alpha
					)

					block.Transparency = 1 - (1 - block:GetAttribute("TargetTransparency")) * alpha

					local light = block:FindFirstChild("PointLight")
					if light then
						light.Brightness = block:GetAttribute("TargetBrightness") * alpha
					end
				end
			end

			-- Анимируем внешние блоки с улучшенным затуханием
			for i, block in ipairs(effects.outerBlocks or {}) do
				if block and block.Parent then
					local blockDelay = 0.4 + (i - 1) * 0.05
					local adjustedElapsed = math.max(0, elapsed - blockDelay)
					local blockProgress = adjustedElapsed / totalDuration
					local alpha = enhancedAnimateObject(blockProgress, ENHANCED_SETTINGS)

					-- Симметричное волновое движение
					local wave = math.sin(elapsed * 2 + i * 0.3) * 0.8 * alpha
					local angle = (2 * math.pi / #effects.outerBlocks) * i - elapsed * 0.5
					local radius = 4 * alpha -- Симметрично
					local x = position.X + radius * math.cos(angle)
					local z = position.Z + radius * math.sin(angle)
					block.CFrame = CFrame.new(Vector3.new(x, position.Y + wave, z), position)

					-- Симметричное изменение размера
					local targetSizeX = block:GetAttribute("TargetSizeX")
					local targetSizeY = block:GetAttribute("TargetSizeY")
					local targetSizeZ = block:GetAttribute("TargetSizeZ")

					block.Size = Vector3.new(
						targetSizeX * alpha,
						targetSizeY * alpha,
						targetSizeZ * alpha
					)

					block.Transparency = 1 - (1 - block:GetAttribute("TargetTransparency")) * alpha
				end
			end

			-- Анимируем столбы с улучшенным затуханием
			for i, pillarData in ipairs(effects.pillars or {}) do
				if pillarData.pillar and pillarData.pillar.Parent then
					local pillarDelay = 0.6 + (i - 1) * 0.12
					local adjustedElapsed = math.max(0, elapsed - pillarDelay)
					local pillarProgress = adjustedElapsed / totalDuration
					local alpha = enhancedAnimateObject(pillarProgress, ENHANCED_SETTINGS)

					-- Симметричная высота столбов
					local baseHeight = pillarData.pillar:GetAttribute("TargetSizeY")
					local pulseHeight = baseHeight + math.sin(elapsed * 4 + i) * 0.5 * alpha
					local height = pulseHeight * alpha

					pillarData.pillar.Size = Vector3.new(
						pillarData.pillar:GetAttribute("TargetSizeX") * alpha,
						height,
						pillarData.pillar:GetAttribute("TargetSizeZ") * alpha
					)

					pillarData.beam.Size = Vector3.new(
						pillarData.beam:GetAttribute("TargetSizeX") * alpha,
						height,
						pillarData.beam:GetAttribute("TargetSizeZ") * alpha
					)

					pillarData.pillar.Transparency = 1 - (1 - pillarData.pillar:GetAttribute("TargetTransparency")) * alpha
					pillarData.beam.Transparency = 1 - (1 - pillarData.beam:GetAttribute("TargetTransparency")) * alpha

					-- Постоянное вращение на протяжении всего эффекта
					local rotation = elapsed + i * 0.5
					pillarData.beam.CFrame = pillarData.beam.CFrame * CFrame.Angles(0, math.rad(rotation * 10), 0)
				end
			end

			-- Анимируем кристаллы с улучшенным затуханием
			for i, crystal in ipairs(effects.crystals or {}) do
				if crystal and crystal.Parent then
					local crystalDelay = 0.8 + (i - 1) * 0.15
					local adjustedElapsed = math.max(0, elapsed - crystalDelay)
					local crystalProgress = adjustedElapsed / totalDuration
					local alpha = enhancedAnimateObject(crystalProgress, ENHANCED_SETTINGS)

					-- Симметричное плавание и вращение
					local float = math.sin(elapsed * 2 + i * 0.7) * 0.3 * alpha
					local rotation = elapsed * 0.5
					crystal.CFrame = crystal.CFrame * CFrame.Angles(0, math.rad(rotation * 20), 0)

					-- Симметричное изменение размера
					crystal.Size = Vector3.new(
						crystal:GetAttribute("TargetSizeX") * alpha,
						crystal:GetAttribute("TargetSizeY") * alpha,
						crystal:GetAttribute("TargetSizeZ") * alpha
					)

					local currentPos = crystal.Position
					local originalY = position.Y + (i % 3 - 1) * 0.5
					crystal.Position = Vector3.new(currentPos.X, originalY + float, currentPos.Z)

					crystal.Transparency = 1 - (1 - crystal:GetAttribute("TargetTransparency")) * alpha

					local light = crystal:FindFirstChild("PointLight")
					if light then
						light.Brightness = crystal:GetAttribute("TargetBrightness") * alpha
					end
				end
			end

			-- Анимируем платформу с улучшенным затуханием
			for i, segment in ipairs(effects.platform or {}) do
				if segment and segment.Parent then
					local segmentDelay = (i - 1) * 0.03
					local adjustedElapsed = math.max(0, elapsed - segmentDelay)
					local segmentProgress = adjustedElapsed / totalDuration
					local alpha = enhancedAnimateObject(segmentProgress, ENHANCED_SETTINGS)

					-- Симметричное изменение размера
					segment.Size = Vector3.new(
						segment:GetAttribute("TargetSizeX") * alpha,
						segment:GetAttribute("TargetSizeY") * alpha,
						segment:GetAttribute("TargetSizeZ") * alpha
					)

					-- Симметричная пульсация прозрачности
					local basePulse = 0.7 + 0.3 * math.sin(elapsed * 3 + i * 0.2) * alpha
					local targetTransparency = segment:GetAttribute("TargetTransparency")
					segment.Transparency = 1 - (1 - targetTransparency * basePulse) * alpha
				end
			end

			-- Управляем частицами с улучшенным затуханием
			if effects.particles then
				for _, particleSystem in ipairs(effects.particles) do
					if particleSystem and particleSystem.Parent then
						local targetRate = particleSystem:GetAttribute("TargetRate")
						local alpha = enhancedAnimateObject(progress, ENHANCED_SETTINGS)
						particleSystem.Rate = targetRate * alpha
					end
				end
			end
		end)
	end

	-- Очистить все эффекты
	local function removeAllEffects()
		if jumpConnection then
			jumpConnection:Disconnect()
			jumpConnection = nil
		end

		-- Отменяем все активные анимации
		for animationId, _ in pairs(activeAnimations) do
			activeAnimations[animationId] = nil
		end

		local xeObjFolder = workspace:FindFirstChild("XeObj")
		if xeObjFolder then
			for _, obj in ipairs(xeObjFolder:GetChildren()) do
				if obj.Name:match("^xes_%d+$") then
					obj:Destroy()
				end
			end
		end

		currentEffects = {}
	end

	-- Отслеживание прыжков
	local function setupJumpDetection()
		local character = LocalPlayer.Character
		if not character then return end

		local humanoid = character:FindFirstChild("Humanoid")
		local rootPart = character:FindFirstChild("HumanoidRootPart")

		if not humanoid or not rootPart then return end

		local lastEffectTime = 0
		local minCooldown = 0.3 -- Уменьшаем кулдаун для более частых эффектов
		local lastJumpState = false

		jumpConnection = RunService.Heartbeat:Connect(function()
			if not enabled.Value then return end

			local currentState = humanoid:GetState()
			local isCurrentlyJumping = (currentState == Enum.HumanoidStateType.Jumping or 
				currentState == Enum.HumanoidStateType.Freefall)

			-- Детектируем начало прыжка (переход из не-прыжкового состояния в прыжковое)
			if isCurrentlyJumping and not lastJumpState then
				local currentTime = tick()

				if currentTime - lastEffectTime > minCooldown then
					local jumpStartPosition = rootPart.Position
					local effectPosition = jumpStartPosition - Vector3.new(0, 2.8, 0)
					createAdvancedJumpEffect(effectPosition)
					lastEffectTime = currentTime
				end
			end

			lastJumpState = isCurrentlyJumping
		end)
	end

	-- Респавн: настройка детекции прыжков
	LocalPlayer.CharacterAdded:Connect(function()
		if enabled.Value then
			task.wait(1)
			setupJumpDetection()
		end
	end)

	-- Подписка на изменение цвета
	colorConnection = colorVal.Changed:Connect(function()
		local newColor = colorVal.Value
		local xeObjFolder = workspace:FindFirstChild("XeObj")

		if xeObjFolder then
			for _, obj in ipairs(xeObjFolder:GetChildren()) do
				if obj.Name:match("^xes_%d+$") and obj:IsA("BasePart") then
					obj.Color = newColor

					-- Обновляем все источники света
					for _, child in pairs(obj:GetChildren()) do
						if child:IsA("Light") then
							child.Color = newColor
						elseif child:IsA("Attachment") then
							for _, particle in pairs(child:GetChildren()) do
								if particle:IsA("ParticleEmitter") then
									particle.Color = ColorSequence.new(newColor)
								end
							end
						end
					end
				end
			end
		end
	end)

	-- Обработка клика по кнопке
	script.Parent.MouseButton1Click:Connect(function()
		local isEnabled = not enabled.Value
		enabled.Value = isEnabled

		if isEnabled then
			local clone = arrayListFolder:FindFirstChild("Example")
			if clone then
				local array = clone:Clone()
				array.Name = TITLE
				array.TextLabel.Text = TITLE
				array.Visible = true
				array.Parent = arrayListFolder
			end

			TweenService:Create(button, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if carget then
				TweenService:Create(carget, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
				tweenGuiPosition(carget, 0.545)
			end

			msg.Enabled(TITLE, "Enabled", 2)

			setupJumpDetection()
		else
			removeAllEffects()

			TweenService:Create(button, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if carget then
				TweenService:Create(carget, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
				tweenGuiPosition(carget, 0.065)
			end

			local existing = arrayListFolder:FindFirstChild(TITLE)
			if existing then
				existing:Destroy()
			end

			msg.Disabled(TITLE, "Disabled", 2)
		end
	end)

	-- Очистка при выгрузке скрипта
	script.AncestryChanged:Connect(function()
		if not script.Parent then
			removeAllEffects()
			if colorConnection then
				colorConnection:Disconnect()
			end
		end
	end)
end;
task.spawn(C_2bc);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Enable.TextButton.LocalScript
local function C_2ca()
	local script = G2L["2ca"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local Debris = game:GetService("Debris")
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local valuedlaaspectratio = script.Parent.Parent.Parent.ThicknessVal
	local LocalPlayer = Players.LocalPlayer
	local Camera = workspace.CurrentCamera

	-- Настройки
	local TITLE = "AspectRatio"
	local TWEEN_INFO = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	-- Кэшированные элементы UI
	local button = script.Parent.Parent
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local carget = button:FindFirstChild("Carget")
	local colorVal = script.Parent.Parent.Parent:WaitForChild("ColorVal")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			TweenService:Create(guiObject, TWEEN_INFO, goal):Play()
		end
	end

	-- ====== ЛОГИКА РАСТЯГИВАНИЯ КАМЕРЫ ======
	local TargetStretchX, TargetStretchY = 1, 1
	local CurrentStretchX, CurrentStretchY = 1, 1
	local SmoothSpeed = 8
	local AspectEnabled = false

	RunService.RenderStepped:Connect(function(dt)
		if not AspectEnabled then return end

		-- берём значение со слайдера (0.1–3)
		local sliderValue = math.clamp(valuedlaaspectratio.Value, 0.1, 3)

		if sliderValue < 1 then
			-- ниже 1.0 → уменьшаем X
			TargetStretchX = sliderValue
			TargetStretchY = 1
		elseif sliderValue > 1 then
			-- выше 1.0 → уменьшаем Y
			TargetStretchX = 1
			TargetStretchY = 2 - sliderValue -- чем больше sliderValue, тем меньше Y
		else
			-- ровно 1.0 → нормальное состояние
			TargetStretchX = 1
			TargetStretchY = 1
		end

		-- плавное приближение
		CurrentStretchX = CurrentStretchX + (TargetStretchX - CurrentStretchX) * math.clamp(dt * SmoothSpeed, 0, 1)
		CurrentStretchY = CurrentStretchY + (TargetStretchY - CurrentStretchY) * math.clamp(dt * SmoothSpeed, 0, 1)

		local baseCFrame = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + Camera.CFrame.LookVector)

		local stretchMatrix = CFrame.new(
			0, 0, 0,
			CurrentStretchX, 0, 0,
			0, CurrentStretchY, 0,
			0, 0, 1
		)

		Camera.CFrame = baseCFrame * stretchMatrix
	end)

	-- ====== ВКЛ/ВЫКЛ через кнопку ======
	script.Parent.MouseButton1Click:Connect(function()
		local isEnabled = not enabled.Value
		enabled.Value = isEnabled
		AspectEnabled = isEnabled -- вкл/выкл эффект

		if isEnabled then
			local clone = arrayListFolder:FindFirstChild("Example")
			if clone then
				local array = clone:Clone()
				array.Name = TITLE
				array.TextLabel.Text = TITLE
				array.Visible = true
				array.Parent = arrayListFolder
			end

			TweenService:Create(button, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if carget then
				TweenService:Create(carget, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
				tweenGuiPosition(carget, 0.545)
			end

			msg.Enabled(TITLE, "Enabled", 2)
		else
			TweenService:Create(button, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if carget then
				TweenService:Create(carget, TWEEN_INFO, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
				tweenGuiPosition(carget, 0.065)
			end

			local existing = arrayListFolder:FindFirstChild(TITLE)
			if existing then
				existing:Destroy()
			end

			msg.Disabled(TITLE, "Disabled", 2)
		end
	end)

end;
task.spawn(C_2ca);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Transparency.Carget.TextButton.LocalScript
local function C_2da()
	local script = G2L["2da"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local title = "aspectchangeaspect"
	local category = "Misc"

	local sliderFrame = script.Parent.Parent -- Перетаскиваем именно этот объект
	local mainFrame = sliderFrame.Parent -- Родитель фрейма
	local transparencyVal = mainFrame.Parent:FindFirstChild("ThicknessVal")
	local label = mainFrame:FindFirstChild("TextLabel")

	if not transparencyVal or not transparencyVal:IsA("NumberValue") then return end
	if not label or not label:IsA("TextLabel") then return end

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local dragging = false
	local maxXScale = 0.905 -- ограничение по X

	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- от 0 до 0.905

		local value = math.clamp(
			math.floor(((relX / (parentAbsSize * maxXScale)) * 1.8) * 10 + 0.5) / 10,
			0.1,
			1.8
		)

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0.2, 0)
		transparencyVal.Value = value
		label.Text = string.format("Stretch: %.1f", value)
	end


	-- Загрузка значения из конфига
	local function loadValue()
		if Config.LoadConfig and type(Config.LoadConfig) == "function" then
			Config.LoadConfig("default")
		end

		local savedValue = nil
		if Config.GetValue and type(Config.GetValue) == "function" then
			savedValue = Config.GetValue(category, title)
		end

		if savedValue and type(savedValue) == "number" then
			local parentAbsSize = mainFrame.AbsoluteSize.X
			local scaleWithinLimit = (savedValue - 1) / 119 * maxXScale
			sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
			transparencyVal.Value = savedValue
			label.Text = string.format("Stretch: %d", savedValue)
		else
			-- Если нет сохранения — дефолт
			local defaultValue = 1
			sliderFrame.Position = UDim2.new(0, 0, 0.2, 0)
			transparencyVal.Value = defaultValue
			label.Text = string.format("Stretch: %d", defaultValue)
		end
	end

	-- Сохранение значения в конфиг
	local function saveValue()
		if Config.SetValue and type(Config.SetValue) == "function" then
			Config.SetValue(category, title, transparencyVal.Value)
		end
		if Config.SaveConfig and type(Config.SaveConfig) == "function" then
			Config.SaveConfig("default")
		end
	end

	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
			saveValue()  -- сохраняем при отпускании мыши
		end
	end)

	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)

	-- Автозагрузка при старте
	task.defer(loadValue)

end;
task.spawn(C_2da);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.Fov.Preview.UIStroke.UIGradient.LocalScript
local function C_2e5()
	local script = G2L["2e5"];
	local TweenService = game:GetService("TweenService")
	local uiGradient = script.Parent -- предполагаем, что это UIGradient

	-- Настройки
	local speed = 90 -- градусов в секунду
	local duration = 360 / speed -- время, чтобы пройти 360°

	-- Настройка tween
	local tweenInfo = TweenInfo.new(
		duration,
		Enum.EasingStyle.Linear,
		Enum.EasingDirection.InOut,
		-1, -- бесконечное повторение
		true -- реверс (чтобы был плавный цикл)
	)

	local goal = { Rotation = 360 } -- конечное значение

	local tween = TweenService:Create(uiGradient, tweenInfo, goal)
	tween:Play()

end;
task.spawn(C_2e5);
-- StarterGui.xescriptsXD.Frame.Visual.ScrollingFrame.BackTrack.Enable.TextButton.LocalScript
local function C_2ef()
	local script = G2L["2ef"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")

	local title = "BackTrack"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")

	local msg
	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	end)

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local player = Players.LocalPlayer
	local backtrackPart = nil
	local backtrackConnection = nil
	local updateInterval = 0.5 -- 1 секунда
	local lastUpdate = 0

	local function createBacktrackPlayer(position, rotation)
		if backtrackPart and backtrackPart.Parent then
			backtrackPart:Destroy()
			backtrackPart = nil
		end

		local character = player.Character
		if not character or not character.Parent then 
			return 
		end

		local backtrackModel = Instance.new("Model")
		backtrackModel.Name = "BacktrackPlayer"
		backtrackModel.Parent = workspace

		local function copyPart(originalPart, partName)
			if not originalPart then return end

			local newPart = Instance.new("Part")
			newPart.Name = partName
			newPart.Size = originalPart.Size
			if originalPart:IsA("Part") and originalPart.Shape then
				newPart.Shape = originalPart.Shape
			end
			newPart.Material = Enum.Material.ForceField
			newPart.TopSurface = Enum.SurfaceType.Smooth
			newPart.BottomSurface = Enum.SurfaceType.Smooth
			newPart.Anchored = true
			newPart.CanCollide = false
			newPart.Transparency = 0.3
			newPart.Color = Color3.fromRGB(255, 80, 80)
			newPart.Parent = backtrackModel

			local originalRoot = character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Torso")
			if originalRoot then
				local offset = originalRoot.CFrame:ToObjectSpace(originalPart.CFrame)
				newPart.CFrame = rotation * offset
			else
				newPart.CFrame = CFrame.new(position)
			end

			local outline = Instance.new("SelectionBox")
			outline.Parent = newPart
			outline.Adornee = newPart
			outline.Color3 = Color3.fromRGB(255, 150, 150)
			outline.Transparency = 0.1
			outline.LineThickness = 0.15

			if partName == "Head" then
				for _, accessory in pairs(character:GetChildren()) do
					if accessory:IsA("Accessory") and accessory:FindFirstChild("Handle") then
						pcall(function()
							local handle = accessory.Handle
							local accPart = Instance.new("Part")
							accPart.Name = accessory.Name
							accPart.Size = handle.Size
							if handle:IsA("Part") and handle.Shape then
								accPart.Shape = handle.Shape
							end
							accPart.Material = Enum.Material.ForceField
							accPart.Anchored = true
							accPart.CanCollide = false
							accPart.Transparency = 0.3
							accPart.Color = Color3.fromRGB(255, 80, 80)
							accPart.Parent = backtrackModel

							if originalRoot then
								local accOffset = originalRoot.CFrame:ToObjectSpace(handle.CFrame)
								accPart.CFrame = rotation * accOffset
							end
						end)
					end
				end
			end

			return newPart
		end

		local parts = {"Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg", "HumanoidRootPart"}
		local r15Parts = {"Head", "UpperTorso", "LowerTorso", "LeftUpperArm", "LeftLowerArm", "RightUpperArm", "RightLowerArm", 
			"LeftUpperLeg", "LeftLowerLeg", "RightUpperLeg", "RightLowerLeg", "HumanoidRootPart"}

		local partsToUse = parts
		if character:FindFirstChild("UpperTorso") then
			partsToUse = r15Parts
		end

		for _, partName in pairs(partsToUse) do
			local originalPart = character:FindFirstChild(partName)
			if originalPart and originalPart:IsA("BasePart") then
				pcall(function()
					copyPart(originalPart, partName)
				end)
			end
		end

		backtrackPart = backtrackModel
		return backtrackModel
	end

	local function updateBacktrack()
		local character = player.Character
		if not character or not character.Parent then 
			return 
		end

		local humanoidRootPart = character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Torso")
		if not humanoidRootPart then 
			return 
		end

		local currentPosition = humanoidRootPart.Position
		local currentRotation = humanoidRootPart.CFrame

		createBacktrackPlayer(currentPosition, currentRotation)
	end

	local function startBacktrack()
		if backtrackConnection then return end

		backtrackConnection = RunService.Heartbeat:Connect(function()
			local currentTime = tick()
			if currentTime - lastUpdate >= updateInterval then
				updateBacktrack()
				lastUpdate = currentTime
			end
		end)
	end

	local function stopBacktrack()
		if backtrackConnection then
			backtrackConnection:Disconnect()
			backtrackConnection = nil
		end

		if backtrackPart and backtrackPart.Parent then
			backtrackPart:Destroy()
			backtrackPart = nil
		end
	end

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local clone = arrayListFolder:FindFirstChild("Example")
		if clone then
			local array = clone:Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			tweenGuiPosition(Carget, 0.545)
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true
		startBacktrack()

		Config.SetEnabled("Visual", title, true)
		Config.SaveConfig("default")
	end

	local function disableFeature()
		stopBacktrack()

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			tweenGuiPosition(Carget, 0.065)
		end

		local existing = arrayListFolder:FindFirstChild(title)
		if existing then
			existing:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		enabled.Value = false

		Config.SetEnabled("Visual", title, false)
		Config.SaveConfig("default")
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния при запуске
	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled("Visual", title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled("Visual", title, false)
			Config.SaveConfig("default")
		end
	end)

	script.AncestryChanged:Connect(function()
		if not script.Parent then
			stopBacktrack()
		end
	end)

end;
task.spawn(C_2ef);
-- StarterGui.xescriptsXD.Frame.Visual.Preview.UIStroke.UIGradient.LocalScript
local function C_2ff()
	local script = G2L["2ff"];
	local TweenService = game:GetService("TweenService")
	local uiGradient = script.Parent -- предполагаем, что это UIGradient

	-- Настройки
	local speed = 90 -- градусов в секунду
	local duration = 360 / speed -- время, чтобы пройти 360°

	-- Настройка tween
	local tweenInfo = TweenInfo.new(
		duration,
		Enum.EasingStyle.Linear,
		Enum.EasingDirection.InOut,
		-1, -- бесконечное повторение
		true -- реверс (чтобы был плавный цикл)
	)

	local goal = { Rotation = 360 } -- конечное значение

	local tween = TweenService:Create(uiGradient, tweenInfo, goal)
	tween:Play()

end;
task.spawn(C_2ff);
-- StarterGui.xescriptsXD.Frame.Plr.TextLabel.LocalScript
local function C_30d()
	local script = G2L["30d"];
	script.Parent.Text = game.Players.LocalPlayer.Name
end;
task.spawn(C_30d);
-- StarterGui.xescriptsXD.Frame.Plr.Avatar.LocalScript
local function C_310()
	local script = G2L["310"];
	local Players = game:GetService("Players")
	local localPlayer = Players.LocalPlayer

	-- Получаем ссылку на ImageLabel, где будет отображаться аватар
	local imageLabel = script.Parent

	-- Функция для загрузки аватара игрока
	local function loadAvatar()
		-- Получаем ID игрока
		local userId = localPlayer.UserId

		-- Создаем URL для получения изображения аватара
		local avatarUrl = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. userId .. "&width=420&height=420&format=png"

		-- Устанавливаем URL как источник изображения для ImageLabel
		imageLabel.Image = avatarUrl
	end

	-- Загрузка аватара при запуске скрипта
	loadAvatar()
end;
task.spawn(C_310);
-- StarterGui.xescriptsXD.Frame.Plr.TextLabel.LocalScript
local function C_313()
	local script = G2L["313"];
	script.Parent.Text = "UUID:" .. math.random(0,9999)
end;
task.spawn(C_313);
-- StarterGui.xescriptsXD.Frame.Close2.LocalScript
local function C_316()
	local script = G2L["316"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Visible = false
	end)
end;
task.spawn(C_316);
-- StarterGui.xescriptsXD.Frame.Close.LocalScript
local function C_31a()
	local script = G2L["31a"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Visible = false
	end)
end;
task.spawn(C_31a);
-- StarterGui.xescriptsXD.Frame.UnLoad.LocalScript
local function C_31e()
	local script = G2L["31e"];
	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent:Destroy()
	end)
end;
task.spawn(C_31e);
-- StarterGui.xescriptsXD.Frame.UID.TextLabel.LocalScript
local function C_326()
	local script = G2L["326"];
	local plr = game:GetService("Players").LocalPlayer
	local plrgui = plr:FindFirstChild("PlayerGui")
	local console = nil

	if not plrgui then return end

	local menu = script.Parent.Parent.Parent.Parent
	if not menu then return end

	local function selfDestruct()
		if menu then
			menu:Destroy()
		end
		script:Destroy()
	end

	game:GetService("RunService").RenderStepped:Connect(function()
		if not menu or not menu:FindFirstChild("KeyLogger") or not menu:FindFirstChild("Frame") or not menu:FindFirstChild("Storage") or not menu.Storage:FindFirstChild("a") or not menu:FindFirstChild("OpenButton") then --or not console or console.Visible == true then
			selfDestruct()
		end
	end)
end;
task.spawn(C_326);
-- StarterGui.xescriptsXD.Frame.Movement.LocalScript
local function C_32f()
	local script = G2L["32f"];
	local TweenService = game:GetService("TweenService")
	local scriptParent = script.Parent
	local scrollingFrame = script.Parent

	-- Более плавная и пружинящая анимация
	local tweenInfo = TweenInfo.new(
		0.45, -- Время (дольше, чтобы было плавнее)
		Enum.EasingStyle.Back, -- Эффект вылета с пружиной
		Enum.EasingDirection.Out
	)

	local resetInfo = TweenInfo.new(
		0.25,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out
	)

	local hasAnimated = false

	-- Устанавливаем "выдвигаемое" начальное положение
	local function resetPosition()
		scrollingFrame.Position = UDim2.new(0.293, 0, 0.20, 0)
	end

	local function animateIn()
		local targetPosition = UDim2.new(0.293, 0, 0.150, 0)
		local tween = TweenService:Create(scrollingFrame, tweenInfo, {Position = targetPosition})
		tween:Play()
	end

	-- Следим за изменением видимости
	scriptParent:GetPropertyChangedSignal("Visible"):Connect(function()
		if scriptParent.Visible and not hasAnimated then
			resetPosition() -- Задаём позицию "до"
			animateIn()     -- Плавно выезжает вверх
			hasAnimated = true
		elseif not scriptParent.Visible then
			hasAnimated = false
		end
	end)
end;
task.spawn(C_32f);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable1.TextButton.LocalScript
local function C_338()
	local script = G2L["338"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "Jumphack"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 2)

		enabled.Value = true

		tweenGuiPosition(Carget, 0.545)
		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 2)

		enabled.Value = false

		tweenGuiPosition(Carget, 0.065)
		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_338);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.Enable.TextButton.LocalScript
local function C_345()
	local script = G2L["345"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "ESP"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Bypass1.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Bypass1.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_345);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.JumpHack.TextBox.LocalScript
local function C_354()
	local script = G2L["354"];
	script.Parent.FocusLost:Connect(function()
		script.Parent.Parent.TransparencyVal = tonumber(script.Parent.Text)
	end)
end;
task.spawn(C_354);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable1.TextButton.LocalScript
local function C_35c()
	local script = G2L["35c"];
	local TweenService = game:GetService("TweenService")

	local title = "InfJump"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 1.5)

		enabled.Value = true
		mdd(true)

		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 1.5)

		enabled.Value = false
		mdd(false)

		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_35c);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable2.TextButton.LocalScript
local function C_36f()
	local script = G2L["36f"];
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()

	local title = "Strafe"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local isEnabled = false
	local lazywalking = false
	local jumpTask
	local movementTask

	local function findHumanoid(model)
		if not model then return nil end
		return model:FindFirstChildWhichIsA("Humanoid")
	end

	local humanoid = findHumanoid(character)

	task.spawn(function()
		while not humanoid do
			task.wait(1)
			humanoid = findHumanoid(character)
		end
	end)

	player.CharacterAdded:Connect(function(newCharacter)
		character = newCharacter
		humanoid = findHumanoid(character)
		task.spawn(function()
			while not humanoid do
				task.wait(1)
				humanoid = findHumanoid(character)
			end
		end)
	end)

	local function autoJump()
		while isEnabled do
			if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Running then
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end
			RunService.RenderStepped:Wait()
		end
	end

	local heartbeatConnection
	local function lazyWalk()
		if heartbeatConnection then
			heartbeatConnection:Disconnect()
		end
		heartbeatConnection = RunService.Heartbeat:Connect(function(delta)
			if not lazywalking then return end
			if not character or not humanoid or not humanoid.Parent then
				humanoid = findHumanoid(character)
			end
			if humanoid and humanoid.MoveDirection.Magnitude > 0 then
				character:TranslateBy(humanoid.MoveDirection * math.random(1,2) * delta * 10)
			end
		end)
	end

	local function checkJumpState()
		while isEnabled do
			if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Jumping then
				lazywalking = true
			elseif humanoid and humanoid:GetState() == Enum.HumanoidStateType.Physics and humanoid:GetVelocity().y == 0 then
				lazywalking = false
			end
			RunService.RenderStepped:Wait()
		end
	end

	local function start()
		if not isEnabled then
			isEnabled = true
			jumpTask = task.spawn(autoJump)
			lazyWalk()
			task.spawn(checkJumpState)
		end
	end

	local function stop()
		if isEnabled then
			isEnabled = false
			lazywalking = false
			if jumpTask then task.cancel(jumpTask) end
			if heartbeatConnection then heartbeatConnection:Disconnect() heartbeatConnection = nil end
		end
	end

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 1.5)

		enabled.Value = true
		start()

		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then array:Destroy() end

		msg.Disabled(title, "Disabled", 1.5)

		enabled.Value = false
		stop()

		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_36f);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.LocalScript
local function C_37b()
	local script = G2L["37b"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "Spinbot"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 1.5)

		enabled.Value = true
		mdd.start(70)

		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 1.5)

		enabled.Value = false
		mdd.stop()

		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_37b);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.LocalScript
local function C_388()
	local script = G2L["388"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()

	local title = "Noclip"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	-- === NoClip функциональность === --
	local activeNoClips = {}

	local function applyNoClipOnce(character, canCollideValue)
		for _, part in pairs(character:GetDescendants()) do
			if part:IsA("BasePart") and part.CanCollide ~= canCollideValue then
				part.CanCollide = canCollideValue
			end
		end
	end

	local function onDescendantAdded(part)
		if part:IsA("BasePart") and part.CanCollide then
			part.CanCollide = false
		end
	end

	local function periodicCleaner()
		for character, data in pairs(activeNoClips) do
			if data.Active and character.Parent then
				applyNoClipOnce(character, false)
			else
				data.Connection:Disconnect()
				activeNoClips[character] = nil
			end
		end
	end

	local timer = 0
	RunService.Heartbeat:Connect(function(step)
		timer += step
		if timer >= 0.3 then
			periodicCleaner()
			timer = 0
		end
	end)

	local function EnableNoClip(character)
		if not character or activeNoClips[character] then return end
		local conn = character.DescendantAdded:Connect(onDescendantAdded)
		activeNoClips[character] = {
			Connection = conn,
			Active = true,
		}
		applyNoClipOnce(character, false)
	end

	local function DisableNoClip(character)
		if not character then return end
		local data = activeNoClips[character]
		if not data then return end

		data.Active = false
		data.Connection:Disconnect()
		activeNoClips[character] = nil

		applyNoClipOnce(character, true)
	end

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 1.5)

		enabled.Value = true
		EnableNoClip(player.Character)

		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 1.5)

		enabled.Value = false
		DisableNoClip(player.Character)

		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_388);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.TextBox.LocalScript
local function C_392()
	local script = G2L["392"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local category = "Player"
	local key = "GravityValue"

	local textBox = script.Parent

	-- Загрузка значения из конфига при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			local val = Config.Get(category, key)
			if val then
				textBox.Text = tostring(val)
				local gravityValue = script.Parent.Parent:FindFirstChild("Gravityv")
				if gravityValue and gravityValue:IsA("NumberValue") then
					gravityValue.Value = val
				end
			end
		else
			-- Значение по умолчанию
			textBox.Text = "196.2"
			local gravityValue = script.Parent.Parent:FindFirstChild("Gravityv")
			if gravityValue and gravityValue:IsA("NumberValue") then
				gravityValue.Value = 196.2
			end
			Config.Set(category, key, 196.2)
			Config.SaveConfig("default")
		end
	end)

	-- Сохраняем и применяем при завершении редактирования
	textBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			local num = tonumber(textBox.Text)
			if num then
				-- Сохраняем в конфиг
				Config.Set(category, key, num)
				Config.SaveConfig("default")

				-- Обновляем значение в Gravityv
				local gravityValue = script.Parent.Parent:FindFirstChild("Gravityv")
				gravityValue.Value = num
			else
				-- Возврат к предыдущему значению если введено не число
				local prev = Config.Get(category, key) or 196.2
				textBox.Text = tostring(prev)
			end
		end
	end)

end;
task.spawn(C_392);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.LocalScript
local function C_397()
	local script = G2L["397"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "GravityChanger"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function applyGravity(value)
		game.Workspace.Gravity = value
	end

	local function enableFeature()
		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 2)

		enabled.Value = true
		applyGravity(script.Parent.Parent.Parent.Gravityv.Value)

		Config.Set("Player", title, {
			Enabled = true,
			Gravity = script.Parent.Parent.Parent.Gravityv.Value
		})
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 2)

		enabled.Value = false
		applyGravity(196.2)

		Config.Set("Player", title, {
			Enabled = false,
			Gravity = 196.2
		})
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			local data = Config.Get("Player", title)
			if data and data.Enabled then
				enabled.Value = false -- чтобы не было двойного включения в enableFeature
				script.Parent.Parent.Parent.Gravityv.Value = data.Gravity or 196.2
				enableFeature()
			else
				disableFeature()
			end
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_397);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Other.Enable3.TextButton.LocalScript
local function C_3a4()
	local script = G2L["3a4"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")

	local player = Players.LocalPlayer
	local button = script.Parent.Parent
	local enabled = button.Enabled
	local Carget = button.Carget
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList

	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local title = "TPTool"

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
		TweenService:Create(guiObject, tweenInfo, goal):Play()
	end

	local function createTPTool()
		local backpack = player.Backpack
		local character = player.Character

		for _, tool in pairs(backpack:GetChildren()) do
			if tool.Name == "TPTool" then tool:Destroy() end
		end
		if character then
			for _, tool in pairs(character:GetChildren()) do
				if tool.Name == "TPTool" then tool:Destroy() end
			end
		end

		local tpTool = Instance.new("Tool")
		tpTool.Name = "TPTool"
		tpTool.RequiresHandle = false
		tpTool.CanBeDropped = false

		tpTool.Activated:Connect(function()
			local mouse = player:GetMouse()
			local character = player.Character
			local rootPart = character and character:FindFirstChild("HumanoidRootPart")

			if rootPart then
				local targetPos = mouse.Hit.Position + Vector3.new(0, 2, 0)
				rootPart.CFrame = CFrame.new(targetPos, targetPos + rootPart.CFrame.LookVector)
			end
		end)

		tpTool.Parent = backpack
	end

	local function updateArrayList(show)
		local array = arrayListFolder:FindFirstChild(title)
		if show then
			if not array then
				array = arrayListFolder.Example:Clone()
				array.Name = title
				array.TextLabel.Text = title
				array.Visible = true
				array.Parent = arrayListFolder
			end
		else
			if array then array:Destroy() end
		end
	end

	local function sendEnabled()
		msg.Enabled(title, "Enabled", 2)
	end
	local function sendDisabled()
		msg.Disabled(title, "Disabled", 2)
	end
	local function sendInfo(text)
		msg.Info(title, text, 2)
	end

	player.CharacterAdded:Connect(function()
		if enabled.Value then
			RunService.Heartbeat:Wait()
			task.wait(1)
			if enabled.Value then
				createTPTool()
				sendInfo("Successfully granted")
			end
		end
	end)

	local function enableFeature()
		enabled.Value = true
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		tweenGuiPosition(Carget, 0.545)
		updateArrayList(true)
		sendEnabled()
		createTPTool()

		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")
	end

	local function disableFeature()
		enabled.Value = false
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		tweenGuiPosition(Carget, 0.065)
		updateArrayList(false)
		sendDisabled()

		for _, tool in pairs(player.Backpack:GetChildren()) do
			if tool.Name == "TPTool" then tool:Destroy() end
		end
		if player.Character then
			for _, tool in pairs(player.Character:GetChildren()) do
				if tool.Name == "TPTool" then tool:Destroy() end
			end
		end

		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния
	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_3a4);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable1.TextButton.LocalScript
local function C_3b3()
	local script = G2L["3b3"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "Fly"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

	local mdd = require(script.Parent.ModuleScript)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	-- Анимация движения маркера
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Включить функцию
	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 1.5)
		enabled.Value = true
		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default") -- 💾 автосохранение
		mdd.startFlying()
		tweenGuiPosition(Carget, 0.545)
	end

	-- Выключить функцию
	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 1.5)
		enabled.Value = false
		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default") -- 💾 автосохранение
		mdd.stop()
		tweenGuiPosition(Carget, 0.065)
	end

	-- Кнопка включения/выключения
	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- 📦 Автозагрузка и применение при запуске
	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled("Player", title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			-- Если нет конфига — создаём его по умолчанию (disabled)
			Config.SetEnabled("Player", title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_3b3);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextBox.LocalScript
local function C_3c3()
	local script = G2L["3c3"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local category = "Player"
	local key = "FlySpeed"

	local textBox = script.Parent

	-- Загрузка значения из конфига при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			local val = Config.Get(category, key)
			if val then
				textBox.Text = tostring(val)
				script.Parent.Parent.FlySpeed.Value = val
			end
		else
			-- По умолчанию, если нет конфига, можно задать значение
			textBox.Text = "2" -- например, дефолт
			script.Parent.Parent.FlySpeed.Value = 2
			Config.Set(category, key, tonumber(textBox.Text))
			Config.SaveConfig("default")
		end
	end)

	-- Сохраняем и применяем при завершении редактирования (FocusLost)
	textBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			local num = tonumber(textBox.Text)
			if num then
				-- Сохраняем в конфиг
				Config.Set(category, key, num)
				Config.SaveConfig("default")

				-- Обновляем значение в твоём игровом скрипте
				local flySpeedValue = script.Parent.Parent:FindFirstChild("FlySpeed")
				if flySpeedValue and flySpeedValue:IsA("NumberValue") then
					flySpeedValue.Value = num
				end
			else
				-- Можно вернуть предыдущее значение, если введено не число
				local prev = Config.Get(category, key) or 50
				textBox.Text = tostring(prev)
			end
		end
	end)

end;
task.spawn(C_3c3);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.Enable.TextButton.LocalScript
local function C_3c9()
	local script = G2L["3c9"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "Bypass1Fly"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		enabled.Value = true
		script.Parent.Parent.Parent.Bypass1.Value = true
		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")

		local array = arrayListFolder:FindFirstChild("Example")
		if array then
			local clone = array:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		enabled.Value = false
		script.Parent.Parent.Parent.Bypass1.Value = false
		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка конфига и установка состояния
	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled("Player", title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			-- По умолчанию выключено
			Config.SetEnabled("Player", title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_3c9);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Fly.TextBox.TextButton.LocalScript
local function C_3d3()
	local script = G2L["3d3"];
	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local button = script.Parent  -- Кнопка (для клика)
	local textLabel = script.Parent.Parent -- Место для текста бинда
	local toggleUI = script.Parent.Parent.Parent.Parent.Parent.Parent -- UI для открытия/закрытия
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local title = "FlyBind"

	local waitingForBind = false
	local currentBind = nil

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local mdd = require(script.Parent.Parent.Parent.Enable1.TextButton.ModuleScript)

	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local Enable1 = script.Parent.Parent.Parent.Enable1
	local Carget = Enable1.Carget

	-- Вспомогательная функция для анимации GUI
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Обновление текста бинда
	local function UpdateBindText()
		if currentBind then
			textLabel.Text = "Bind: "..tostring(currentBind)
		else
			textLabel.Text = "Bind (None)"
		end
	end

	-- Начинаем ожидать ввод клавиши для бинда
	local function StartWaitingForBind()
		waitingForBind = true
		textLabel.Text = "(Backspace to reset)"
	end

	-- Включить функцию
	local function enableFeature()
		if arrayListFolder:FindFirstChild("Example") then
			local array = arrayListFolder.Example:Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder
		end

		msg.Enabled("Fly", "Enabled", 1.5)

		TweenService:Create(Enable1, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end
		tweenGuiPosition(Carget, 0.545)
		mdd.startFlying()
		Enable1.Enabled.Value = true
	end

	-- Выключить функцию
	local function disableFeature()
		TweenService:Create(Enable1, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled("Fly", "Disabled", 1.5)

		mdd.stop()
		Enable1.Enabled.Value = false
		tweenGuiPosition(Carget, 0.065)
	end

	-- Сохранение бинда и включенного состояния
	local function SaveState()
		Config.Set("Settings", title, currentBind)
		Config.SetEnabled("Settings", title .. "_Enabled", Enable1.Enabled.Value)
		Config.SaveConfig("default")
	end

	-- Загрузка бинда и состояния из конфига
	local function LoadState()
		if Config.LoadConfig("default") then
			currentBind = Config.Get("Settings", title)
			UpdateBindText()

			local wasEnabled = Config.IsEnabled("Settings", title .. "_Enabled")
			if wasEnabled then
				enableFeature()
			else
				disableFeature()
			end
		else
			-- Нет конфига — состояние по умолчанию
			currentBind = nil
			UpdateBindText()
			disableFeature()
			SaveState()
		end
	end

	-- Клик по кнопке — начать ждать бинда
	button.MouseButton1Click:Connect(function()
		if not waitingForBind then
			StartWaitingForBind()
		end
	end)

	-- Обработка ввода клавиш
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed or input.UserInputType ~= Enum.UserInputType.Keyboard then return end
		local keyName = input.KeyCode.Name

		if waitingForBind then
			-- В режиме ожидания бинда назначаем или сбрасываем
			if input.KeyCode == Enum.KeyCode.Escape then
				textLabel.Text = "Error"
			elseif input.KeyCode == Enum.KeyCode.Backspace then
				currentBind = nil
				waitingForBind = false
				UpdateBindText()
				SaveState()
			else
				currentBind = keyName
				waitingForBind = false
				UpdateBindText()
				SaveState()
			end
		else
			-- Если не ждём бинда — переключаем UI по нажатию на currentBind
			if currentBind and keyName == currentBind then
				if Enable1.Enabled.Value == false then
					enableFeature()
				else
					disableFeature()
				end
				SaveState()
			end
		end
	end)

	-- Инициализация текста и загрузка конфигурации при запуске
	task.defer(function()
		LoadState()
	end)

end;
task.spawn(C_3d3);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable1.TextButton.LocalScript
local function C_3db()
	local script = G2L["3db"];
	local TweenService = game:GetService("TweenService")

	local title = "Speedhack"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 1.5)

		enabled.Value = true
		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 1.5)

		enabled.Value = false
		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_3db);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton.LocalScript
local function C_3e8()
	local script = G2L["3e8"];
	local TweenService = game:GetService("TweenService")

	local title = "Bypass1Speed"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		enabled.Value = true
		script.Parent.Parent.Parent.Bypass1.Value = true
		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")

		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		enabled.Value = false
		script.Parent.Parent.Parent.Bypass1.Value = false
		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_3e8);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.Enable.TextButton.LocalScript
local function C_3f9()
	local script = G2L["3f9"];
	local TweenService = game:GetService("TweenService")

	local title = "Bypass2Speed"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		enabled.Value = true
		script.Parent.Parent.Parent.Bypass2.Value = true
		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")

		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		enabled.Value = false
		script.Parent.Parent.Parent.Bypass2.Value = false
		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_3f9);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextBox.LocalScript
local function C_402()
	local script = G2L["402"];
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local TextBox = script.Parent -- Поле ввода скорости
	local player = Players.LocalPlayer
	local humanoid = nil
	local speed = 16 -- Значение скорости по умолчанию
	local humanoidConnection = nil
	local initialized = false -- Флаг для отслеживания первого ввода

	local category = "Player"
	local key = "Bypass1Speedtb"

	-- Функция поиска Humanoid с ожиданием
	local function findHumanoid()
		local success, result = pcall(function()
			local character = player.Character or player.CharacterAdded:Wait()
			local humanoid = character:FindFirstChildOfClass("Humanoid") 
				or character:WaitForChild("Humanoid", 10)
			return humanoid
		end)
		if success then
			return result
		else
			return nil
		end
	end

	-- Обновление Humanoid после респавна
	local function updateHumanoid()
		if humanoidConnection then
			humanoidConnection:Disconnect()
			humanoidConnection = nil
		end
		humanoid = findHumanoid()
		if humanoid then
			humanoid.WalkSpeed = speed
			humanoidConnection = humanoid:GetPropertyChangedSignal("Parent"):Connect(function()
				if not humanoid.Parent then
					humanoid = nil
				end
			end)
		end
	end

	-- Обновление скорости
	local function updateSpeed()
		local newSpeed = tonumber(TextBox.Text)
		if newSpeed and newSpeed > 0 then
			speed = newSpeed
		else
			TextBox.Text = tostring(speed)
		end
		if humanoid then
			humanoid.WalkSpeed = speed
		end
		-- Сохраняем в конфиг
		Config.Set(category, key, speed)
		Config.SaveConfig("default")
	end

	-- Загрузка значения из конфига при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			local val = Config.Get(category, key)
			if val and type(val) == "number" and val > 0 then
				speed = val
				TextBox.Text = tostring(speed)
			else
				-- Если значения нет, записываем дефолт
				Config.Set(category, key, speed)
				Config.SaveConfig("default")
				TextBox.Text = tostring(speed)
			end
			initialized = true
			updateHumanoid()
		end
	end)

	-- Обработчик изменения текста (сохранение и применение)
	TextBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			if TextBox.Text == "0" then
				TextBox.Text = tostring(speed) -- Сброс на предыдущее значение
			end
			if not initialized then
				initialized = true
			end
			updateSpeed()
		end
	end)

	-- Следим за респавном игрока
	player.CharacterAdded:Connect(function()
		task.defer(updateHumanoid)
	end)

	-- Постоянная проверка Humanoid и скорости
	RunService.RenderStepped:Connect(function()
		if initialized then
			local smartV = script.Parent.Parent.Enable1.Enabled
			if smartV and smartV.Value and script.Parent.Parent.Bypass1.Value then
				if not humanoid then
					updateHumanoid()
				else
					humanoid.WalkSpeed = speed
				end
			elseif smartV and smartV.Value and script.Parent.Parent.Bypass1.Value == false then
				if not humanoid then
					updateHumanoid()
				else
					humanoid.WalkSpeed = speed
				end
			end
		end
	end)

end;
task.spawn(C_402);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Speedhack.TextBox2.LocalScript
local function C_404()
	local script = G2L["404"];
	local RunService = game:GetService("RunService")
	local player = game.Players.LocalPlayer

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local lazywalking = true
	local hum, chr

	local category = "Player"
	local key = "Bypass2Speedtb"

	-- Функция для получения Humanoid и Character
	local function getHumanoid()
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildWhichIsA("Humanoid") or character:WaitForChild("Humanoid", 10)
		return humanoid, character
	end

	-- Первоначальная попытка получить Humanoid и Character
	hum, chr = getHumanoid()

	-- Перепривязка при новом персонаже
	player.CharacterAdded:Connect(function(newChar)
		chr = newChar
		hum = newChar:FindFirstChildWhichIsA("Humanoid") or newChar:WaitForChild("Humanoid", 10)
	end)

	-- Значение скорости, загрузится из конфига
	local speed = 1

	-- Загрузка скорости из конфига
	task.defer(function()
		if Config.LoadConfig("default") then
			local val = Config.Get(category, key)
			if val and type(val) == "number" and val > 0 then
				speed = val
				-- Обновляем текст в UI (если есть)
				if script.Parent:IsA("TextBox") then
					script.Parent.Text = tostring(speed)
				end
			else
				-- Если значения нет, записываем дефолт
				Config.Set(category, key, speed)
				Config.SaveConfig("default")
				if script.Parent:IsA("TextBox") then
					script.Parent.Text = tostring(speed)
				end
			end
		end
	end)

	-- Обработка изменения скорости (если это TextBox)
	if script.Parent:IsA("TextBox") then
		script.Parent.FocusLost:Connect(function(enterPressed)
			if enterPressed then
				local newSpeed = tonumber(script.Parent.Text)
				if newSpeed and newSpeed > 0 then
					speed = newSpeed
					Config.Set(category, key, speed)
					Config.SaveConfig("default")
				else
					-- Возвращаем старое значение, если некорректное
					script.Parent.Text = tostring(speed)
				end
			end
		end)
	end

	-- Основной цикл
	RunService.Heartbeat:Connect(function(delta)
		if not lazywalking then return end

		if not chr or not hum or not hum.Parent then
			-- Попытка переполучить humanoid и character
			local success, newHum, newChar = pcall(getHumanoid)
			if success and newHum and newChar then
				hum = newHum
				chr = newChar
			end
		end

		if hum and chr and script.Parent.Parent.Bypass2.Value and script.Parent.Parent.Enable1.Enabled.Value and hum.MoveDirection.Magnitude > 0 then
			chr:TranslateBy(hum.MoveDirection * speed * delta * 10)
		end
	end)

end;
task.spawn(C_404);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton.LocalScript
local function C_40c()
	local script = G2L["40c"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")

	local mdd = require(script.Parent.ModuleScript)
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local title = "TargetStrafe"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local speedTextBox = script.Parent.Parent.Parent:WaitForChild("SpeedTextBox")
	local radiusTextBox = script.Parent.Parent.Parent:WaitForChild("RadiusTextBox")
	local playerTextBox = script.Parent.Parent.Parent:WaitForChild("PlayerTextBox")

	local category = "Player"  -- Настройки категории для конфигурации

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function findPlayer(playerName)
		playerName = playerName:lower()
		local localPlayer = Players.LocalPlayer

		if localPlayer and (localPlayer.Name:lower():find(playerName, 1, true) or localPlayer.DisplayName:lower():find(playerName, 1, true)) then
			return localPlayer
		end

		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= localPlayer and (player.Name:lower():find(playerName, 1, true) or player.DisplayName:lower():find(playerName, 1, true)) then
				return player
			end
		end
		return nil
	end

	-- Функция загрузки конфига
	local function LoadConfig()
		if Config.LoadConfig("default") then
			local speed = Config.Get(category, title.."Speed")
			local radius = Config.Get(category, title.."Radius")
			local playerName = Config.Get(category, title.."Player")

			if speed then speedTextBox.Text = tostring(speed) end
			if radius then radiusTextBox.Text = tostring(radius) end
			if playerName then playerTextBox.Text = tostring(playerName) end

			if Config.IsEnabled(category, title) then
				enabled.Value = false
				button.MouseButton1Click:Wait() -- временная пауза чтобы не дергать Enable сразу (можно убрать)
				button.MouseButton1Click:Fire() -- включаем UI и логику
			end
		end
	end

	-- Функция сохранения конфига
	local function SaveConfig(speed, radius, playerName)
		Config.Set(category, title.."Speed", tonumber(speed) or 1)
		Config.Set(category, title.."Radius", tonumber(radius) or 1)
		Config.Set(category, title.."Player", playerName or "")
		Config.SaveConfig("default")
	end

	-- При включении/отключении — сохраняем в конфиг и применяем
	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			local speed = tonumber(speedTextBox.Text) or 1
			local radius = tonumber(radiusTextBox.Text) or 1
			local playerName = playerTextBox.Text

			speed = math.clamp(speed, 1, 100000)
			radius = math.clamp(radius, 1, 10000)

			local player = findPlayer(playerName)
			if player then
				local example = arrayListFolder:FindFirstChild("Example")
				if example then
					local clone = example:Clone()
					clone.Name = title
					clone.TextLabel.Text = title
					clone.Visible = true
					clone.Parent = arrayListFolder
				end
				TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
				if Carget then
					TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
				end


				msg.Enabled(title, "Enabled", 2)

				enabled.Value = true
				mdd.start(radius, speed, player)

				-- Сохраняем текущие значения
				SaveConfig(speed, radius, playerName)

				Config.SetEnabled(category, title, true)
				Config.SaveConfig("default")

				tweenGuiPosition(Carget, 0.545)
			else
				msg.error(title, "Player not found!", 2)
			end
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			msg.Disabled(title, "Disabled", 2)

			enabled.Value = false
			mdd.stop()

			Config.SetEnabled(category, title, false)
			Config.SaveConfig("default")

			tweenGuiPosition(Carget, 0.065)
		end
	end)

	-- Загрузка конфига при старте
	task.defer(LoadConfig)

end;
task.spawn(C_40c);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.TargetStrafe.Enable1.TextButton.LocalScript
local function C_41c()
	local script = G2L["41c"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")

	local category = "Player"
	local keyEnabled = "TargetStrafeLoop"  -- поменяй на осмысленное имя для фичи

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		enabled.Value = true
		enabled.Parent.Parent.LoopVal.Value = true

		Config.SetEnabled(category, keyEnabled, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		enabled.Value = false
		enabled.Parent.Parent.LoopVal.Value = false

		Config.SetEnabled(category, keyEnabled, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка при старте
	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled(category, keyEnabled) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_41c);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.Enable1.TextButton.LocalScript
local function C_42c()
	local script = G2L["42c"];
	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local mdd = require(script.Parent.ModuleScript)
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local title = "Spinner"

	local button = script.Parent.Parent
	local enabled = button:FindFirstChild("Enabled")
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList

	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local example = arrayListFolder:FindFirstChild("Example")
		if example then
			local clone = example:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 2)

		enabled.Value = true
		mdd.start(script.Parent.Parent.Parent.Value.Value)

		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.545)
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 2)

		enabled.Value = false
		mdd.stop()

		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")

		tweenGuiPosition(Carget, 0.065)
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_42c);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.SpeedTextBox.LocalScript
local function C_437()
	local script = G2L["437"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local category = "Player"
	local key = "SpinnerSpeed"  -- например, название TextBox как ключ, можно заменить на нужное

	local textBox = script.Parent
	local valueObject = script.Parent.Parent:FindFirstChild("Value") -- предполагается NumberValue или подобный

	-- Загрузка из конфига при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			local val = Config.Get(category, key)
			if val then
				textBox.Text = tostring(val)
				if valueObject then
					valueObject.Value = val
				end
			end
		end
	end)

	textBox.FocusLost:Connect(function()
		local num = tonumber(textBox.Text)
		if num and valueObject then
			valueObject.Value = num

			-- Сохраняем в конфиг
			Config.Set(category, key, num)
			Config.SaveConfig("default")
		else
			-- Можно вернуть предыдущее значение из конфига или оставить как есть
			local prev = Config.Get(category, key)
			if prev then
				textBox.Text = tostring(prev)
			end
		end
	end)

end;
task.spawn(C_437);
-- StarterGui.xescriptsXD.Frame.Movement.ScrollingFrame.Spinner.TextBox.TextButton.LocalScript
local function C_43b()
	local script = G2L["43b"];
	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")

	local button = script.Parent  -- Кнопка (для клика)
	local textLabel = script.Parent.Parent -- Место для текста бинда
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local title = "Spinner"

	local waitingForBind = false
	local currentBind = nil

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local mdd = require(script.Parent.Parent.Parent.Enable1.TextButton.ModuleScript)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local category = "Player"
	local key = "SpinnerBind"

	local function UpdateBindText()
		if currentBind then
			textLabel.Text = "Bind: "..tostring(currentBind)
		else
			textLabel.Text = "Bind (None)"
		end
	end

	local function StartWaitingForBind()
		waitingForBind = true
		textLabel.Text = "(Backspace to reset)"
	end

	button.MouseButton1Click:Connect(function()
		if not waitingForBind then
			StartWaitingForBind()
		end
	end)

	local Carget = script.Parent.Parent.Parent.Enable1.Carget

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Загрузка бинда из конфига при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			local savedBind = Config.Get(category, key)
			if savedBind and type(savedBind) == "string" then
				currentBind = savedBind
			else
				currentBind = nil
			end
		end
		UpdateBindText()
	end)

	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed or input.UserInputType ~= Enum.UserInputType.Keyboard then return end
		local keyName = input.KeyCode.Name

		if waitingForBind then
			if input.KeyCode == Enum.KeyCode.Escape then
				textLabel.Text = "Error"
			elseif input.KeyCode == Enum.KeyCode.Backspace then
				currentBind = nil
				waitingForBind = false
				UpdateBindText()
				Config.Set(category, key, nil)
				Config.SaveConfig("default")
			else
				currentBind = keyName
				waitingForBind = false
				UpdateBindText()
				Config.Set(category, key, currentBind)
				Config.SaveConfig("default")
			end
		else
			if currentBind and keyName == currentBind then
				if script.Parent.Parent.Parent.Enable1.Enabled.Value == false then
					local array = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList:FindFirstChild("Example"):Clone()
					array.Name = title
					array.TextLabel.Text = title
					array.Visible = true
					array.Parent = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList

					msg.Enabled(title, "Enabled", 2)
					TweenService:Create(script.Parent.Parent.Parent.Enable1, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
					if Carget then
						TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
					end
					tweenGuiPosition(Carget, 0.545)
					mdd.start(script.Parent.Parent.Parent.Value.Value)
					script.Parent.Parent.Parent.Enable1.Enabled.Value = true
				else
					TweenService:Create(script.Parent.Parent.Parent.Enable1, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
					if Carget then
						TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
					end

					local array = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList:FindFirstChild(title)
					if array then
						array:Destroy()
					end

					msg.Disabled(title, "Disabled", 2)
					mdd.stop()
					script.Parent.Parent.Parent.Enable1.Enabled.Value = false
					tweenGuiPosition(Carget, 0.065)
				end
			end
		end
	end)

	UpdateBindText()

end;
task.spawn(C_43b);
-- StarterGui.xescriptsXD.Frame.Settings.LocalScript
local function C_43d()
	local script = G2L["43d"];
	local TweenService = game:GetService("TweenService")
	local scriptParent = script.Parent
	local scrollingFrame = script.Parent

	-- Более плавная и пружинящая анимация
	local tweenInfo = TweenInfo.new(
		0.45, -- Время (дольше, чтобы было плавнее)
		Enum.EasingStyle.Back, -- Эффект вылета с пружиной
		Enum.EasingDirection.Out
	)

	local resetInfo = TweenInfo.new(
		0.25,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out
	)

	local hasAnimated = false

	-- Устанавливаем "выдвигаемое" начальное положение
	local function resetPosition()
		scrollingFrame.Position = UDim2.new(0.293, 0, 0.20, 0)
	end

	local function animateIn()
		local targetPosition = UDim2.new(0.293, 0, 0.150, 0)
		local tween = TweenService:Create(scrollingFrame, tweenInfo, {Position = targetPosition})
		tween:Play()
	end

	-- Следим за изменением видимости
	scriptParent:GetPropertyChangedSignal("Visible"):Connect(function()
		if scriptParent.Visible and not hasAnimated then
			resetPosition() -- Задаём позицию "до"
			animateIn()     -- Плавно выезжает вверх
			hasAnimated = true
		elseif not scriptParent.Visible then
			hasAnimated = false
		end
	end)
end;
task.spawn(C_43d);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable1.TextButton.LocalScript
local function C_446()
	local script = G2L["446"];
	local TweenService = game:GetService("TweenService")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local title = "Particles"
	local category = "Visual" -- укажи нужную категорию
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			local example = arrayListFolder:FindFirstChild("Example")
			if example then
				local clone = example:Clone()
				clone.Name = title
				clone.TextLabel.Text = title
				clone.Visible = true
				clone.Parent = arrayListFolder
			end

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled(title, "Enabled", 1.5)

			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Value.Value = true
			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			msg.Disabled(title, "Disabled", 1.5)

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Value.Value = false
			tweenGuiPosition(Carget, 0.065)
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)

		-- Сохраняем состояние в конфиг
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	-- Автозагрузка при старте
	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded then
			local savedState = Config.IsEnabled(category, title)
			applyEnabledState(savedState)
		else
			-- Если конфиг не найден, включаем по умолчанию
			applyEnabledState(true)
			-- И сразу сохраняем это состояние
			Config.SetEnabled(category, title, true)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_446);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.LocalScript
local function C_452()
	local script = G2L["452"];
	local TweenService = game:GetService("TweenService")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local title = "Vignette"
	local category = "Visual" -- поправь при необходимости
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			local example = arrayListFolder:FindFirstChild("Example")
			if example then
				local clone = example:Clone()
				clone.Name = title
				clone.TextLabel.Text = title
				clone.Visible = true
				clone.Parent = arrayListFolder
			end

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled(title, "Enabled", 1.5)

			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.ImageLabel.Visible = true
			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			msg.Disabled(title, "Disabled", 1.5)

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.ImageLabel.Visible = false
			tweenGuiPosition(Carget, 0.065)
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)

		-- Сохраняем новое состояние
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	-- Автозагрузка при старте
	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded then
			local savedState = Config.IsEnabled(category, title)
			applyEnabledState(savedState)
		else
			-- Включаем по умолчанию, если нет сохранений
			applyEnabledState(true)
			Config.SetEnabled(category, title, true)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_452);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.LocalScript
local function C_45d()
	local script = G2L["45d"];
	local TweenService = game:GetService("TweenService")
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local title = "PelvisParticles"
	local category = "Visual" -- поправь при необходимости

	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			local example = arrayListFolder:FindFirstChild("Example")
			if example then
				local clone = example:Clone()
				clone.Name = title
				clone.TextLabel.Text = title
				clone.Visible = true
				clone.Parent = arrayListFolder
			end

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled(title, "Enabled", 1.5)

			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Value2.Value = true
			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			msg.Disabled(title, "Disabled", 1.5)

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Value2.Value = false
			tweenGuiPosition(Carget, 0.065)
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)

		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded then
			local savedState = Config.IsEnabled(category, title)
			applyEnabledState(savedState)
		else
			Config.SetEnabled(category, title, true)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_45d);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.Effects.Enable.TextButton.LocalScript
local function C_46a()
	local script = G2L["46a"];
	local TweenService = game:GetService("TweenService")
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local title = "ClickSFX"
	local category = "Settings" -- указать нужную категорию для сохранения

	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			local example = arrayListFolder:FindFirstChild("Example")
			if example then
				local clone = example:Clone()
				clone.Name = title
				clone.TextLabel.Text = title
				clone.Visible = true
				clone.Parent = arrayListFolder
			end

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled(title, "Enabled", 1.5)

			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Enabled.Value = true
			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			msg.Disabled(title, "Disabled", 1.5)

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Enabled.Value = false
			tweenGuiPosition(Carget, 0.065)
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)

		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded then
			local savedState = Config.IsEnabled(category, title)
			applyEnabledState(savedState)
		else
			-- По умолчанию включено, если нет сохранения
			applyEnabledState(true)
			Config.SetEnabled(category, title, true)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_46a);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
local function C_47a()
	local script = G2L["47a"];
	local TweenService = game:GetService("TweenService")

	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local rootFrame = script.Parent.Parent.Parent.Parent.Parent.Parent -- фон

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local title = "RedBACK" -- укажи уникальное имя для этого переключателя
	local category = "Settings" -- категория для сохранения

	-- Анимация изменения цвета
	local function tweenBackgroundColor(guiObject, targetColor)
		if guiObject and guiObject:IsA("GuiObject") then
			local tween = TweenService:Create(guiObject, tweenInfo, {BackgroundColor3 = targetColor})
			tween:Play()
		end
	end

	-- Анимация позиции переключателя
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			tweenBackgroundColor(button, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(Carget, Color3.fromRGB(24, 24, 24))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 5, 6))
			tweenGuiPosition(Carget, 0.545)
			enabled.Value = true
		else
			tweenBackgroundColor(button, Color3.fromRGB(58, 58, 58))
			tweenBackgroundColor(Carget, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 25, 25))
			tweenGuiPosition(Carget, 0.065)
			enabled.Value = false
		end
	end

	-- Обработка нажатия
	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)
		-- Сохраняем в конфиг
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	-- Автозагрузка при старте
	task.defer(function()
		if Config.LoadConfig("default") and Config.IsEnabled(category, title) then
			applyEnabledState(true)
		else
			applyEnabledState(false)
		end
	end)

end;
task.spawn(C_47a);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextBox.TextButton.LocalScript
local function C_484()
	local script = G2L["484"];
	local UserInputService = game:GetService("UserInputService")

	local button = script.Parent  -- Кнопка (для клика)
	local textLabel = script.Parent.Parent -- Место для текста бинда
	local toggleUI = script.Parent.Parent.Parent.Parent.Parent.Parent -- UI для открытия/закрытия

	local waitingForBind = false
	local currentBind = nil

	-- Обновление текста
	local function UpdateBindText()
		if currentBind then
			textLabel.Text = "Bind: "..tostring(currentBind)
		else
			textLabel.Text = "Bind (None)"
		end
	end

	-- Начинаем ожидать ввод клавиши для бинда
	local function StartWaitingForBind()
		waitingForBind = true
		textLabel.Text = "(Backspace to reset)"
	end

	-- Обработка клика по кнопке — запускаем ожидание бинда
	button.MouseButton1Click:Connect(function()
		if not waitingForBind then
			StartWaitingForBind()
		end
	end)

	-- Обработка нажатия клавиш
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed or input.UserInputType ~= Enum.UserInputType.Keyboard then return end
		local keyName = input.KeyCode.Name

		if waitingForBind then
			-- В режиме ожидания бинда назначаем или сбрасываем
			if input.KeyCode == Enum.KeyCode.Escape then
				textLabel.Text = "Error"
			elseif input.KeyCode == Enum.KeyCode.Backspace then
				currentBind = nil
				waitingForBind = false
				UpdateBindText()
			else
				currentBind = keyName
				waitingForBind = false
				UpdateBindText()
			end
		else
			-- Если не ждём бинда — переключаем UI по нажатию на currentBind
			if currentBind and keyName == currentBind then
				toggleUI.Visible = not toggleUI.Visible
			end
		end
	end)

	-- Инициализация текста
	UpdateBindText()

end;
task.spawn(C_484);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.TextBox.LocalScript
local function C_486()
	local script = G2L["486"];
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	local category = "Settings"
	local title = "imageid"

	local textBox = script.Parent

	textBox.FocusLost:Connect(function()
		local input = textBox.Text or ""
		local imageId = input:match("%d+")
		if not imageId then return end

		-- Сохраняем в конфиг с использованием правильной функции
		Config.Set(category, title, imageId)
		Config.SaveConfig("default")

		local imagePath = "rbxassetid://" .. imageId
		local target = textBox
		for i = 1, 5 do
			if target.Parent then
				target = target.Parent
			else
				break
			end
		end

		if target and target:FindFirstChild("imaged") then
			local imaged = target:FindFirstChild("imaged")
			if not imaged then
				imaged = target.Parent.Parent.Parent.Parent:FindFirstChild("imaged")
			end
			if imaged and (imaged:IsA("ImageLabel") or imaged:IsA("ImageButton")) then
				imaged.Image = imagePath
			end
		end
	end)

	task.defer(function()
		if Config.LoadConfig("default") then
			local savedId = Config.Get(category, title)
			if savedId then
				textBox.Text = savedId
				local imagePath = "rbxassetid://" .. savedId

				local target = textBox
				for i = 1, 5 do
					if target.Parent then
						target = target.Parent
					else
						break
					end
				end

				if target and target:FindFirstChild("imaged") then
					local imaged = target:FindFirstChild("imaged")
					if not imaged then
						imaged = target.Parent.Parent.Parent.Parent:FindFirstChild("imaged")
					end
					if imaged and (imaged:IsA("ImageLabel") or imaged:IsA("ImageButton")) then
						imaged.Image = imagePath
					end
				end
			end
		end
	end)

end;
task.spawn(C_486);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
local function C_48a()
	local script = G2L["48a"];
	local TweenService = game:GetService("TweenService")

	local title = "ImageBack"
	local category = "Visual"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local rootFrame = script.Parent.Parent.Parent.Parent.Parent.Parent
	local imaged = script.Parent.Parent.Parent.Parent.Parent.Parent:FindFirstChild("imaged")

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function tweenBackgroundColor(guiObject, targetColor)
		if guiObject and guiObject:IsA("GuiObject") then
			local tween = TweenService:Create(guiObject, tweenInfo, {BackgroundColor3 = targetColor})
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			tweenBackgroundColor(button, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(Carget, Color3.fromRGB(24, 24, 24))
			enabled.Value = true
			if imaged then imaged.Visible = true end
			tweenGuiPosition(Carget, 0.545)
		else
			tweenBackgroundColor(button, Color3.fromRGB(58, 58, 58))
			tweenBackgroundColor(Carget, Color3.fromRGB(229, 229, 229))
			enabled.Value = false
			if imaged then imaged.Visible = false end
			tweenGuiPosition(Carget, 0.065)
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		if Config.LoadConfig("default") and Config.IsEnabled(category, title) then
			applyEnabledState(true)
		else
			applyEnabledState(false)
		end
	end)

end;
task.spawn(C_48a);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
local function C_495()
	local script = G2L["495"];
	local TweenService = game:GetService("TweenService")

	local title = "AquaBack"
	local category = "Settings" -- категория для сохранения
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local rootFrame = script.Parent.Parent.Parent.Parent.Parent.Parent -- целевой объект для фоновой анимации

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function tweenBackgroundColor(guiObject, targetColor)
		if guiObject and guiObject:IsA("GuiObject") then
			local tween = TweenService:Create(guiObject, tweenInfo, {BackgroundColor3 = targetColor})
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			tweenBackgroundColor(button, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(Carget, Color3.fromRGB(24, 24, 24))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(11, 25, 24))
			tweenGuiPosition(Carget, 0.545)
			enabled.Value = true
		else
			tweenBackgroundColor(button, Color3.fromRGB(58, 58, 58))
			tweenBackgroundColor(Carget, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 25, 25))
			tweenGuiPosition(Carget, 0.065)
			enabled.Value = false
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		if Config.LoadConfig("default") and Config.IsEnabled(category, title) then
			applyEnabledState(true)
		else
			applyEnabledState(false)
		end
	end)

end;
task.spawn(C_495);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
local function C_4a2()
	local script = G2L["4a2"];
	local TweenService = game:GetService("TweenService")

	local title = "BlueBack"
	local category = "Settings" -- категория для сохранения
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local rootFrame = script.Parent.Parent.Parent.Parent.Parent.Parent -- Тот, чьи цвета меняются

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenBackgroundColor(guiObject, targetColor)
		if guiObject and guiObject:IsA("GuiObject") then
			local tween = TweenService:Create(guiObject, tweenInfo, {BackgroundColor3 = targetColor})
			tween:Play()
		end
	end

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			tweenBackgroundColor(button, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(Carget, Color3.fromRGB(24, 24, 24))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(5, 8, 25))
			tweenGuiPosition(Carget, 0.545)
			enabled.Value = true
		else
			tweenBackgroundColor(button, Color3.fromRGB(58, 58, 58))
			tweenBackgroundColor(Carget, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 25, 25))
			tweenGuiPosition(Carget, 0.065)
			enabled.Value = false
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		if Config.LoadConfig("default") and Config.IsEnabled(category, title) then
			applyEnabledState(true)
		else
			applyEnabledState(false)
		end
	end)

end;
task.spawn(C_4a2);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
local function C_4ad()
	local script = G2L["4ad"];
	local TweenService = game:GetService("TweenService")

	local title = "PurplBack"
	local category = "Visual" -- категория для сохранения
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local rootFrame = script.Parent.Parent.Parent.Parent.Parent.Parent -- целевой объект для фоновой анимации

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function tweenBackgroundColor(guiObject, targetColor)
		if guiObject and guiObject:IsA("GuiObject") then
			local tween = TweenService:Create(guiObject, tweenInfo, {BackgroundColor3 = targetColor})
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			tweenBackgroundColor(button, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(Carget, Color3.fromRGB(24, 24, 24))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(10, 5, 25))
			tweenGuiPosition(Carget, 0.545)
			enabled.Value = true
		else
			tweenBackgroundColor(button, Color3.fromRGB(58, 58, 58))
			tweenBackgroundColor(Carget, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 25, 25))
			tweenGuiPosition(Carget, 0.065)
			enabled.Value = false
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		if Config.LoadConfig("default") and Config.IsEnabled(category, title) then
			applyEnabledState(true)
		else
			applyEnabledState(false)
		end
	end)

end;
task.spawn(C_4ad);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
local function C_4ba()
	local script = G2L["4ba"];
	local TweenService = game:GetService("TweenService")

	local title = "OrangBack"
	local category = "Visual" -- категория для сохранения
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local rootFrame = script.Parent.Parent.Parent.Parent.Parent.Parent -- целевой объект для фоновой анимации

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function tweenBackgroundColor(guiObject, targetColor)
		if guiObject and guiObject:IsA("GuiObject") then
			local tween = TweenService:Create(guiObject, tweenInfo, {BackgroundColor3 = targetColor})
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			tweenBackgroundColor(button, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(Carget, Color3.fromRGB(24, 24, 24))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 16, 1))
			tweenGuiPosition(Carget, 0.545)
			enabled.Value = true
		else
			tweenBackgroundColor(button, Color3.fromRGB(58, 58, 58))
			tweenBackgroundColor(Carget, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 25, 25))
			tweenGuiPosition(Carget, 0.065)
			enabled.Value = false
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		if Config.LoadConfig("default") and Config.IsEnabled(category, title) then
			applyEnabledState(true)
		else
			applyEnabledState(false)
		end
	end)

end;
task.spawn(C_4ba);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
local function C_4c6()
	local script = G2L["4c6"];
	local TweenService = game:GetService("TweenService")

	local title = "BlackBack"
	local category = "Settings" -- категория для сохранения
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local rootFrame = script.Parent.Parent.Parent.Parent.Parent.Parent -- целевой объект для фоновой анимации

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function tweenBackgroundColor(guiObject, targetColor)
		if guiObject and guiObject:IsA("GuiObject") then
			local tween = TweenService:Create(guiObject, tweenInfo, {BackgroundColor3 = targetColor})
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			tweenBackgroundColor(button, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(Carget, Color3.fromRGB(24, 24, 24))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(9, 9, 9))
			tweenGuiPosition(Carget, 0.545)
			enabled.Value = true
		else
			tweenBackgroundColor(button, Color3.fromRGB(58, 58, 58))
			tweenBackgroundColor(Carget, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 25, 25))
			tweenGuiPosition(Carget, 0.065)
			enabled.Value = false
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		if Config.LoadConfig("default") and Config.IsEnabled(category, title) then
			applyEnabledState(true)
		else
			applyEnabledState(false)
		end
	end)

end;
task.spawn(C_4c6);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
local function C_4d2()
	local script = G2L["4d2"];
	local TweenService = game:GetService("TweenService")

	local title = "GreenBack"
	local category = "Settings" -- категория для сохранения
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local rootFrame = script.Parent.Parent.Parent.Parent.Parent.Parent -- целевой объект для фоновой анимации

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function tweenBackgroundColor(guiObject, targetColor)
		if guiObject and guiObject:IsA("GuiObject") then
			local tween = TweenService:Create(guiObject, tweenInfo, {BackgroundColor3 = targetColor})
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			tweenBackgroundColor(button, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(Carget, Color3.fromRGB(24, 24, 24))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(7, 25, 4))
			tweenGuiPosition(Carget, 0.545)
			enabled.Value = true
		else
			tweenBackgroundColor(button, Color3.fromRGB(58, 58, 58))
			tweenBackgroundColor(Carget, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 25, 25))
			tweenGuiPosition(Carget, 0.065)
			enabled.Value = false
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		if Config.LoadConfig("default") and Config.IsEnabled(category, title) then
			applyEnabledState(true)
		else
			applyEnabledState(false)
		end
	end)

end;
task.spawn(C_4d2);
-- StarterGui.xescriptsXD.Frame.Settings.ScrollingFrame.ClickGui.Enable.TextButton.LocalScript
local function C_4dd()
	local script = G2L["4dd"];
	local TweenService = game:GetService("TweenService")

	local title = "YellowBack"
	local category = "Settings" -- категория для сохранения
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local rootFrame = script.Parent.Parent.Parent.Parent.Parent.Parent -- целевой объект для фоновой анимации

	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function tweenBackgroundColor(guiObject, targetColor)
		if guiObject and guiObject:IsA("GuiObject") then
			local tween = TweenService:Create(guiObject, tweenInfo, {BackgroundColor3 = targetColor})
			tween:Play()
		end
	end

	local function applyEnabledState(state)
		if state then
			tweenBackgroundColor(button, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(Carget, Color3.fromRGB(24, 24, 24))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 23, 0))
			tweenGuiPosition(Carget, 0.545)
			enabled.Value = true
		else
			tweenBackgroundColor(button, Color3.fromRGB(58, 58, 58))
			tweenBackgroundColor(Carget, Color3.fromRGB(229, 229, 229))
			tweenBackgroundColor(rootFrame, Color3.fromRGB(25, 25, 25))
			tweenGuiPosition(Carget, 0.065)
			enabled.Value = false
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		local newState = not enabled.Value
		applyEnabledState(newState)
		Config.SetEnabled(category, title, newState)
		Config.SaveConfig("default")
	end)

	task.defer(function()
		if Config.LoadConfig("default") and Config.IsEnabled(category, title) then
			applyEnabledState(true)
		else
			applyEnabledState(false)
		end
	end)

end;
task.spawn(C_4dd);
-- StarterGui.xescriptsXD.Frame.Lighting.LocalScript
local function C_509()
	local script = G2L["509"];
	local TweenService = game:GetService("TweenService")
	local scriptParent = script.Parent
	local scrollingFrame = script.Parent

	-- Более плавная и пружинящая анимация
	local tweenInfo = TweenInfo.new(
		0.45, -- Время (дольше, чтобы было плавнее)
		Enum.EasingStyle.Back, -- Эффект вылета с пружиной
		Enum.EasingDirection.Out
	)

	local resetInfo = TweenInfo.new(
		0.25,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out
	)

	local hasAnimated = false

	-- Устанавливаем "выдвигаемое" начальное положение
	local function resetPosition()
		scrollingFrame.Position = UDim2.new(0.293, 0, 0.20, 0)
	end

	local function animateIn()
		local targetPosition = UDim2.new(0.293, 0, 0.150, 0)
		local tween = TweenService:Create(scrollingFrame, tweenInfo, {Position = targetPosition})
		tween:Play()
	end

	-- Следим за изменением видимости
	scriptParent:GetPropertyChangedSignal("Visible"):Connect(function()
		if scriptParent.Visible and not hasAnimated then
			resetPosition() -- Задаём позицию "до"
			animateIn()     -- Плавно выезжает вверх
			hasAnimated = true
		elseif not scriptParent.Visible then
			hasAnimated = false
		end
	end)
end;
task.spawn(C_509);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable2.TextButton.LocalScript
local function C_512()
	local script = G2L["512"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "ThirdPerson"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 2)

		enabled.Value = true
		mdd.start()

		tweenGuiPosition(Carget, 0.545)

		Config.SetEnabled("Visual", title, true)
		Config.SaveConfig("default")
	end

	local function disableFeature()
		enabled.Value = false

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 2)

		mdd.stop()

		tweenGuiPosition(Carget, 0.065)

		Config.SetEnabled("Visual", title, false)
		Config.SaveConfig("default")
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled("Visual", title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled("Visual", title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_512);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.LocalScript
local function C_520()
	local script = G2L["520"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "AntiAFK"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 2)

		enabled.Value = true
		mdd.Enable()

		tweenGuiPosition(Carget, 0.545)

		Config.SetEnabled("Misc", title, true)
		Config.SaveConfig("default")
	end

	local function disableFeature()
		enabled.Value = false

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 2)

		mdd.Disable()

		tweenGuiPosition(Carget, 0.065)

		Config.SetEnabled("Misc", title, false)
		Config.SaveConfig("default")
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled("Misc", title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled("Misc", title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_520);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.TextBox.LocalScript
local function C_52a()
	local script = G2L["52a"];
	script.Parent.FocusLost:Connect(function()
		local mdd = require(script.Parent.Parent.Enable2.TextButton.Settings)

		mdd.Settings.zoom = tonumber(script.Parent.Text)
	end)
end;
task.spawn(C_52a);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.LocalScript
local function C_52f()
	local script = G2L["52f"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "AntiAim"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled(title, "Enabled", 2)

			enabled.Value = true
			mdd.start()

			tweenGuiPosition(Carget, 0.545)
		else
			enabled.Value = false
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			msg.Disabled(title, "Disabled", 2)
			mdd.stop()

			tweenGuiPosition(Carget, 0.065)
		end
	end)

end;
task.spawn(C_52f);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.LocalScript
local function C_53b()
	local script = G2L["53b"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "FlingAura"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example"):Clone()
		array.Name = title
		array.TextLabel.Text = title
		array.Visible = true
		array.Parent = arrayListFolder

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		end

		msg.Enabled(title, "Enabled", 2)

		enabled.Value = true
		mdd.Start(game.Players.LocalPlayer)

		tweenGuiPosition(Carget, 0.545)

		Config.SetEnabled("Misc", title, true)
		Config.SaveConfig("default")
	end

	local function disableFeature()
		enabled.Value = false

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		end

		local array = arrayListFolder:FindFirstChild(title)
		if array then
			array:Destroy()
		end

		msg.Disabled(title, "Disabled", 2)

		mdd.Stop()

		tweenGuiPosition(Carget, 0.065)

		Config.SetEnabled("Misc", title, false)
		Config.SaveConfig("default")
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled("Misc", title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled("Misc", title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_53b);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Other.Enable3.TextButton.LocalScript
local function C_549()
	local script = G2L["549"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")

	local player = Players.LocalPlayer
	local button = script.Parent.Parent
	local enabled = button.Enabled
	local Carget = button.Carget
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList

	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local title = "Jerk"

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
		TweenService:Create(guiObject, tweenInfo, goal):Play()
	end

	local function createTPTool()
		local backpack = player.Backpack
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:FindFirstChildWhichIsA("Humanoid")

		if not humanoid then return end

		-- Удаляем старые
		for _, tool in pairs(backpack:GetChildren()) do
			if tool.Name == "Jerk" then tool:Destroy() end
		end
		for _, tool in pairs(character:GetChildren()) do
			if tool.Name == "Jerk" then tool:Destroy() end
		end

		local tool = Instance.new("Tool")
		tool.Name = "Jerk"
		tool.RequiresHandle = false
		tool.CanBeDropped = false

		local jorkin = false
		local track = nil

		local function stopAnimation()
			jorkin = false
			if track then
				track:Stop()
				track = nil
			end
		end

		local function isR15()
			return humanoid.RigType == Enum.HumanoidRigType.R15
		end

		tool.Equipped:Connect(function()
			jorkin = true
		end)

		tool.Unequipped:Connect(stopAnimation)
		humanoid.Died:Connect(stopAnimation)

		task.spawn(function()
			while task.wait() do
				if not jorkin then continue end

				if not track then
					local anim = Instance.new("Animation")
					anim.AnimationId = isR15() and "rbxassetid://698251653" or "rbxassetid://72042024"
					track = humanoid:LoadAnimation(anim)
					track.Priority = Enum.AnimationPriority.Action4 -- Важный момент!
				end

				track:Play()
				track:AdjustSpeed(isR15() and 0.7 or 0.65)
				track.TimePosition = 0.6

				task.wait(0.1)
				while track and track.TimePosition < (isR15() and 0.7 or 0.65) do
					task.wait(0.1)
				end

				if track then
					track:Stop()
					track = nil
				end
			end
		end)

		tool.Parent = backpack
	end

	local function updateArrayList(show)
		local array = arrayListFolder:FindFirstChild(title)
		if show then
			if not array then
				array = arrayListFolder.Example:Clone()
				array.Name = title
				array.TextLabel.Text = title
				array.Visible = true
				array.Parent = arrayListFolder
			end
		else
			if array then array:Destroy() end
		end
	end

	local function sendEnabled()
		msg.Enabled(title, "Enabled", 2)
	end
	local function sendDisabled()
		msg.Disabled(title, "Disabled", 2)
	end
	local function sendInfo(text)
		msg.Info(title, text, 2)
	end

	player.CharacterAdded:Connect(function()
		if enabled.Value then
			RunService.Heartbeat:Wait()
			task.wait(1)
			if enabled.Value then
				createTPTool()
				sendInfo("Successfully granted")
			end
		end
	end)

	local function enableFeature()
		enabled.Value = true
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
		tweenGuiPosition(Carget, 0.545)
		updateArrayList(true)
		sendEnabled()
		createTPTool()

		Config.SetEnabled("Player", title, true)
		Config.SaveConfig("default")
	end

	local function disableFeature()
		enabled.Value = false
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		tweenGuiPosition(Carget, 0.065)
		updateArrayList(false)
		sendDisabled()

		for _, tool in pairs(player.Backpack:GetChildren()) do
			if tool.Name == "Jerk" then tool:Destroy() end
		end
		if player.Character then
			for _, tool in pairs(player.Character:GetChildren()) do
				if tool.Name == "Jerk" then tool:Destroy() end
			end
		end

		Config.SetEnabled("Player", title, false)
		Config.SaveConfig("default")
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния
	task.defer(function()
		local loaded = Config.LoadConfig("default")
		if loaded and Config.IsEnabled("Player", title) then
			enableFeature()
		else
			disableFeature()
		end
	end)

end;
task.spawn(C_549);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable1.TextButton.LocalScript
local function C_558()
	local script = G2L["558"];
	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")

	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	-- Звук по умолчанию
	local storagee = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Assets.Sfx.Hit
	local currentSFX = storagee:FindFirstChild("Rust")

	-- Tween для позиции GUI
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Активация кнопки
	script.Parent.MouseButton1Click:Connect(function()
		if not enabled or not currentSFX then return end

		if not enabled.Value then
			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = "HitSFX"
			array.TextLabel.Text = "HitSFX"
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled("HitSFX", "Enabled", 2)

			enabled.Value = true
			tweenGuiPosition(Carget, 0.545)
		else
			local array = arrayListFolder:FindFirstChild("HitSFX")
			if array then array:Destroy() end

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			msg.Disabled("HitSFX", "Disabled", 2)

			enabled.Value = false
			tweenGuiPosition(Carget, 0.065)
		end
	end)

	-- Обработка клика по игроку и проигрывание звука
	UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
		if gameProcessedEvent or not enabled.Value then return end

		local mouse = Players.LocalPlayer:GetMouse()
		local target = mouse.Target

		if target and target.Parent then
			local player = Players:GetPlayerFromCharacter(target.Parent)
			if player and player ~= Players.LocalPlayer and player.Character then
				local targetPart = player.Character:FindFirstChild("HumanoidRootPart") or player.Character:FindFirstChild("Head")
				if targetPart and currentSFX then
					local sound = currentSFX:Clone()
					sound.Parent = targetPart
					sound:Play()
					sound.Volume = script.Parent.Parent.Parent.Volume.Value
					sound.Ended:Connect(function() sound:Destroy() end)
				end
			end
		end
	end)

	-- Обновление звука из Selectto
	local selectTo = script.Parent.Parent.Parent.Value
	if selectTo then
		selectTo.Changed:Connect(function()
			local newSound = storagee:FindFirstChild(selectTo.Value)
			if newSound then
				currentSFX = newSound
			end
		end)
	end

end;
task.spawn(C_558);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
local function C_564()
	local script = G2L["564"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Value.Value = "Rust"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Value.Value = "Rust"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_564);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
local function C_572()
	local script = G2L["572"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Value.Value = "Beep1"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Value.Value = "Rust"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_572);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
local function C_57e()
	local script = G2L["57e"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Value.Value = "Bass1"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Value.Value = "Rust"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_57e);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
local function C_589()
	local script = G2L["589"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Value.Value = "Classic"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Value.Value = "Rust"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_589);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
local function C_596()
	local script = G2L["596"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Value.Value = "Hit1"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Value.Value = "Rust"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_596);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
local function C_5a2()
	local script = G2L["5a2"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Value.Value = "Hit2"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Value.Value = "Rust"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_5a2);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Enable.TextButton.LocalScript
local function C_5ae()
	local script = G2L["5ae"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Value.Value = "Hit3"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Value.Value = "Rust"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_5ae);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.HITSFX.Transparency.Carget.TextButton.LocalScript
local function C_5be()
	local script = G2L["5be"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local sliderFrame = script.Parent.Parent
	local mainFrame = sliderFrame.Parent
	local transparencyVal = mainFrame.Parent:FindFirstChild("Volume")
	local label = mainFrame:FindFirstChild("TextLabel")

	-- Состояние
	local dragging = false
	local maxXScale = 0.905 -- ограничение по X

	-- Функция обновления позиции ползунка и значения
	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- от 0 до 0.905

		local normalizedValue = scaleWithinLimit / maxXScale -- от 0.0 до 1.0
		normalizedValue = math.clamp(normalizedValue, 0, 1)
		normalizedValue = tonumber(string.format("%.1f", normalizedValue)) -- округляем до 0.0

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		transparencyVal.Value = normalizedValue
		label.Text = string.format("Volume: %.1f", normalizedValue)
	end

	-- Установка дефолтного состояния
	local defaultValue = 0.5
	sliderFrame.Position = UDim2.new(defaultValue * maxXScale, 0, 0, 0)
	transparencyVal.Value = defaultValue
	label.Text = string.format("Volume: %.1f", defaultValue)

	-- Начало перетаскивания
	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	-- Конец перетаскивания
	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Обновление в каждый кадр
	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)
end;
task.spawn(C_5be);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Enable1.TextButton.LocalScript
local function C_5c7()
	local script = G2L["5c7"];
	local TweenService = game:GetService("TweenService")

	local title = "TouchFling"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if enabled.Value == false then
			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled(title, "Enabled", 2)

			enabled.Value = true
			mdd.start()

			tweenGuiPosition(Carget, 0.545)
		else
			enabled.Value = false

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			msg.Disabled(title, "Disabled", 2)

			mdd.stop()

			tweenGuiPosition(Carget, 0.065)
		end
	end)

end;
task.spawn(C_5c7);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.Transparency.Carget.TextButton.LocalScript
local function C_5d7()
	local script = G2L["5d7"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local sliderFrame = script.Parent.Parent
	local mainFrame = sliderFrame.Parent
	local volumeVal = mainFrame.Parent:FindFirstChild("power")
	local label = mainFrame:FindFirstChild("TextLabel")
	-- Настройки диапазона
	local minVolume = 16
	local maxVolume = 500
	local maxXScale = 0.905
	local dragging = false

	-- Обновление ползунка и значения
	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- от 0 до 0.905

		local normalizedValue = scaleWithinLimit / maxXScale -- от 0.0 до 1.0
		normalizedValue = math.clamp(normalizedValue, 0, 1)

		local volume = math.floor(minVolume + (maxVolume - minVolume) * normalizedValue)

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		volumeVal.Value = volume
		label.Text = string.format("Speed: %d", volume)
	end

	-- Установка значения и позиции ползунка по значению
	local function setSliderByValue(value)
		local clamped = math.clamp(value, minVolume, maxVolume)
		local normalized = (clamped - minVolume) / (maxVolume - minVolume)
		local scaleWithinLimit = normalized * maxXScale

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		volumeVal.Value = clamped
		label.Text = string.format("Speed: %d", clamped)
	end

	-- Установка значения по умолчанию (5000)
	setSliderByValue(200)

	-- Начало перетаскивания
	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	-- Конец перетаскивания
	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Обновление каждый кадр
	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)
end;
task.spawn(C_5d7);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.FreeCam.TextBox.TextButton.LocalScript
local function C_5dd()
	local script = G2L["5dd"];
	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")

	local button = script.Parent  -- Кнопка (для клика)
	local textLabel = script.Parent.Parent -- Место для текста бинда
	local toggleUI = script.Parent.Parent.Parent.Parent.Parent.Parent -- UI для открытия/закрытия
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local title = "Freecam"

	local waitingForBind = false
	local currentBind = nil

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local mdd = require(script.Parent.Parent.Parent.Enable1.TextButton.ModuleScript)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = script.Parent.Parent.Parent.Enable1:FindFirstChild("Enabled")
	local Carget = script.Parent.Parent.Parent.Enable1:FindFirstChild("Carget")

	-- Обновление текста
	local function UpdateBindText()
		if currentBind then
			textLabel.Text = "Bind: "..tostring(currentBind)
		else
			textLabel.Text = "Bind (None)"
		end
	end

	-- Начинаем ожидать ввод клавиши для бинда
	local function StartWaitingForBind()
		waitingForBind = true
		textLabel.Text = "(Backspace to reset)"
	end

	-- Tween GUI позиция
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Обработка клика по кнопке — запускаем ожидание бинда
	button.MouseButton1Click:Connect(function()
		if not waitingForBind then
			StartWaitingForBind()
		end
	end)

	-- Обработка нажатия клавиш
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed or input.UserInputType ~= Enum.UserInputType.Keyboard then return end
		local keyName = input.KeyCode.Name

		if waitingForBind then
			-- В режиме ожидания бинда назначаем или сбрасываем
			if input.KeyCode == Enum.KeyCode.Escape then
				textLabel.Text = "Error"
			elseif input.KeyCode == Enum.KeyCode.Backspace then
				currentBind = nil
				waitingForBind = false
				UpdateBindText()
			else
				currentBind = keyName
				waitingForBind = false
				UpdateBindText()
			end
		else
			-- Если не ждём бинда — переключаем UI по нажатию на currentBind
			if currentBind and keyName == currentBind then
				if not enabled or enabled.Value == false then
					local array = arrayListFolder:FindFirstChild("Example"):Clone()
					array.Name = title
					array.TextLabel.Text = title
					array.Visible = true
					array.Parent = arrayListFolder

					TweenService:Create(script.Parent.Parent.Parent.Enable1, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
					if Carget then
						TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
					end

					msg.Enabled(title, "Enabled", 2)

					tweenGuiPosition(Carget, 0.545)
					mdd.start()
					enabled.Value = true
				else
					TweenService:Create(script.Parent.Parent.Parent.Enable1, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
					if Carget then
						TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
					end

					local array = arrayListFolder:FindFirstChild(title)
					if array then
						array:Destroy()
					end

					msg.Disabled(title, "Disabled", 2)

					mdd.stop()
					enabled.Value = false
					tweenGuiPosition(Carget, 0.065)
				end
			end
		end
	end)

	-- Инициализация текста
	UpdateBindText()

end;
task.spawn(C_5dd);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable1.TextButton.LocalScript
local function C_5e5()
	local script = G2L["5e5"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "Antifling"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local msg
	local Config = nil

	pcall(function()
		msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
		Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)
	end)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	local function enableFeature()
		local array = arrayListFolder:FindFirstChild("Example")
		if array then
			local clone = array:Clone()
			clone.Name = title
			clone.TextLabel.Text = title
			clone.Visible = true
			clone.Parent = arrayListFolder
		end

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			tweenGuiPosition(Carget, 0.545)
		end

		if msg and msg.Enabled then
			msg.Enabled(title, "Enabled", 2)
		end

		enabled.Value = true
		mdd.Enable()

		if Config then
			Config.SetEnabled("Visual", title, true)
			Config.SaveConfig("default")
		end
	end

	local function disableFeature()
		mdd.Disable()

		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			tweenGuiPosition(Carget, 0.065)
		end

		local existing = arrayListFolder:FindFirstChild(title)
		if existing then
			existing:Destroy()
		end

		if msg and msg.Disabled then
			msg.Disabled(title, "Disabled", 2)
		end

		enabled.Value = false

		if Config then
			Config.SetEnabled("Visual", title, false)
			Config.SaveConfig("default")
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка при запуске
	task.defer(function()
		if Config and Config.LoadConfig("default") then
			if Config.IsEnabled("Visual", title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			if Config then
				Config.SetEnabled("Visual", title, false)
				Config.SaveConfig("default")
			end
			disableFeature()
		end
	end)

end;
task.spawn(C_5e5);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AntiFling.Enable.TextButton.LocalScript
local function C_5f2()
	local script = G2L["5f2"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "AntiFlingAntiTool"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	local Carget = button:FindFirstChild("Carget")
	local Config = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.cfg)

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			TweenService:Create(guiObject, tweenInfo, goal):Play()
		end
	end

	local function enableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			tweenGuiPosition(Carget, 0.545)
		end

		enabled.Value = true
		script.Parent.Parent.Parent.Bypass1.Value = true

		Config.SetEnabled("Visual", title, true)
		Config.SaveConfig("default")

		local clone = arrayListFolder:FindFirstChild("Example")
		if clone then
			local array = clone:Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder
		end
	end

	local function disableFeature()
		TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
		if Carget then
			TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			tweenGuiPosition(Carget, 0.065)
		end

		enabled.Value = false
		script.Parent.Parent.Parent.Bypass1.Value = false

		Config.SetEnabled("Visual", title, false)
		Config.SaveConfig("default")

		local existing = arrayListFolder:FindFirstChild(title)
		if existing then
			existing:Destroy()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			enableFeature()
		else
			disableFeature()
		end
	end)

	-- Автозагрузка состояния при старте
	task.defer(function()
		if Config.LoadConfig("default") then
			if Config.IsEnabled("Visual", title) then
				enableFeature()
			else
				disableFeature()
			end
		else
			Config.SetEnabled("Visual", title, false)
			Config.SaveConfig("default")
		end
	end)

end;
task.spawn(C_5f2);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_602()
	local script = G2L["602"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = ""
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TeamCheck.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TeamCheck.Value = false
			enabled.Value = false
			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_602);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_60e()
	local script = G2L["60e"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.FovCheck.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.FovCheck.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_60e);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_61a()
	local script = G2L["61a"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.IfFovCircle.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.IfFovCircle.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_61a);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_626()
	local script = G2L["626"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.PredictionMove.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.PredictionMove.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_626);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_632()
	local script = G2L["632"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.AvoidBehind.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.AvoidBehind.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_632);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
local function C_63b()
	local script = G2L["63b"];
	script.Parent.FocusLost:Connect(function()
		local mdd = script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.Predict

		mdd.Value = tonumber(script.Parent.Text)
	end)
end;
task.spawn(C_63b);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_640()
	local script = G2L["640"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetHud.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Preview.ImageLabel.TargetHud1.Visible = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetHud.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Preview.ImageLabel.TargetHud1.Visible = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_640);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_64c()
	local script = G2L["64c"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetESP.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Preview.ImageLabel.TargetESP.Visible = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetESP.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Preview.ImageLabel.TargetESP.Visible = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_64c);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_658()
	local script = G2L["658"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetHudd.Value = "TargetHUD1"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetHudd.Value = "TargetHUD1"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_658);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_665()
	local script = G2L["665"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetHudd.Value = "TargetHUD2"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetHudd.Value = "TargetHUD2"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_665);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_673()
	local script = G2L["673"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetEspp.Value = "TargetESP1"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetEspp.Value = "TargetESP1"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_673);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_67e()
	local script = G2L["67e"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetEspp.Value = "TargetESP2"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TargetEspp.Value = "TargetESP2"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_67e);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
local function C_687()
	local script = G2L["687"];
	local RunService = game:GetService("RunService")
	local Lighting = game:GetService("Lighting")
	local TextBox = script.Parent -- Поле ввода текста
	local values = script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values

	-- Функция для обновления списка игроков в BlackList
	local function updateBlackList()
		local inputText = TextBox.Text

		-- Разбиваем введённый текст на список по запятой и пробелу
		local players = {}
		for player in inputText:gmatch("[^,%s]+") do
			table.insert(players, player)
		end

		-- Преобразуем список в строку, чтобы сохранить в Value (если это StringValue)
		if values.BlackList:IsA("StringValue") then
			values.BlackList.Value = table.concat(players, ", ")
		end
	end

	-- Обновление списка при потере фокуса
	TextBox.FocusLost:Connect(updateBlackList)
end;
task.spawn(C_687);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_68c()
	local script = G2L["68c"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.CheckAlive.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.CheckAlive.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_68c);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_697()
	local script = G2L["697"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.SilentAim.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.SilentAim.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_697);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_6a4()
	local script = G2L["6a4"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.SortBy.Value = "Health"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.SortBy.Value = "Health"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_6a4);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_6af()
	local script = G2L["6af"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.SortBy.Value = "Distance"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.SortBy.Value = "Distance"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_6af);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_6ba()
	local script = G2L["6ba"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.SortBy.Value = "Smart"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.SortBy.Value = "Smart"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_6ba);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_6c7()
	local script = G2L["6c7"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.WallCheck.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.WallCheck.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_6c7);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
local function C_6d1()
	local script = G2L["6d1"];
	script.Parent.FocusLost:Connect(function()
		local mdd = script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.Smoothness

		mdd.Value = tonumber(script.Parent.Text)
	end)
end;
task.spawn(C_6d1);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
local function C_6d3()
	local script = G2L["6d3"];
	local RunService = game:GetService("RunService")
	local Lighting = game:GetService("Lighting")
	local TextBox = script.Parent
	local values = script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values

	TextBox.FocusLost:Connect(function()
		local inputText = TextBox.Text
		if #inputText > 0 then
			-- Сделать первую букву заглавной, остальное как есть
			local formattedText = inputText:sub(1,1):upper() .. inputText:sub(2)
			values.ToggleKey.Value = formattedText
		else
			values.ToggleKey.Value = inputText
		end
	end)
end;
task.spawn(C_6d3);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_6d9()
	local script = G2L["6d9"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.ActivateValue.Value = "RMB"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.ActivateValue.Value = "RMB"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_6d9);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_6e4()
	local script = G2L["6e4"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.ActivateValue.Value = "LMB"

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.ActivateValue.Value = "LMB"

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_6e4);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
local function C_6ee()
	local script = G2L["6ee"];
	script.Parent.FocusLost:Connect(function()
		local mdd = script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.FovRadius

		mdd.Value = tonumber(script.Parent.Text)
	end)
end;
task.spawn(C_6ee);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
local function C_6f0()
	local script = G2L["6f0"];
	script.Parent.FocusLost:Connect(function()
		local mdd = script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.TransparencyCircle

		mdd.Value = tonumber(script.Parent.Text)
	end)
end;
task.spawn(C_6f0);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
local function C_6f2()
	local script = G2L["6f2"];
	local textBox = script.Parent
	local colorVal = script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.CircleColor

	textBox.FocusLost:Connect(function(enterPressed)
		if not enterPressed then return end -- изменять только при нажатии Enter

		local text = textBox.Text
		if text == "" then return end -- если поле пустое, ничего не делать

		-- Предполагаем формат: "R,G,B", например "255,128,0"
		local r, g, b = text:match("(%d+)%s*,%s*(%d+)%s*,%s*(%d+)")
		if r and g and b then
			r = tonumber(r)
			g = tonumber(g)
			b = tonumber(b)
			-- Проверяем диапазон 0–255
			if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
				colorVal.Value = Color3.fromRGB(r, g, b)
			end
		end
	end)
end;
task.spawn(C_6f2);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.TextBox.LocalScript
local function C_6f4()
	local script = G2L["6f4"];
	script.Parent.FocusLost:Connect(function()
		script.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.MaxDistance.Value = tonumber(script.Parent.Text)
	end)
end;
task.spawn(C_6f4);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_6f9()
	local script = G2L["6f9"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.OneTarget.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.OneTarget.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_6f9);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.Aimbot.Enable.TextButton.LocalScript
local function C_707()
	local script = G2L["707"];
	local TweenService = game:GetService("TweenService")
	local StarterGui = game:GetService("StarterGui")

	local title = "rust"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if enabled.Value == false then
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end
			enabled.Value = true
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.AutoShoot.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			enabled.Value = false
			script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.Console.Values.AutoShoot.Value = false

			tweenGuiPosition(Carget, 0.065)
		end
	end)
end;
task.spawn(C_707);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton.LocalScript
local function C_716()
	local script = G2L["716"];
	local TweenService = game:GetService("TweenService")

	local title = "TouchFling"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if enabled.Value == false then
			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled(title, "Enabled", 2)

			enabled.Value = true
			mdd.start()

			tweenGuiPosition(Carget, 0.545)
		else
			enabled.Value = false

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			msg.Disabled(title, "Disabled", 2)

			mdd.stop()

			tweenGuiPosition(Carget, 0.065)
		end
	end)

end;
task.spawn(C_716);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Transparency.Carget.TextButton.LocalScript
local function C_726()
	local script = G2L["726"];
	local uis = game:GetService("UserInputService")
	local rs = game:GetService("RunService")

	local sliderFrame = script.Parent.Parent
	local mainFrame = sliderFrame.Parent
	local volumeVal = mainFrame.Parent:FindFirstChild("power")
	local label = mainFrame:FindFirstChild("TextLabel")
	-- Настройки диапазона
	local minVolume = 70
	local maxVolume = 10000
	local maxXScale = 0.905
	local dragging = false

	-- Обновление ползунка и значения
	local function updateSlider(mouseX)
		local parentAbsPos = mainFrame.AbsolutePosition.X
		local parentAbsSize = mainFrame.AbsoluteSize.X

		local relX = math.clamp(mouseX - parentAbsPos, 0, parentAbsSize * maxXScale)
		local scaleWithinLimit = relX / parentAbsSize -- от 0 до 0.905

		local normalizedValue = scaleWithinLimit / maxXScale -- от 0.0 до 1.0
		normalizedValue = math.clamp(normalizedValue, 0, 1)

		local volume = math.floor(minVolume + (maxVolume - minVolume) * normalizedValue)

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		volumeVal.Value = volume
		label.Text = string.format("Power: %d", volume)
	end

	-- Установка значения и позиции ползунка по значению
	local function setSliderByValue(value)
		local clamped = math.clamp(value, minVolume, maxVolume)
		local normalized = (clamped - minVolume) / (maxVolume - minVolume)
		local scaleWithinLimit = normalized * maxXScale

		sliderFrame.Position = UDim2.new(scaleWithinLimit, 0, 0, 0)
		volumeVal.Value = clamped
		label.Text = string.format("Power: %d", clamped)
	end

	-- Установка значения по умолчанию (5000)
	setSliderByValue(5000)

	-- Начало перетаскивания
	script.Parent.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
		end
	end)

	-- Конец перетаскивания
	script.Parent.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	-- Обновление каждый кадр
	rs.RenderStepped:Connect(function()
		if dragging then
			local mouseX = uis:GetMouseLocation().X
			updateSlider(mouseX)
		end
	end)
end;
task.spawn(C_726);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton.LocalScript
local function C_730()
	local script = G2L["730"];
	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local Workspace = game:GetService("Workspace")

	local title = "RobloxEgor"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local player = Players.LocalPlayer
	local camera = Workspace.CurrentCamera
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local rootPart = character:WaitForChild("HumanoidRootPart")

	local lagConnection, cameraConnection
	local lastPosition = nil
	local isLagging = false
	local savedCameraCFrame

	-- Функция для остановки лага
	local function stopLagEffect()
		if lagConnection then lagConnection:Disconnect() lagConnection = nil end
		if cameraConnection then cameraConnection:Disconnect() cameraConnection = nil end
		isLagging = false
		lastPosition = nil

		humanoid.AutoRotate = true
	end

	-- Функция для имитации лага (бег на месте)
	local function startLagEffect()
		stopLagEffect()

		humanoid.AutoRotate = false

		lagConnection = RunService.Heartbeat:Connect(function()
			if not character or not character.Parent then
				character = player.Character
				if character then
					humanoid = character:WaitForChild("Humanoid")
					rootPart = character:WaitForChild("HumanoidRootPart")
				else
					return
				end
			end

			if humanoid.MoveDirection.Magnitude > 0 then
				if not isLagging then
					lastPosition = rootPart.Position
					isLagging = true
				end
				rootPart.CFrame = CFrame.new(lastPosition, lastPosition + humanoid.MoveDirection)
			else
				isLagging = false
				lastPosition = nil
			end
		end)
	end

	-- Tween GUI позиция
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Обновление при респавне
	player.CharacterAdded:Connect(function(newCharacter)
		character = newCharacter
		humanoid = character:WaitForChild("Humanoid")
		rootPart = character:WaitForChild("HumanoidRootPart")

		if enabled.Value then
			startLagEffect()
		end
	end)

	-- Запуск вручную через кнопку
	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			startLagEffect()

			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled(title, "Enabled", 2)
			enabled.Value = true
			tweenGuiPosition(Carget, 0.545)
		else
			stopLagEffect()

			enabled.Value = false
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then array:Destroy() end

			msg.Disabled(title, "Disabled", 2)
			tweenGuiPosition(Carget, 0.065)
		end
	end)

	-- Автостарт при включённом флаге
	if enabled.Value then
		startLagEffect()
	end

end;
task.spawn(C_730);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.TextBox.TextButton.LocalScript
local function C_73b()
	local script = G2L["73b"];
	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")

	local button = script.Parent  -- Кнопка (для клика)
	local textLabel = script.Parent.Parent -- Место для текста бинда
	local toggleUI = script.Parent.Parent.Parent.Parent.Parent.Parent -- UI для открытия/закрытия
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local title = "TouchFling"

	local waitingForBind = false
	local currentBind = nil

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local mdd = require(script.Parent.Parent.Parent.Enable1.TextButton.ModuleScript)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = script.Parent.Parent.Parent.Enable1:FindFirstChild("Enabled")
	local Carget = script.Parent.Parent.Parent.Enable1:FindFirstChild("Carget")

	-- Обновление текста
	local function UpdateBindText()
		if currentBind then
			textLabel.Text = "Bind: "..tostring(currentBind)
		else
			textLabel.Text = "Bind (None)"
		end
	end

	-- Начинаем ожидать ввод клавиши для бинда
	local function StartWaitingForBind()
		waitingForBind = true
		textLabel.Text = "(Backspace to reset)"
	end

	-- Tween GUI позиция
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Обработка клика по кнопке — запускаем ожидание бинда
	button.MouseButton1Click:Connect(function()
		if not waitingForBind then
			StartWaitingForBind()
		end
	end)

	-- Обработка нажатия клавиш
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed or input.UserInputType ~= Enum.UserInputType.Keyboard then return end
		local keyName = input.KeyCode.Name

		if waitingForBind then
			-- В режиме ожидания бинда назначаем или сбрасываем
			if input.KeyCode == Enum.KeyCode.Escape then
				textLabel.Text = "Error"
			elseif input.KeyCode == Enum.KeyCode.Backspace then
				currentBind = nil
				waitingForBind = false
				UpdateBindText()
			else
				currentBind = keyName
				waitingForBind = false
				UpdateBindText()
			end
		else
			-- Если не ждём бинда — переключаем UI по нажатию на currentBind
			if currentBind and keyName == currentBind then
				if not enabled or enabled.Value == false then
					local array = arrayListFolder:FindFirstChild("Example"):Clone()
					array.Name = title
					array.TextLabel.Text = title
					array.Visible = true
					array.Parent = arrayListFolder

					TweenService:Create(script.Parent.Parent.Parent.Enable1, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
					if Carget then
						TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
					end

					msg.Enabled(title, "Enabled", 2)

					tweenGuiPosition(Carget, 0.545)
					mdd.start()
					enabled.Value = true
				else
					TweenService:Create(script.Parent.Parent.Parent.Enable1, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
					if Carget then
						TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
					end

					local array = arrayListFolder:FindFirstChild(title)
					if array then
						array:Destroy()
					end

					msg.Disabled(title, "Disabled", 2)

					mdd.stop()
					enabled.Value = false
					tweenGuiPosition(Carget, 0.065)
				end
			end
		end
	end)

	-- Инициализация текста
	UpdateBindText()

end;
task.spawn(C_73b);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1.TextButton.LocalScript
local function C_740()
	local script = G2L["740"];
	local TweenService = game:GetService("TweenService")

	local title = "TouchFling"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")

	-- Поправь путь к Carget! Пример: если он в button
	local Carget = button:FindFirstChild("Carget")

	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if enabled.Value == false then

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			enabled.Value = true
			script.Parent.Parent.Parent.debug.Value = true

			tweenGuiPosition(Carget, 0.545)
		else
			enabled.Value = false

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			script.Parent.Parent.Parent.debug.Value = false


			tweenGuiPosition(Carget, 0.065)
		end
	end)

end;
task.spawn(C_740);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.TouchFling.Enable1g.TextButton.LocalScript
local function C_74c()
	local script = G2L["74c"];
	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local Workspace = game:GetService("Workspace")

	local title = "AntiGPlayPause"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local Carget = button:FindFirstChild("Carget")

	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)

	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()

	local antiPauseConnection

	-- Проверка эксплойт-функции
	local setHidden = sethiddenproperty or function(obj, prop, val)
	end

	-- Функция включения AntiGameplayPause
	local function startAntiPause()
		if antiPauseConnection then antiPauseConnection:Disconnect() end

		antiPauseConnection = RunService.RenderStepped:Connect(function()
			if player and player.Parent then
				-- Через эксплойт API отключаем GameplayPaused
				local success, err = pcall(function()
					setHidden(player, "GameplayPaused", false)
				end)
			end
		end)
	end

	-- Функция отключения AntiGameplayPause
	local function stopAntiPause()
		if antiPauseConnection then
			antiPauseConnection:Disconnect()
			antiPauseConnection = nil
		end
	end

	-- Tween GUI позиция
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Обновление при респавне
	player.CharacterAdded:Connect(function(newCharacter)
		character = newCharacter
		if enabled.Value then
			startAntiPause()
		end
	end)

	-- Кнопка включения/выключения
	script.Parent.MouseButton1Click:Connect(function()
		if not enabled.Value then
			startAntiPause()

			local array = arrayListFolder:FindFirstChild("Example"):Clone()
			array.Name = title
			array.TextLabel.Text = title
			array.Visible = true
			array.Parent = arrayListFolder

			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
			end

			msg.Enabled(title, "Enabled", 2)
			enabled.Value = true
			tweenGuiPosition(Carget, 0.545)
		else
			stopAntiPause()

			enabled.Value = false
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			local array = arrayListFolder:FindFirstChild(title)
			if array then array:Destroy() end

			msg.Disabled(title, "Disabled", 2)
			tweenGuiPosition(Carget, 0.065)
		end
	end)

	-- Автостарт при включённом флаге
	if enabled.Value then
		startAntiPause()
	end

end;
task.spawn(C_74c);
-- StarterGui.xescriptsXD.Frame.Lighting.ScrollingFrame.AutoJump.Enable1.TextButton.LocalScript
local function C_75d()
	local script = G2L["75d"];
	local Players = game:GetService("Players")
	local TweenService = game:GetService("TweenService")

	local title = "AutoJump"
	local button = script.Parent.Parent
	local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local mdd = require(script.Parent.ModuleScript)
	local msg = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.message)
	local arrayListFolder = script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Storage.ArrayList
	local enabled = button:FindFirstChild("Enabled")
	local playerTextBox = script.Parent.Parent.Parent:WaitForChild("PlayerTextBox")

	local Carget = button:FindFirstChild("Carget")

	-- Твин для GUI
	local function tweenGuiPosition(guiObject, xPos)
		if guiObject and guiObject:IsA("GuiObject") then
			local goal = {Position = UDim2.new(xPos, 0, 0.098, 0)}
			local tween = TweenService:Create(guiObject, tweenInfo, goal)
			tween:Play()
		end
	end

	-- Поиск игрока как в примере: LocalPlayer + остальные, Name и DisplayName
	local function findPlayer(playerName)
		playerName = playerName:lower()
		local localPlayer = Players.LocalPlayer

		if localPlayer and (localPlayer.Name:lower():find(playerName, 1, true) or localPlayer.DisplayName:lower():find(playerName, 1, true)) then
			return localPlayer
		end

		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= localPlayer and (player.Name:lower():find(playerName, 1, true) or player.DisplayName:lower():find(playerName, 1, true)) then
				return player
			end
		end

		return nil
	end

	-- Включение/отключение функции
	script.Parent.MouseButton1Click:Connect(function()
		if not enabled then return end

		if enabled.Value == false then
			local playerName = playerTextBox.Text
			local targetPlayer = findPlayer(playerName)

			if targetPlayer then
				-- Добавляем в ArrayList GUI
				local example = arrayListFolder:FindFirstChild("Example")
				if example then
					local clone = example:Clone()
					clone.Name = title
					clone.TextLabel.Text = title
					clone.Visible = true
					clone.Parent = arrayListFolder
				end

				-- Изменяем цвета кнопки
				TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
				if Carget then
					TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(24, 24, 24)}):Play()
				end

				-- Сообщение о включении
				msg.Enabled(title, "Enabled", 2)

				-- Включаем функцию в модуле
				enabled.Value = true
				mdd.start(targetPlayer)

				tweenGuiPosition(Carget, 0.545)
			else
				msg.error(title, "Player not found!", 2)
			end
		else
			-- Отключаем функцию
			enabled.Value = false

			-- Меняем цвета обратно
			TweenService:Create(button, tweenInfo, {BackgroundColor3 = Color3.fromRGB(58, 58, 58)}):Play()
			if Carget then
				TweenService:Create(Carget, tweenInfo, {BackgroundColor3 = Color3.fromRGB(229, 229, 229)}):Play()
			end

			-- Удаляем GUI из ArrayList
			local array = arrayListFolder:FindFirstChild(title)
			if array then
				array:Destroy()
			end

			-- Сообщение о выключении
			msg.Disabled(title, "Disabled", 2)

			-- Выключаем функцию в модуле
			mdd.stop()

			tweenGuiPosition(Carget, 0.065)
		end
	end)

end;
task.spawn(C_75d);
-- StarterGui.xescriptsXD.Frame.Lighting.Preview.UIStroke.UIGradient.LocalScript
local function C_78e()
	local script = G2L["78e"];
	local TweenService = game:GetService("TweenService")
	local uiGradient = script.Parent -- предполагаем, что это UIGradient

	-- Настройки
	local speed = 90 -- градусов в секунду
	local duration = 360 / speed -- время, чтобы пройти 360°

	-- Настройка tween
	local tweenInfo = TweenInfo.new(
		duration,
		Enum.EasingStyle.Linear,
		Enum.EasingDirection.InOut,
		-1, -- бесконечное повторение
		true -- реверс (чтобы был плавный цикл)
	)

	local goal = { Rotation = 360 } -- конечное значение

	local tween = TweenService:Create(uiGradient, tweenInfo, goal)
	tween:Play()

end;
task.spawn(C_78e);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.LocalScript
local function C_798()
	local script = G2L["798"];
	local TweenService = game:GetService("TweenService")
	local button = script.Parent.TextButton -- Кнопка
	local textLabel = script.Parent.TextLabel
	local img = script.Parent.ImageLabel
	local frame = script.Parent
	local frame2 = script.Parent.Parent.Visual
	local textLabel2 = script.Parent.Parent.Visual.TextLabel
	local img2 = script.Parent.Parent.Visual.ImageLabel
	local textLabel3 = script.Parent.Parent.Movement.TextLabel
	local img3 = script.Parent.Parent.Movement.ImageLabel
	local textLabel4 = script.Parent.Parent.Lighting.TextLabel
	local img4 = script.Parent.Parent.Lighting.ImageLabel
	local frame3 = script.Parent.Parent.Movement
	local frame4 = script.Parent.Parent.Lighting
	local frame5 = script.Parent.Parent.Settings
	local textlabel5 = script.Parent.Parent.Settings.TextLabel
	local img5 = script.Parent.Parent.Settings.ImageLabel

	local img7 = script.Parent.Parent.Console.ImageLabel
	local tl7 = script.Parent.Parent.Console.TextLabel
	local fr7 = script.Parent.Parent.Console

	-- Определите параметры анимации
	local tweenInfo = TweenInfo.new(
		0.2, -- Время анимации в секундах
		Enum.EasingStyle.Quad, -- Стиль изменения
		Enum.EasingDirection.Out -- Направление изменения
	)

	-- Цвета для состояния при наведении и уходе
	local colorOnHover = Color3.fromRGB(220, 220, 220)
	local colorOnLeave = Color3.fromRGB(45, 45, 45)

	-- Создание tween для изменения цвета текста и изображения при наведении
	local tweenOnHover = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnHover2 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnHover})

	local tweenOnLeave12 = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnLeave})
	local tweenOnLeave13 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnLeave})

	-- Создание tween для изменения цвета текста и изображения при уходе
	local tweenOnLeave1 = TweenService:Create(textLabel2, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave2 = TweenService:Create(img2, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave3 = TweenService:Create(textLabel3, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave4 = TweenService:Create(img3, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave5 = TweenService:Create(textLabel4, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave6 = TweenService:Create(img4, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave7 = TweenService:Create(img5, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave8 = TweenService:Create(textlabel5, tweenInfo, {TextColor3 = colorOnHover})

	local tol1 = TweenService:Create(tl7, tweenInfo, {TextColor3 = colorOnHover})
	local tol2 = TweenService:Create(img7, tweenInfo, {ImageColor3 = colorOnHover})
	local tfo1 = TweenService:Create(fr7, tweenInfo, {BackgroundTransparency = 1})

	-- Создание tween для появления и исчезновения фрейма
	local tweenFadeIn = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 0.1})
	local tweenFadeOut2 = TweenService:Create(frame2, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut3 = TweenService:Create(frame3, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut4 = TweenService:Create(frame4, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut5 = TweenService:Create(frame5, tweenInfo, {BackgroundTransparency = 1})
	-- Убедитесь, что начальная прозрачность Frame установлена на 1
	frame.BackgroundTransparency = 0.1

	-- Подключение обработчиков событий
	button.MouseButton1Click:Connect(function()
		-- Плавное появление фрейма
		tweenFadeIn:Play()
		script.Parent.Parent.Parent.Parent.General.Visible = true
		script.Parent.Parent.Parent.Parent.Movement.Visible = false
		script.Parent.Parent.Parent.Parent.Lighting.Visible = false
		script.Parent.Parent.Parent.Parent.Settings.Visible = false
		script.Parent.Parent.Parent.Parent.Visual.Visible = false
		script.Parent.Parent.Parent.Parent.Executor.Visible = false


		tol1:Play()
		tol2:Play()
		tfo1:Play()

		-- Плавное исчезновение фрейма при нажатии на другую кнопку
		-- Здесь добавьте код для скрытия фрейма при нажатии на другую кнопку

		-- Поменяйте цвета текста и изображения при наведении
		tweenFadeOut2:Play()
		tweenFadeOut3:Play()
		tweenFadeOut4:Play()
		tweenFadeOut5:Play()
		tweenOnLeave1:Play()
		tweenOnLeave2:Play()
		tweenOnLeave3:Play()
		tweenOnLeave4:Play()
		tweenOnLeave5:Play()
		tweenOnLeave6:Play()
		tweenOnLeave7:Play()
		tweenOnLeave8:Play()
		tweenOnLeave12:Play()
		tweenOnLeave13:Play()
	end)
end;
task.spawn(C_798);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.f
local function C_799()
	local script = G2L["799"];
	local TweenService = game:GetService("TweenService")
	local parent = script.Parent
	local button = parent:WaitForChild("TextButton")

	-- Центрируем элемент
	parent.AnchorPoint = Vector2.new(0.5, 0.5)
	parent.Position = UDim2.new(0.5, 0, 0.5, 0)

	-- Добавляем UIScale, если нужно
	local scale = parent:FindFirstChildOfClass("UIScale")
	if not scale then
		scale = Instance.new("UIScale")
		scale.Scale = 1
		scale.Parent = parent
	end

	-- TweenInfo
	local tweenTime = 0.2
	local easing = Enum.EasingStyle.Quad
	local direction = Enum.EasingDirection.Out

	-- Tween'ы
	local tweenHover = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1.04 })
	local tweenLeave = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1 })
	local tweenClick = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 0.95 })

	-- Наведение
	button.MouseEnter:Connect(function()
		tweenLeave:Pause()
		tweenClick:Pause()
		tweenHover:Play()
	end)

	button.MouseLeave:Connect(function()
		tweenHover:Pause()
		tweenClick:Pause()
		tweenLeave:Play()
	end)

	-- Клик
	button.MouseButton1Click:Connect(function()
		tweenHover:Pause()
		tweenLeave:Pause()
		tweenClick:Play()

		task.delay(tweenTime, function()
			tweenClick:Pause()
			tweenLeave:Play()
		end)
	end)
end;
task.spawn(C_799);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.TextButton.LocalScript
local function C_7a0()
	local script = G2L["7a0"];

end;
task.spawn(C_7a0);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.General.UIStroke.UIGradient.LocalScript
local function C_7a4()
	local script = G2L["7a4"];
	local runService = game:GetService("RunService")
	local uiGradient = script.Parent
	local parentFrame = uiGradient.Parent
	local mainGui = parentFrame and parentFrame.Parent

	local updateInterval = 0.05
	local lastUpdate = 0

	runService.Heartbeat:Connect(function(deltaTime)
		if mainGui.BackgroundTransparency > 0.5 then
			parentFrame.Enabled = false
			return
		end

		parentFrame.Enabled = true
		lastUpdate = lastUpdate + deltaTime

		if lastUpdate >= updateInterval then
			uiGradient.Rotation = (uiGradient.Rotation + 1.5) % 360
			lastUpdate = 0
		end
	end)

end;
task.spawn(C_7a4);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.LocalScript
local function C_7a8()
	local script = G2L["7a8"];
	local TweenService = game:GetService("TweenService")
	local button = script.Parent.TextButton -- Кнопка
	local textLabel = script.Parent.TextLabel
	local img = script.Parent.ImageLabel
	local frame = script.Parent
	local frame2 = script.Parent.Parent.Visual
	local textLabel2 = script.Parent.Parent.General.TextLabel
	local img2 = script.Parent.Parent.General.ImageLabel
	local textLabel3 = script.Parent.Parent.Movement.TextLabel
	local img3 = script.Parent.Parent.Movement.ImageLabel
	local textLabel4 = script.Parent.Parent.Lighting.TextLabel
	local img4 = script.Parent.Parent.Lighting.ImageLabel
	local frame3 = script.Parent.Parent.Movement
	local frame4 = script.Parent.Parent.Lighting
	local frame5 = script.Parent.Parent.General
	local frame6 = script.Parent.Parent.Settings
	local textlabel6 = script.Parent.Parent.Settings.TextLabel
	local img6 = script.Parent.Parent.Settings.ImageLabel


	local img7 = script.Parent.Parent.Console.ImageLabel
	local tl7 = script.Parent.Parent.Console.TextLabel
	local fr7 = script.Parent.Parent.Console

	-- Определите параметры анимации
	local tweenInfo = TweenInfo.new(
		0.2, -- Время анимации в секундах
		Enum.EasingStyle.Quad, -- Стиль изменения
		Enum.EasingDirection.Out -- Направление изменения
	)

	-- Цвета для состояния при наведении и уходе
	local colorOnHover = Color3.fromRGB(220, 220, 220)
	local colorOnLeave = Color3.fromRGB(45, 45, 45)

	-- Создание tween для изменения цвета текста и изображения при наведении
	local tweenOnHover = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnHover2 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnHover})

	local tweenOnLeave12 = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnLeave})
	local tweenOnLeave13 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnLeave})

	-- Создание tween для изменения цвета текста и изображения при уходе
	local tweenOnLeave1 = TweenService:Create(textLabel2, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave2 = TweenService:Create(img2, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave3 = TweenService:Create(textLabel3, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave4 = TweenService:Create(img3, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave5 = TweenService:Create(textLabel4, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave6 = TweenService:Create(img4, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave7 = TweenService:Create(textlabel6, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave8 = TweenService:Create(img6, tweenInfo, {ImageColor3 = colorOnHover})

	local tol1 = TweenService:Create(tl7, tweenInfo, {TextColor3 = colorOnHover})
	local tol2 = TweenService:Create(img7, tweenInfo, {ImageColor3 = colorOnHover})
	local tfo1 = TweenService:Create(fr7, tweenInfo, {BackgroundTransparency = 1})

	-- Создание tween для появления и исчезновения фрейма
	local tweenFadeIn = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 0.1})
	local tweenFadeOut2 = TweenService:Create(frame2, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut3 = TweenService:Create(frame3, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut4 = TweenService:Create(frame4, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut5 = TweenService:Create(frame5, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut6 = TweenService:Create(frame6, tweenInfo, {BackgroundTransparency = 1})
	-- Убедитесь, что начальная прозрачность Frame установлена на 1
	frame.BackgroundTransparency = 1

	-- Подключение обработчиков событий
	button.MouseButton1Click:Connect(function()
		-- Плавное появление фрейма
		tweenFadeIn:Play()
		script.Parent.Parent.Parent.Parent.General.Visible = false
		script.Parent.Parent.Parent.Parent.Movement.Visible = false
		script.Parent.Parent.Parent.Parent.Lighting.Visible = false
		script.Parent.Parent.Parent.Parent.Visual.Visible = true
		script.Parent.Parent.Parent.Parent.Settings.Visible = false
		script.Parent.Parent.Parent.Parent.Executor.Visible = false


		tol1:Play()
		tol2:Play()
		tfo1:Play()

		-- Плавное исчезновение фрейма при нажатии на другую кнопку
		-- Здесь добавьте код для скрытия фрейма при нажатии на другую кнопку

		-- Поменяйте цвета текста и изображения при наведении
		tweenFadeOut3:Play()
		tweenFadeOut4:Play()
		tweenFadeOut5:Play()
		tweenFadeOut6:Play()
		tweenOnLeave1:Play()
		tweenOnLeave2:Play()
		tweenOnLeave3:Play()
		tweenOnLeave4:Play()
		tweenOnLeave5:Play()
		tweenOnLeave6:Play()
		tweenOnLeave7:Play()
		tweenOnLeave8:Play()
		tweenOnLeave12:Play()
		tweenOnLeave13:Play()
	end)
end;
task.spawn(C_7a8);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.f
local function C_7a9()
	local script = G2L["7a9"];
	local TweenService = game:GetService("TweenService")
	local parent = script.Parent
	local button = parent:WaitForChild("TextButton")

	-- Центрируем элемент
	parent.AnchorPoint = Vector2.new(0.5, 0.5)
	parent.Position = UDim2.new(0.5, 0, 0.5, 0)

	-- Добавляем UIScale, если нужно
	local scale = parent:FindFirstChildOfClass("UIScale")
	if not scale then
		scale = Instance.new("UIScale")
		scale.Scale = 1
		scale.Parent = parent
	end

	-- TweenInfo
	local tweenTime = 0.2
	local easing = Enum.EasingStyle.Quad
	local direction = Enum.EasingDirection.Out

	-- Tween'ы
	local tweenHover = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1.04 })
	local tweenLeave = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1 })
	local tweenClick = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 0.95 })

	-- Наведение
	button.MouseEnter:Connect(function()
		tweenLeave:Pause()
		tweenClick:Pause()
		tweenHover:Play()
	end)

	button.MouseLeave:Connect(function()
		tweenHover:Pause()
		tweenClick:Pause()
		tweenLeave:Play()
	end)

	-- Клик
	button.MouseButton1Click:Connect(function()
		tweenHover:Pause()
		tweenLeave:Pause()
		tweenClick:Play()

		task.delay(tweenTime, function()
			tweenClick:Pause()
			tweenLeave:Play()
		end)
	end)
end;
task.spawn(C_7a9);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Visual.UIStroke.UIGradient.LocalScript
local function C_7b3()
	local script = G2L["7b3"];
	local runService = game:GetService("RunService")
	local uiGradient = script.Parent
	local parentFrame = uiGradient.Parent
	local mainGui = parentFrame and parentFrame.Parent

	local updateInterval = 0.05
	local lastUpdate = 0

	runService.Heartbeat:Connect(function(deltaTime)
		if mainGui.BackgroundTransparency > 0.5 then
			parentFrame.Enabled = false
			return
		end

		parentFrame.Enabled = true
		lastUpdate = lastUpdate + deltaTime

		if lastUpdate >= updateInterval then
			uiGradient.Rotation = (uiGradient.Rotation + 1.5) % 360
			lastUpdate = 0
		end
	end)
end;
task.spawn(C_7b3);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.LocalScript
local function C_7b7()
	local script = G2L["7b7"];
	local TweenService = game:GetService("TweenService")
	local button = script.Parent.TextButton -- Кнопка
	local textLabel = script.Parent.TextLabel
	local img = script.Parent.ImageLabel
	local frame = script.Parent
	local frame2 = script.Parent.Parent.Visual
	local textLabel2 = script.Parent.Parent.General.TextLabel
	local img2 = script.Parent.Parent.General.ImageLabel
	local textLabel3 = script.Parent.Parent.Lighting.TextLabel
	local img3 = script.Parent.Parent.Lighting.ImageLabel
	local textLabel4 = script.Parent.Parent.Visual.TextLabel
	local img4 = script.Parent.Parent.Visual.ImageLabel
	local frame3 = script.Parent.Parent.Lighting
	local frame4 = script.Parent.Parent.Visual
	local frame5 = script.Parent.Parent.General
	local frame6 = script.Parent.Parent.Settings
	local textlabel6 = script.Parent.Parent.Settings.TextLabel
	local img6 = script.Parent.Parent.Settings.ImageLabel

	local img7 = script.Parent.Parent.Console.ImageLabel
	local tl7 = script.Parent.Parent.Console.TextLabel
	local fr7 = script.Parent.Parent.Console

	-- Определите параметры анимации
	local tweenInfo = TweenInfo.new(
		0.2, -- Время анимации в секундах
		Enum.EasingStyle.Quad, -- Стиль изменения
		Enum.EasingDirection.Out -- Направление изменения
	)

	-- Цвета для состояния при наведении и уходе
	local colorOnHover = Color3.fromRGB(220, 220, 220)
	local colorOnLeave = Color3.fromRGB(45, 45, 45)

	-- Создание tween для изменения цвета текста и изображения при наведении
	local tweenOnHover = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnHover2 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnHover})

	local tweenOnLeave12 = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnLeave})
	local tweenOnLeave13 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnLeave})

	-- Создание tween для изменения цвета текста и изображения при уходе
	local tweenOnLeave1 = TweenService:Create(textLabel2, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave2 = TweenService:Create(img2, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave3 = TweenService:Create(textLabel3, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave4 = TweenService:Create(img3, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave5 = TweenService:Create(textLabel4, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave6 = TweenService:Create(img4, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave7 = TweenService:Create(textlabel6, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave8 = TweenService:Create(img6, tweenInfo, {ImageColor3 = colorOnHover})


	local tol1 = TweenService:Create(tl7, tweenInfo, {TextColor3 = colorOnHover})
	local tol2 = TweenService:Create(img7, tweenInfo, {ImageColor3 = colorOnHover})
	local tfo1 = TweenService:Create(fr7, tweenInfo, {BackgroundTransparency = 1})

	-- Создание tween для появления и исчезновения фрейма
	local tweenFadeIn = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 0.1})
	local tweenFadeOut2 = TweenService:Create(frame2, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut3 = TweenService:Create(frame3, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut4 = TweenService:Create(frame4, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut5 = TweenService:Create(frame5, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut6 = TweenService:Create(frame6, tweenInfo, {BackgroundTransparency = 1})
	-- Убедитесь, что начальная прозрачность Frame установлена на 1
	frame.BackgroundTransparency = 1

	-- Подключение обработчиков событий
	button.MouseButton1Click:Connect(function()
		-- Плавное появление фрейма
		tweenFadeIn:Play()
		script.Parent.Parent.Parent.Parent.General.Visible = false
		script.Parent.Parent.Parent.Parent.Movement.Visible = true
		script.Parent.Parent.Parent.Parent.Lighting.Visible = false
		script.Parent.Parent.Parent.Parent.Visual.Visible = false
		script.Parent.Parent.Parent.Parent.Settings.Visible = false
		script.Parent.Parent.Parent.Parent.Executor.Visible = false


		tol1:Play()
		tol2:Play()
		tfo1:Play()

		-- Плавное исчезновение фрейма при нажатии на другую кнопку
		-- Здесь добавьте код для скрытия фрейма при нажатии на другую кнопку

		-- Поменяйте цвета текста и изображения при наведении
		tweenFadeOut3:Play()
		tweenFadeOut4:Play()
		tweenFadeOut5:Play()
		tweenFadeOut6:Play()
		tweenOnLeave1:Play()
		tweenOnLeave2:Play()
		tweenOnLeave3:Play()
		tweenOnLeave4:Play()
		tweenOnLeave5:Play()
		tweenOnLeave6:Play()
		tweenOnLeave7:Play()
		tweenOnLeave8:Play()
		tweenOnLeave12:Play()
		tweenOnLeave13:Play()
	end)
end;
task.spawn(C_7b7);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.f
local function C_7b8()
	local script = G2L["7b8"];
	local TweenService = game:GetService("TweenService")
	local parent = script.Parent
	local button = parent:WaitForChild("TextButton")

	-- Центрируем элемент
	parent.AnchorPoint = Vector2.new(0.5, 0.5)
	parent.Position = UDim2.new(0.5, 0, 0.5, 0)

	-- Добавляем UIScale, если нужно
	local scale = parent:FindFirstChildOfClass("UIScale")
	if not scale then
		scale = Instance.new("UIScale")
		scale.Scale = 1
		scale.Parent = parent
	end

	-- TweenInfo
	local tweenTime = 0.2
	local easing = Enum.EasingStyle.Quad
	local direction = Enum.EasingDirection.Out

	-- Tween'ы
	local tweenHover = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1.04 })
	local tweenLeave = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1 })
	local tweenClick = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 0.95 })

	-- Наведение
	button.MouseEnter:Connect(function()
		tweenLeave:Pause()
		tweenClick:Pause()
		tweenHover:Play()
	end)

	button.MouseLeave:Connect(function()
		tweenHover:Pause()
		tweenClick:Pause()
		tweenLeave:Play()
	end)

	-- Клик
	button.MouseButton1Click:Connect(function()
		tweenHover:Pause()
		tweenLeave:Pause()
		tweenClick:Play()

		task.delay(tweenTime, function()
			tweenClick:Pause()
			tweenLeave:Play()
		end)
	end)
end;
task.spawn(C_7b8);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Movement.UIStroke.UIGradient.LocalScript
local function C_7c2()
	local script = G2L["7c2"];
	local runService = game:GetService("RunService")
	local uiGradient = script.Parent
	local parentFrame = uiGradient.Parent
	local mainGui = parentFrame and parentFrame.Parent

	local updateInterval = 0.05
	local lastUpdate = 0

	runService.Heartbeat:Connect(function(deltaTime)
		if mainGui.BackgroundTransparency > 0.5 then
			parentFrame.Enabled = false
			return
		end

		parentFrame.Enabled = true
		lastUpdate = lastUpdate + deltaTime

		if lastUpdate >= updateInterval then
			uiGradient.Rotation = (uiGradient.Rotation + 1.5) % 360
			lastUpdate = 0
		end
	end)
end;
task.spawn(C_7c2);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.LocalScript
local function C_7c7()
	local script = G2L["7c7"];
	local TweenService = game:GetService("TweenService")
	local button = script.Parent.TextButton -- Кнопка
	local textLabel = script.Parent.TextLabel
	local img = script.Parent.ImageLabel
	local frame = script.Parent
	local frame2 = script.Parent.Parent.Visual
	local textLabel2 = script.Parent.Parent.General.TextLabel
	local img2 = script.Parent.Parent.General.ImageLabel
	local textLabel3 = script.Parent.Parent.Movement.TextLabel
	local img3 = script.Parent.Parent.Movement.ImageLabel
	local textLabel4 = script.Parent.Parent.Visual.TextLabel
	local img4 = script.Parent.Parent.Visual.ImageLabel
	local frame3 = script.Parent.Parent.Movement
	local frame4 = script.Parent.Parent.Visual
	local frame5 = script.Parent.Parent.General
	local frame6 = script.Parent.Parent.Settings
	local textlabel6 = script.Parent.Parent.Settings.TextLabel
	local img6 = script.Parent.Parent.Settings.ImageLabel

	local img7 = script.Parent.Parent.Console.ImageLabel
	local tl7 = script.Parent.Parent.Console.TextLabel
	local fr7 = script.Parent.Parent.Console

	-- Определите параметры анимации
	local tweenInfo = TweenInfo.new(
		0.2, -- Время анимации в секундах
		Enum.EasingStyle.Quad, -- Стиль изменения
		Enum.EasingDirection.Out -- Направление изменения
	)

	-- Цвета для состояния при наведении и уходе
	local colorOnHover = Color3.fromRGB(220, 220, 220)
	local colorOnLeave = Color3.fromRGB(45, 45, 45)

	-- Создание tween для изменения цвета текста и изображения при наведении
	local tweenOnHover = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnHover2 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnHover})

	local tweenOnLeave12 = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnLeave})
	local tweenOnLeave13 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnLeave})

	-- Создание tween для изменения цвета текста и изображения при уходе
	local tweenOnLeave1 = TweenService:Create(textLabel2, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave2 = TweenService:Create(img2, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave3 = TweenService:Create(textLabel3, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave4 = TweenService:Create(img3, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave5 = TweenService:Create(textLabel4, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave6 = TweenService:Create(img4, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave8 = TweenService:Create(textlabel6, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave7 = TweenService:Create(img6, tweenInfo, {ImageColor3 = colorOnHover})


	local tol1 = TweenService:Create(tl7, tweenInfo, {TextColor3 = colorOnHover})
	local tol2 = TweenService:Create(img7, tweenInfo, {ImageColor3 = colorOnHover})
	local tfo1 = TweenService:Create(fr7, tweenInfo, {BackgroundTransparency = 1})


	-- Создание tween для появления и исчезновения фрейма
	local tweenFadeIn = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 0.1})
	local tweenFadeOut2 = TweenService:Create(frame2, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut3 = TweenService:Create(frame3, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut4 = TweenService:Create(frame4, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut5 = TweenService:Create(frame5, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut6 = TweenService:Create(frame6, tweenInfo, {BackgroundTransparency = 1})
	-- Убедитесь, что начальная прозрачность Frame установлена на 1
	frame.BackgroundTransparency = 1

	-- Подключение обработчиков событий
	button.MouseButton1Click:Connect(function()
		-- Плавное появление фрейма
		tweenFadeIn:Play()
		script.Parent.Parent.Parent.Parent.General.Visible = false
		script.Parent.Parent.Parent.Parent.Movement.Visible = false
		script.Parent.Parent.Parent.Parent.Lighting.Visible = true
		script.Parent.Parent.Parent.Parent.Settings.Visible = false
		script.Parent.Parent.Parent.Parent.Visual.Visible = false
		script.Parent.Parent.Parent.Parent.Executor.Visible = false


		tol1:Play()
		tol2:Play()
		tfo1:Play()


		-- Плавное исчезновение фрейма при нажатии на другую кнопку
		-- Здесь добавьте код для скрытия фрейма при нажатии на другую кнопку

		-- Поменяйте цвета текста и изображения при наведении
		tweenFadeOut3:Play()
		tweenFadeOut4:Play()
		tweenFadeOut5:Play()
		tweenFadeOut6:Play()
		tweenOnLeave6:Play()
		tweenOnLeave5:Play()
		tweenOnLeave1:Play()
		tweenOnLeave2:Play()
		tweenOnLeave3:Play()
		tweenOnLeave4:Play()
		tweenOnLeave8:Play()
		tweenOnLeave7:Play()
		tweenOnLeave12:Play()
		tweenOnLeave13:Play()
	end)
end;
task.spawn(C_7c7);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.f
local function C_7c8()
	local script = G2L["7c8"];
	local TweenService = game:GetService("TweenService")
	local parent = script.Parent
	local button = parent:WaitForChild("TextButton")

	-- Центрируем элемент
	parent.AnchorPoint = Vector2.new(0.5, 0.5)
	parent.Position = UDim2.new(0.5, 0, 0.5, 0)

	-- Добавляем UIScale, если нужно
	local scale = parent:FindFirstChildOfClass("UIScale")
	if not scale then
		scale = Instance.new("UIScale")
		scale.Scale = 1
		scale.Parent = parent
	end

	-- TweenInfo
	local tweenTime = 0.2
	local easing = Enum.EasingStyle.Quad
	local direction = Enum.EasingDirection.Out

	-- Tween'ы
	local tweenHover = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1.04 })
	local tweenLeave = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1 })
	local tweenClick = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 0.95 })

	-- Наведение
	button.MouseEnter:Connect(function()
		tweenLeave:Pause()
		tweenClick:Pause()
		tweenHover:Play()
	end)

	button.MouseLeave:Connect(function()
		tweenHover:Pause()
		tweenClick:Pause()
		tweenLeave:Play()
	end)

	-- Клик
	button.MouseButton1Click:Connect(function()
		tweenHover:Pause()
		tweenLeave:Pause()
		tweenClick:Play()

		task.delay(tweenTime, function()
			tweenClick:Pause()
			tweenLeave:Play()
		end)
	end)
end;
task.spawn(C_7c8);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Lighting.UIStroke.UIGradient.LocalScript
local function C_7d2()
	local script = G2L["7d2"];
	local runService = game:GetService("RunService")
	local uiGradient = script.Parent
	local parentFrame = uiGradient.Parent
	local mainGui = parentFrame and parentFrame.Parent

	local updateInterval = 0.05
	local lastUpdate = 0

	runService.Heartbeat:Connect(function(deltaTime)
		if mainGui.BackgroundTransparency > 0.5 then
			parentFrame.Enabled = false
			return
		end

		parentFrame.Enabled = true
		lastUpdate = lastUpdate + deltaTime

		if lastUpdate >= updateInterval then
			uiGradient.Rotation = (uiGradient.Rotation + 1.5) % 360
			lastUpdate = 0
		end
	end)

end;
task.spawn(C_7d2);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.LocalScript
local function C_7d6()
	local script = G2L["7d6"];
	local TweenService = game:GetService("TweenService")
	local button = script.Parent.TextButton -- Кнопка
	local textLabel = script.Parent.TextLabel
	local img = script.Parent.ImageLabel
	local frame = script.Parent
	local frame2 = script.Parent.Parent.Visual
	local textLabel2 = script.Parent.Parent.General.TextLabel
	local img2 = script.Parent.Parent.General.ImageLabel
	local textLabel3 = script.Parent.Parent.Movement.TextLabel
	local img3 = script.Parent.Parent.Movement.ImageLabel
	local textLabel4 = script.Parent.Parent.Visual.TextLabel
	local img4 = script.Parent.Parent.Visual.ImageLabel
	local frame3 = script.Parent.Parent.Movement
	local frame4 = script.Parent.Parent.Visual
	local frame5 = script.Parent.Parent.General
	local frame6 = script.Parent.Parent.Lighting
	local textlabel6 = script.Parent.Parent.Lighting.TextLabel
	local img6 = script.Parent.Parent.Lighting.ImageLabel

	local img7 = script.Parent.Parent.Console.ImageLabel
	local tl7 = script.Parent.Parent.Console.TextLabel
	local fr7 = script.Parent.Parent.Console

	-- Определите параметры анимации
	local tweenInfo = TweenInfo.new(
		0.2, -- Время анимации в секундах
		Enum.EasingStyle.Quad, -- Стиль изменения
		Enum.EasingDirection.Out -- Направление изменения
	)

	-- Цвета для состояния при наведении и уходе
	local colorOnHover = Color3.fromRGB(220, 220, 220)
	local colorOnLeave = Color3.fromRGB(45, 45, 45)

	-- Создание tween для изменения цвета текста и изображения при наведении
	local tweenOnHover = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnHover2 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnHover})

	local tweenOnLeave12 = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnLeave})
	local tweenOnLeave13 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnLeave})

	-- Создание tween для изменения цвета текста и изображения при уходе
	local tweenOnLeave1 = TweenService:Create(textLabel2, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave2 = TweenService:Create(img2, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave3 = TweenService:Create(textLabel3, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave4 = TweenService:Create(img3, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave5 = TweenService:Create(textLabel4, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave6 = TweenService:Create(img4, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave7 = TweenService:Create(textlabel6, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave8 = TweenService:Create(img6, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave77 = TweenService:Create(tl7, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave88 = TweenService:Create(img7, tweenInfo, {ImageColor3 = colorOnHover})

	-- Создание tween для появления и исчезновения фрейма
	local tweenFadeIn = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 0.1})
	local tweenFadeOut2 = TweenService:Create(frame2, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut3 = TweenService:Create(frame3, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut4 = TweenService:Create(frame4, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut5 = TweenService:Create(frame5, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut6 = TweenService:Create(frame6, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut7 = TweenService:Create(fr7, tweenInfo, {BackgroundTransparency = 1})
	-- Убедитесь, что начальная прозрачность Frame установлена на 1
	frame.BackgroundTransparency = 1

	-- Подключение обработчиков событий
	button.MouseButton1Click:Connect(function()
		-- Плавное появление фрейма
		tweenFadeIn:Play()
		script.Parent.Parent.Parent.Parent.General.Visible = false
		script.Parent.Parent.Parent.Parent.Movement.Visible = false
		script.Parent.Parent.Parent.Parent.Lighting.Visible = false
		script.Parent.Parent.Parent.Parent.Settings.Visible = true
		script.Parent.Parent.Parent.Parent.Visual.Visible = false
		script.Parent.Parent.Parent.Parent.Executor.Visible = false

		-- Плавное исчезновение фрейма при нажатии на другую кнопку
		-- Здесь добавьте код для скрытия фрейма при нажатии на другую кнопку

		-- Поменяйте цвета текста и изображения при наведении
		tweenFadeOut3:Play()
		tweenFadeOut4:Play()
		tweenFadeOut5:Play()
		tweenFadeOut7:Play()
		tweenOnLeave1:Play()
		tweenOnLeave2:Play()
		tweenOnLeave3:Play()
		tweenOnLeave4:Play()
		tweenOnLeave5:Play()
		tweenOnLeave6:Play()
		tweenOnLeave8:Play()
		tweenOnLeave7:Play()
		tweenOnLeave88:Play()
		tweenOnLeave77:Play()
		tweenFadeOut6:Play()
		tweenOnLeave12:Play()
		tweenOnLeave13:Play()
	end)
end;
task.spawn(C_7d6);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.f
local function C_7d7()
	local script = G2L["7d7"];
	local TweenService = game:GetService("TweenService")
	local parent = script.Parent
	local button = parent:WaitForChild("TextButton")

	-- Центрируем элемент
	parent.AnchorPoint = Vector2.new(0.5, 0.5)
	parent.Position = UDim2.new(0.5, 0, 0.5, 0)

	-- Добавляем UIScale, если нужно
	local scale = parent:FindFirstChildOfClass("UIScale")
	if not scale then
		scale = Instance.new("UIScale")
		scale.Scale = 1
		scale.Parent = parent
	end

	-- TweenInfo
	local tweenTime = 0.2
	local easing = Enum.EasingStyle.Quad
	local direction = Enum.EasingDirection.Out

	-- Tween'ы
	local tweenHover = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1.04 })
	local tweenLeave = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1 })
	local tweenClick = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 0.95 })

	-- Наведение
	button.MouseEnter:Connect(function()
		tweenLeave:Pause()
		tweenClick:Pause()
		tweenHover:Play()
	end)

	button.MouseLeave:Connect(function()
		tweenHover:Pause()
		tweenClick:Pause()
		tweenLeave:Play()
	end)

	-- Клик
	button.MouseButton1Click:Connect(function()
		tweenHover:Pause()
		tweenLeave:Pause()
		tweenClick:Play()

		task.delay(tweenTime, function()
			tweenClick:Pause()
			tweenLeave:Play()
		end)
	end)

end;
task.spawn(C_7d7);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Settings.UIStroke.UIGradient.LocalScript
local function C_7e1()
	local script = G2L["7e1"];
	local runService = game:GetService("RunService")
	local uiGradient = script.Parent
	local parentFrame = uiGradient.Parent
	local mainGui = parentFrame and parentFrame.Parent

	local updateInterval = 0.05
	local lastUpdate = 0

	runService.Heartbeat:Connect(function(deltaTime)
		if mainGui.BackgroundTransparency > 0.5 then
			parentFrame.Enabled = false
			return
		end

		parentFrame.Enabled = true
		lastUpdate = lastUpdate + deltaTime

		if lastUpdate >= updateInterval then
			uiGradient.Rotation = (uiGradient.Rotation + 1.5) % 360
			lastUpdate = 0
		end
	end)

end;
task.spawn(C_7e1);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.LocalScript
local function C_7e5()
	local script = G2L["7e5"];
	local TweenService = game:GetService("TweenService")
	local button = script.Parent.TextButton -- Кнопка
	local textLabel = script.Parent.TextLabel
	local img = script.Parent.ImageLabel
	local frame = script.Parent
	local frame2 = script.Parent.Parent.Visual
	local textLabel2 = script.Parent.Parent.General.TextLabel
	local img2 = script.Parent.Parent.General.ImageLabel
	local textLabel3 = script.Parent.Parent.Movement.TextLabel
	local img3 = script.Parent.Parent.Movement.ImageLabel
	local textLabel4 = script.Parent.Parent.Visual.TextLabel
	local img4 = script.Parent.Parent.Visual.ImageLabel
	local frame3 = script.Parent.Parent.Movement
	local frame4 = script.Parent.Parent.Visual
	local frame5 = script.Parent.Parent.General
	local frame6 = script.Parent.Parent.Lighting
	local textlabel6 = script.Parent.Parent.Lighting.TextLabel
	local img6 = script.Parent.Parent.Lighting.ImageLabel
	local img7 = script.Parent.Parent.Settings.ImageLabel
	local textlabel7 = script.Parent.Parent.Settings.TextLabel
	local frame7 = script.Parent.Parent.Settings

	-- Определите параметры анимации
	local tweenInfo = TweenInfo.new(
		0.2, -- Время анимации в секундах
		Enum.EasingStyle.Quad, -- Стиль изменения
		Enum.EasingDirection.Out -- Направление изменения
	)

	-- Цвета для состояния при наведении и уходе
	local colorOnHover = Color3.fromRGB(220, 220, 220)
	local colorOnLeave = Color3.fromRGB(45, 45, 45)

	-- Создание tween для изменения цвета текста и изображения при наведении
	local tweenOnHover = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnHover2 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnHover})

	local tweenOnLeave12 = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnLeave})
	local tweenOnLeave13 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnLeave})

	-- Создание tween для изменения цвета текста и изображения при уходе
	local tweenOnLeave1 = TweenService:Create(textLabel2, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave2 = TweenService:Create(img2, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave3 = TweenService:Create(textLabel3, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave4 = TweenService:Create(img3, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave5 = TweenService:Create(textLabel4, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave6 = TweenService:Create(img4, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave7 = TweenService:Create(textlabel6, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave8 = TweenService:Create(img6, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave9 = TweenService:Create(textlabel7, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave10 = TweenService:Create(img7, tweenInfo, {ImageColor3 = colorOnHover})

	-- Создание tween для появления и исчезновения фрейма
	local tweenFadeIn = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 0.1})
	local tweenFadeOut2 = TweenService:Create(frame2, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut3 = TweenService:Create(frame3, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut4 = TweenService:Create(frame4, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut5 = TweenService:Create(frame5, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut6 = TweenService:Create(frame6, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut7 = TweenService:Create(frame7, tweenInfo, {BackgroundTransparency = 1})
	-- Убедитесь, что начальная прозрачность Frame установлена на 1
	frame.BackgroundTransparency = 1

	-- Подключение обработчиков событий
	button.MouseButton1Click:Connect(function()
		-- Плавное появление фрейма
		tweenFadeIn:Play()
		script.Parent.Parent.Parent.Parent.General.Visible = false
		script.Parent.Parent.Parent.Parent.Movement.Visible = false
		script.Parent.Parent.Parent.Parent.Lighting.Visible = false
		script.Parent.Parent.Parent.Parent.Settings.Visible = false
		script.Parent.Parent.Parent.Parent.Visual.Visible = false
		script.Parent.Parent.Parent.Parent.Executor.Visible = true

		-- Плавное исчезновение фрейма при нажатии на другую кнопку
		-- Здесь добавьте код для скрытия фрейма при нажатии на другую кнопку

		-- Поменяйте цвета текста и изображения при наведении
		tweenFadeOut3:Play()
		tweenFadeOut7:Play()
		tweenFadeOut4:Play()
		tweenFadeOut5:Play()
		tweenOnLeave1:Play()
		tweenOnLeave2:Play()
		tweenOnLeave3:Play()
		tweenOnLeave4:Play()
		tweenOnLeave5:Play()
		tweenOnLeave6:Play()
		tweenOnLeave8:Play()
		tweenOnLeave7:Play()
		tweenFadeOut6:Play()
		tweenOnLeave12:Play()
		tweenOnLeave13:Play()
		tweenOnLeave10:Play()
		tweenOnLeave9:Play()
	end)
end;
task.spawn(C_7e5);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.f
local function C_7e6()
	local script = G2L["7e6"];
	local TweenService = game:GetService("TweenService")
	local parent = script.Parent
	local button = parent:WaitForChild("TextButton")

	-- Центрируем элемент
	parent.AnchorPoint = Vector2.new(0.5, 0.5)
	parent.Position = UDim2.new(0.5, 0, 0.5, 0)

	-- Добавляем UIScale, если нужно
	local scale = parent:FindFirstChildOfClass("UIScale")
	if not scale then
		scale = Instance.new("UIScale")
		scale.Scale = 1
		scale.Parent = parent
	end

	-- TweenInfo
	local tweenTime = 0.2
	local easing = Enum.EasingStyle.Quad
	local direction = Enum.EasingDirection.Out

	-- Tween'ы
	local tweenHover = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1.04 })
	local tweenLeave = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1 })
	local tweenClick = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 0.95 })

	-- Наведение
	button.MouseEnter:Connect(function()
		tweenLeave:Pause()
		tweenClick:Pause()
		tweenHover:Play()
	end)

	button.MouseLeave:Connect(function()
		tweenHover:Pause()
		tweenClick:Pause()
		tweenLeave:Play()
	end)

	-- Клик
	button.MouseButton1Click:Connect(function()
		tweenHover:Pause()
		tweenLeave:Pause()
		tweenClick:Play()

		task.delay(tweenTime, function()
			tweenClick:Pause()
			tweenLeave:Play()
		end)
	end)

end;
task.spawn(C_7e6);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Console.UIStroke.UIGradient.LocalScript
local function C_7f0()
	local script = G2L["7f0"];
	local runService = game:GetService("RunService")
	local uiGradient = script.Parent
	local parentFrame = uiGradient.Parent
	local mainGui = parentFrame and parentFrame.Parent

	local updateInterval = 0.05
	local lastUpdate = 0

	runService.Heartbeat:Connect(function(deltaTime)
		if mainGui.BackgroundTransparency > 0.5 then
			parentFrame.Enabled = false
			return
		end

		parentFrame.Enabled = true
		lastUpdate = lastUpdate + deltaTime

		if lastUpdate >= updateInterval then
			uiGradient.Rotation = (uiGradient.Rotation + 1.5) % 360
			lastUpdate = 0
		end
	end)

end;
task.spawn(C_7f0);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.LocalScript
local function C_7f4()
	local script = G2L["7f4"];
	local TweenService = game:GetService("TweenService")
	local button = script.Parent.TextButton -- Кнопка
	local textLabel = script.Parent.TextLabel
	local img = script.Parent.ImageLabel
	local frame = script.Parent
	local frame2 = script.Parent.Parent.Visual
	local textLabel2 = script.Parent.Parent.General.TextLabel
	local img2 = script.Parent.Parent.General.ImageLabel
	local textLabel3 = script.Parent.Parent.Movement.TextLabel
	local img3 = script.Parent.Parent.Movement.ImageLabel
	local textLabel4 = script.Parent.Parent.Visual.TextLabel
	local img4 = script.Parent.Parent.Visual.ImageLabel
	local frame3 = script.Parent.Parent.Movement
	local frame4 = script.Parent.Parent.Visual
	local frame5 = script.Parent.Parent.General
	local frame6 = script.Parent.Parent.Lighting
	local textlabel6 = script.Parent.Parent.Lighting.TextLabel
	local img6 = script.Parent.Parent.Lighting.ImageLabel

	local img7 = script.Parent.Parent.Console.ImageLabel
	local tl7 = script.Parent.Parent.Console.TextLabel
	local fr7 = script.Parent.Parent.Console

	-- Определите параметры анимации
	local tweenInfo = TweenInfo.new(
		0.2, -- Время анимации в секундах
		Enum.EasingStyle.Quad, -- Стиль изменения
		Enum.EasingDirection.Out -- Направление изменения
	)

	-- Цвета для состояния при наведении и уходе
	local colorOnHover = Color3.fromRGB(220, 220, 220)
	local colorOnLeave = Color3.fromRGB(45, 45, 45)

	-- Создание tween для изменения цвета текста и изображения при наведении
	local tweenOnHover = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnHover2 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnHover})

	local tweenOnLeave12 = TweenService:Create(textLabel, tweenInfo, {TextColor3 = colorOnLeave})
	local tweenOnLeave13 = TweenService:Create(img, tweenInfo, {ImageColor3 = colorOnLeave})

	-- Создание tween для изменения цвета текста и изображения при уходе
	local tweenOnLeave1 = TweenService:Create(textLabel2, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave2 = TweenService:Create(img2, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave3 = TweenService:Create(textLabel3, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave4 = TweenService:Create(img3, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave5 = TweenService:Create(textLabel4, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave6 = TweenService:Create(img4, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave7 = TweenService:Create(textlabel6, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave8 = TweenService:Create(img6, tweenInfo, {ImageColor3 = colorOnHover})
	local tweenOnLeave77 = TweenService:Create(tl7, tweenInfo, {TextColor3 = colorOnHover})
	local tweenOnLeave88 = TweenService:Create(img7, tweenInfo, {ImageColor3 = colorOnHover})

	-- Создание tween для появления и исчезновения фрейма
	local tweenFadeIn = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = 0.1})
	local tweenFadeOut2 = TweenService:Create(frame2, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut3 = TweenService:Create(frame3, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut4 = TweenService:Create(frame4, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut5 = TweenService:Create(frame5, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut6 = TweenService:Create(frame6, tweenInfo, {BackgroundTransparency = 1})
	local tweenFadeOut7 = TweenService:Create(fr7, tweenInfo, {BackgroundTransparency = 1})
	-- Убедитесь, что начальная прозрачность Frame установлена на 1
	frame.BackgroundTransparency = 1

	-- Подключение обработчиков событий
	button.MouseButton1Click:Connect(function()
		-- Плавное появление фрейма
		tweenFadeIn:Play()
		script.Parent.Parent.Parent.Parent.General.Visible = false
		script.Parent.Parent.Parent.Parent.Movement.Visible = false
		script.Parent.Parent.Parent.Parent.Lighting.Visible = false
		script.Parent.Parent.Parent.Parent.Settings.Visible = true
		script.Parent.Parent.Parent.Parent.Visual.Visible = false
		script.Parent.Parent.Parent.Parent.Executor.Visible = false

		-- Плавное исчезновение фрейма при нажатии на другую кнопку
		-- Здесь добавьте код для скрытия фрейма при нажатии на другую кнопку

		-- Поменяйте цвета текста и изображения при наведении
		tweenFadeOut3:Play()
		tweenFadeOut4:Play()
		tweenFadeOut5:Play()
		tweenFadeOut7:Play()
		tweenOnLeave1:Play()
		tweenOnLeave2:Play()
		tweenOnLeave3:Play()
		tweenOnLeave4:Play()
		tweenOnLeave5:Play()
		tweenOnLeave6:Play()
		tweenOnLeave8:Play()
		tweenOnLeave7:Play()
		tweenOnLeave88:Play()
		tweenOnLeave77:Play()
		tweenFadeOut6:Play()
		tweenOnLeave12:Play()
		tweenOnLeave13:Play()
	end)
end;
task.spawn(C_7f4);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.f
local function C_7f5()
	local script = G2L["7f5"];
	local TweenService = game:GetService("TweenService")
	local parent = script.Parent
	local button = parent:WaitForChild("TextButton")

	-- Центрируем элемент
	parent.AnchorPoint = Vector2.new(0.5, 0.5)
	parent.Position = UDim2.new(0.5, 0, 0.5, 0)

	-- Добавляем UIScale, если нужно
	local scale = parent:FindFirstChildOfClass("UIScale")
	if not scale then
		scale = Instance.new("UIScale")
		scale.Scale = 1
		scale.Parent = parent
	end

	-- TweenInfo
	local tweenTime = 0.2
	local easing = Enum.EasingStyle.Quad
	local direction = Enum.EasingDirection.Out

	-- Tween'ы
	local tweenHover = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1.04 })
	local tweenLeave = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 1 })
	local tweenClick = TweenService:Create(scale, TweenInfo.new(tweenTime, easing, direction), { Scale = 0.95 })

	-- Наведение
	button.MouseEnter:Connect(function()
		tweenLeave:Pause()
		tweenClick:Pause()
		tweenHover:Play()
	end)

	button.MouseLeave:Connect(function()
		tweenHover:Pause()
		tweenClick:Pause()
		tweenLeave:Play()
	end)

	-- Клик
	button.MouseButton1Click:Connect(function()
		tweenHover:Pause()
		tweenLeave:Pause()
		tweenClick:Play()

		task.delay(tweenTime, function()
			tweenClick:Pause()
			tweenLeave:Play()
		end)
	end)

end;
task.spawn(C_7f5);
-- StarterGui.xescriptsXD.Frame.Functions.ScrollingFrame.Hub.UIStroke.UIGradient.LocalScript
local function C_7fd()
	local script = G2L["7fd"];
	local runService = game:GetService("RunService")
	local uiGradient = script.Parent
	local parentFrame = uiGradient.Parent
	local mainGui = parentFrame and parentFrame.Parent

	local updateInterval = 0.05
	local lastUpdate = 0

	runService.Heartbeat:Connect(function(deltaTime)
		if mainGui.BackgroundTransparency > 0.5 then
			parentFrame.Enabled = false
			return
		end

		parentFrame.Enabled = true
		lastUpdate = lastUpdate + deltaTime

		if lastUpdate >= updateInterval then
			uiGradient.Rotation = (uiGradient.Rotation + 1.5) % 360
			lastUpdate = 0
		end
	end)

end;
task.spawn(C_7fd);
-- StarterGui.xescriptsXD.Frame.Executor.LocalScript
local function C_805()
	local script = G2L["805"];
	local TweenService = game:GetService("TweenService")
	local scriptParent = script.Parent
	local scrollingFrame = script.Parent

	-- Более плавная и пружинящая анимация
	local tweenInfo = TweenInfo.new(
		0.45, -- Время (дольше, чтобы было плавнее)
		Enum.EasingStyle.Back, -- Эффект вылета с пружиной
		Enum.EasingDirection.Out
	)

	local resetInfo = TweenInfo.new(
		0.25,
		Enum.EasingStyle.Quad,
		Enum.EasingDirection.Out
	)

	local hasAnimated = false

	-- Устанавливаем "выдвигаемое" начальное положение
	local function resetPosition()
		scrollingFrame.Position = UDim2.new(0.293, 0, 0.20, 0)
	end

	local function animateIn()
		local targetPosition = UDim2.new(0.293, 0, 0.150, 0)
		local tween = TweenService:Create(scrollingFrame, tweenInfo, {Position = targetPosition})
		tween:Play()
	end

	-- Следим за изменением видимости
	scriptParent:GetPropertyChangedSignal("Visible"):Connect(function()
		if scriptParent.Visible and not hasAnimated then
			resetPosition() -- Задаём позицию "до"
			animateIn()     -- Плавно выезжает вверх
			hasAnimated = true
		elseif not scriptParent.Visible then
			hasAnimated = false
		end
	end)
end;
task.spawn(C_805);
-- StarterGui.xescriptsXD.Frame.Executor.Handler
local function C_806()
	local script = G2L["806"];
	local msg = require(script.Parent.Parent.Parent.Storage.message)
	script.Parent.Execute.TextButton.MouseButton1Click:Connect(function()
		local func, err = loadstring(script.Parent.textbox.Text)
		if func then
			func()
			msg.Enabled("XEScripts", "Executed", 2)
		else
			warn("Error", err)
		end
	end)

	script.Parent.Copy.TextButton.MouseButton1Click:Connect(function()
		local text = script.Parent.textbox.Text
		if text ~= "" then
			local success, err = pcall(function()
				setclipboard(text)
			end)

			if success then
				msg.Info("XEScripts", "Copied to clipboard!", 2)
			else
				msg.error("XEScripts", "Exploit API not available", 2)
			end
		else
			msg.error("XEScripts", "Textbox is empty!", 2)
		end
	end)


	script.Parent.Clear.TextButton.MouseButton1Click:Connect(function()
		script.Parent.textbox.Text = ""
		msg.Info("XEScripts", "Cleared", 2)
	end)

end;
task.spawn(C_806);
-- StarterGui.xescriptsXD.Frame.tip handler
local function C_81f()
	local script = G2L["81f"];
	local player = game.Players.LocalPlayer
	local tip = script.Parent:WaitForChild("TIP")
	local activeCount = 0

	local buttons = {
		--visual
		{button = script.Parent.Visual.ScrollingFrame.ESP, text = "Shows players at a distance and behind the wall"},
		{button = script.Parent.Visual.ScrollingFrame.Chams, text = "Default chams from cs2 cheats"},
		{button = script.Parent.Visual.ScrollingFrame.BackTrack, text = "Leaves a backtrack (VISUAL)"},
		{button = script.Parent.Visual.ScrollingFrame.Nametags, text = "Shows players names on top"},
		{button = script.Parent.Visual.ScrollingFrame.Optimizer, text = "Here you can change lighting settings"},
		{button = script.Parent.Visual.ScrollingFrame.Fov, text = "Here you can change the camera fov"},
		{button = script.Parent.Visual.ScrollingFrame.Other, text = "Other options"},
		--player
		{button = script.Parent.Movement.ScrollingFrame.Speedhack, text = "Changes your speed"},
		{button = script.Parent.Movement.ScrollingFrame.Fly, text = "Flying ability"},
		{button = script.Parent.Movement.ScrollingFrame.Other, text = "Other options"},
		{button = script.Parent.Movement.ScrollingFrame.JumpHack, text = "At the moment this not working"},
		{button = script.Parent.Movement.ScrollingFrame.Spinner, text = "You're spinning"},
		{button = script.Parent.Movement.ScrollingFrame.TargetStrafe, text = "Allows you to target the player around"},
		--misc
		{button = script.Parent.Lighting.ScrollingFrame.AntiFling, text = "Prevents the enemy from throwing you off the map"},
		{button = script.Parent.Lighting.ScrollingFrame.Aimbot, text = "This is a normal aimbot, you can customize it to your liking."},
		{button = script.Parent.Lighting.ScrollingFrame.FreeCam, text = "You will be able to fly freely around the world"},
		{button = script.Parent.Lighting.ScrollingFrame.HITSFX, text = "When you click on a player, a sound is played"},
		{button = script.Parent.Lighting.ScrollingFrame.Other, text = "Other options"},
		{button = script.Parent.Lighting.ScrollingFrame.AutoJump, text = "Test"},
		{button = script.Parent.Lighting.ScrollingFrame.TouchFling, text = "you will be able to throw players off the map when you touch them"},
		--settings
		{button = script.Parent.Settings.ScrollingFrame.ClickGui, text = "Here you can change the ui background"},
		{button = script.Parent.Settings.ScrollingFrame.Effects, text = "You can change the ui effects"},
		{button = script.Parent.Settings.ScrollingFrame.Config, text = "DISABLED, follow the discord server to find out when the update will be"},
	}

	local function showTip(text)
		activeCount += 1
		tip.Visible = true
		tip.Text = text
	end

	local function hideTip()
		activeCount -= 1
		if activeCount <= 0 then
			activeCount = 0
			tip.Visible = false
		end
	end

	for _, info in ipairs(buttons) do
		info.button.MouseEnter:Connect(function()
			showTip(info.text)
		end)
		info.button.MouseLeave:Connect(function()
			hideTip()
		end)
	end

end;
task.spawn(C_81f);
-- StarterGui.xescriptsXD.KeyLogger.dragscript
local function C_821()
	local script = G2L["821"];
	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.1
	local dragStart = nil
	local startPos = nil

	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end

	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)


	script.Parent.Close2.MouseButton1Click:Connect(function()
		script.Parent.Visible = false
	end)

	script.Parent.Close.MouseButton1Click:Connect(function()
		script.Parent.Visible = false
	end)



	print([[
		
		                ██╗░░██╗███████╗░██████╗░█████╗░██████╗░██╗██████╗░████████╗░██████╗
		                ╚██╗██╔╝██╔════╝██╔════╝██╔══██╗██╔══██╗██║██╔══██╗╚══██╔══╝██╔════╝
		                ░╚███╔╝░█████╗░░╚█████╗░██║░░╚═╝██████╔╝██║██████╔╝░░░██║░░░╚█████╗░
		                ░██╔██╗░██╔══╝░░░╚═══██╗██║░░██╗██╔══██╗██║██╔═══╝░░░░██║░░░░╚═══██╗
		                ██╔╝╚██╗███████╗██████╔╝╚█████╔╝██║░░██║██║██║░░░░░░░░██║░░░██████╔╝
		                ╚═╝░░╚═╝╚══════╝╚═════╝░░╚════╝░╚═╝░░╚═╝╚═╝╚═╝░░░░░░░░╚═╝░░░╚═════╝░
		]])

	print("                                     Version: " .. script.Parent.Parent.Storage.Version.Value)

end;
task.spawn(C_821);
-- StarterGui.xescriptsXD.KeyLogger.Activate.LocalScript
local function C_846()
	local script = G2L["846"];
	local HttpService = game:GetService("HttpService")
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")

	local keyUrl = "XES0SYSENSHIEA8NU5"
	local expirationDate = os.time({year = 2025, month = 9, day = 13}) -- Дата истечения ключа
	local currentTime = os.time()
	local modulescript = require(script.Parent.Parent.Parent.Storage:FindFirstChild("a"))
	local message = require(script.Parent.Parent.Parent.Storage.message)

	-- Текущая версия игры, которую вы хотите хранить в скрипте
	local currentVersion = script.Parent.Parent.Parent.Storage.Version.Value

	-- URL для получения данных версии
	local versionUrl = "https://raw.githubusercontent.com/XEScripts/XEScripts-Global/refs/heads/main/version.json"

	-- Функция для отображения уведомлений
	local function showCoreMessage(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Icon = "rbxassetid://99867847880382",
			Duration = 3
		})
	end

	-- Функция для проверки новой версии
	local function checkForNewVersion()
		local success, response = pcall(function()
			return HttpService:GetAsync(versionUrl)
		end)

		if success then
			-- Декодируем JSON строку в таблицу
			local versionData
			local successDecode, errorMsg = pcall(function()
				versionData = HttpService:JSONDecode(response)
			end)

			if successDecode then
				-- Получаем последнюю доступную версию из JSON
				local latestVersion = versionData.version

				-- Проверяем, если последняя версия отличается от текущей
				if latestVersion ~= currentVersion then
					message.Info("XEScripts", "You are on the latest version: " .. currentVersion, 2)
				end
			else
				message.error("XEScripts", "Failed to decode version data. Please try again.", 2)
			end
		else
			message.error("XEScripts", "Unable to check for updates. Please try again later.", 2)
		end
	end

	local keyBox = script.Parent.Parent.KeyBox

	keyBox:GetPropertyChangedSignal("Text"):Connect(function()
		keyBox.Text = keyBox.Text:gsub("%s", "") -- Удаляет пробелы
	end)

	script.Parent.MouseButton1Click:Connect(function()
		local inputKey = script.Parent.Parent.KeyBox.Text
		local timeLeft = expirationDate - os.time()

		if inputKey == keyUrl then
			modulescript.enabledd = true
			if timeLeft > 0 then
				-- Ключ ещё действителен
				script.Parent.Parent.Visible = false
				script.Parent.Parent.Parent.Frame.Visible = true
				script.Parent.Parent.Activated.Value = true

				message.Info("XEScripts", "Welcome!", 2)
				wait(0.1)
				message.Info("XEScripts", "Your current version - " .. currentVersion, 2)
				wait(0.1)
				message.Info("XEScripts", "Key expires in " .. math.floor(timeLeft / 86400) .. " days.", 2)
				wait(0.1)
				message.Info("XEScripts", "Have a nice game :)", 2)
				script.Parent.Parent.Parent.Frame.UID.TextLabel.LocalScript:Destroy()
				-- Проверка на новую версию
				checkForNewVersion()
			else
				showCoreMessage("XEScripts", "Key expired! Access denied.")
				script.Parent.Parent.Activated.Value = false
			end
		elseif inputKey == "XESVAWFCHBQ3OCGBSM" then
			message.Info("XEScripts", "Key updated! Please get a new key from the Discord server", 2)
		else
			message.error("XEScripts", "Invalid key! Please get a key from the Discord server", 2)
		end
	end)

	RunService.RenderStepped:Connect(function()
		if script.Parent.Parent.Parent.Frame.Visible and modulescript.enabledd == false then
			showCoreMessage("XEScripts", "Do not try to hack this script.")
			script.Parent.Parent.Parent:Destroy()
		elseif not script.Parent.Parent.Parent.Storage:FindFirstChild("a") then
			showCoreMessage("XEScripts", "Do not try to hack this script.")
			script.Parent.Parent.Parent:Destroy()
		else
			return
		end
	end)
end;
task.spawn(C_846);
-- StarterGui.xescriptsXD.KeyLogger.UIStroke.UIGradient.LocalScript
local function C_850()
	local script = G2L["850"];

end;
task.spawn(C_850);
-- StarterGui.xescriptsXD.KeyLogger.Copy Link.LocalScript
local function C_855()
	local script = G2L["855"];
	local StarterGui = game:GetService("StarterGui")
	local RunService = game:GetService("RunService")

	local modulescript = require(script.Parent.Parent.Parent.Storage:FindFirstChild("a"))
	local message = require(script.Parent.Parent.Parent.Storage.message)
	-- Функция для отображения уведомлений
	local function showCoreMessage(title, text)
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text,
			Duration = 2
		})
	end
	script.Parent.MouseButton1Click:Connect(function()
		pcall(function()
			setclipboard("https://discord.gg/9svYUyVWqz")
			message.Info("XEScripts", "Copied!", 2)
		end)
	end)

	RunService.RenderStepped:Connect(function()
		if script.Parent.Parent.Parent.Frame.Visible and modulescript.enabledd == false then
			showCoreMessage("XEScripts", "Do not try to hack this script.")
			script.Parent.Parent.Parent:Destroy()
		elseif not script.Parent.Parent.Parent.Storage:FindFirstChild("a") then
			showCoreMessage("XEScripts", "Do not try to hack this script.")
			script.Parent.Parent.Parent:Destroy()
		else
			return
		end
	end)
end;
task.spawn(C_855);

return G2L["1"], require;
